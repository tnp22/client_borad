   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"print.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "source\\lcd\\print.c"
  20              		.section	.text._sputc,"ax",%progbits
  21              		.align	1
  22              		.global	_sputc
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_sputc:
  28              	.LVL0:
  29              	.LFB1:
   1:source\lcd/print.c **** /********************************************************************************/
   2:source\lcd/print.c **** /* print.c                                                                      */
   3:source\lcd/print.c **** /* STM32F407ZGT6                                                                */
   4:source\lcd/print.c **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:source\lcd/print.c **** /* stm32f4x_test								*/
   6:source\lcd/print.c **** /********************************************************************************/
   7:source\lcd/print.c **** #include <stdarg.h>
   8:source\lcd/print.c **** 
   9:source\lcd/print.c **** 
  10:source\lcd/print.c **** //void _stfp(double d, void *x);
  11:source\lcd/print.c **** unsigned int strlen (const char *str);
  12:source\lcd/print.c **** int errno;
  13:source\lcd/print.c **** 
  14:source\lcd/print.c **** typedef struct {
  15:source\lcd/print.c ****       char *ptr;
  16:source\lcd/print.c **** } __attribute__((packed)) StringOutputFile;
  17:source\lcd/print.c **** 
  18:source\lcd/print.c **** int _serror(char *f);
  19:source\lcd/print.c **** 
  20:source\lcd/print.c **** 
  21:source\lcd/print.c **** int _sputc1(int ch, char *fp)
  22:source\lcd/print.c **** {
  23:source\lcd/print.c ****       char *sf = (char *)fp;
  24:source\lcd/print.c ****       char *op = sf;
  25:source\lcd/print.c ****       int r = *op++ = ch;
  26:source\lcd/print.c ****       sf = op;
  27:source\lcd/print.c ****       return r;
  28:source\lcd/print.c **** }
  29:source\lcd/print.c **** 
  30:source\lcd/print.c **** 
  31:source\lcd/print.c **** int _sputc(int ch, char *fp)
  32:source\lcd/print.c **** {
  30              		.loc 1 32 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  33:source\lcd/print.c ****       StringOutputFile *sf = (StringOutputFile *)fp;      
  35              		.loc 1 33 7 view .LVU1
  34:source\lcd/print.c ****       char *op = sf->ptr;
  36              		.loc 1 34 7 view .LVU2
  35:source\lcd/print.c ****       int r = *op++ = ch;
  37              		.loc 1 35 7 view .LVU3
  38              		.loc 1 35 21 is_stmt 0 view .LVU4
  39 0000 0B68     		ldr	r3, [r1]	@ unaligned
  40 0002 03F8010B 		strb	r0, [r3], #1
  41              	.LVL1:
  36:source\lcd/print.c ****       sf->ptr = op;
  42              		.loc 1 36 7 is_stmt 1 view .LVU5
  37:source\lcd/print.c ****       return r;
  38:source\lcd/print.c **** }
  43              		.loc 1 38 1 is_stmt 0 view .LVU6
  44 0006 C0B2     		uxtb	r0, r0
  45              	.LVL2:
  36:source\lcd/print.c ****       sf->ptr = op;
  46              		.loc 1 36 15 view .LVU7
  47 0008 0B60     		str	r3, [r1]	@ unaligned
  37:source\lcd/print.c ****       return r;
  48              		.loc 1 37 7 is_stmt 1 view .LVU8
  49              		.loc 1 38 1 is_stmt 0 view .LVU9
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE1:
  54              		.section	.text._serror,"ax",%progbits
  55              		.align	1
  56              		.global	_serror
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  61              	_serror:
  62              	.LVL3:
  63              	.LFB2:
  39:source\lcd/print.c **** 
  40:source\lcd/print.c **** 
  41:source\lcd/print.c **** #define IGNORE(x) ((x)=(x))
  42:source\lcd/print.c **** #define DecimalPoint '.'
  43:source\lcd/print.c **** 
  44:source\lcd/print.c **** 
  45:source\lcd/print.c **** int _serror(char *f)
  46:source\lcd/print.c **** {
  64              		.loc 1 46 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  47:source\lcd/print.c ****       IGNORE(f);
  69              		.loc 1 47 7 view .LVU11
  48:source\lcd/print.c ****       return 0;
  70              		.loc 1 48 7 view .LVU12
  49:source\lcd/print.c **** }
  71              		.loc 1 49 1 is_stmt 0 view .LVU13
  72 0000 0020     		movs	r0, #0
  73              	.LVL4:
  74              		.loc 1 49 1 view .LVU14
  75 0002 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE2:
  79              		.section	.text._sputc1,"ax",%progbits
  80              		.align	1
  81              		.global	_sputc1
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  86              	_sputc1:
  87              	.LVL5:
  88              	.LFB0:
  22:source\lcd/print.c ****       char *sf = (char *)fp;
  89              		.loc 1 22 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  23:source\lcd/print.c ****       char *op = sf;
  94              		.loc 1 23 7 view .LVU16
  24:source\lcd/print.c ****       int r = *op++ = ch;
  95              		.loc 1 24 7 view .LVU17
  25:source\lcd/print.c ****       sf = op;
  96              		.loc 1 25 7 view .LVU18
  25:source\lcd/print.c ****       sf = op;
  97              		.loc 1 25 21 is_stmt 0 view .LVU19
  98 0000 0870     		strb	r0, [r1]
  99              	.LVL6:
  26:source\lcd/print.c ****       return r;
 100              		.loc 1 26 7 is_stmt 1 view .LVU20
  27:source\lcd/print.c **** }
 101              		.loc 1 27 7 view .LVU21
  28:source\lcd/print.c **** 
 102              		.loc 1 28 1 is_stmt 0 view .LVU22
 103 0002 C0B2     		uxtb	r0, r0
 104              	.LVL7:
  28:source\lcd/print.c **** 
 105              		.loc 1 28 1 view .LVU23
 106 0004 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE0:
 110              		.section	.text.is_digit,"ax",%progbits
 111              		.align	1
 112              		.global	is_digit
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	is_digit:
 118              	.LVL8:
 119              	.LFB3:
  50:source\lcd/print.c **** 
  51:source\lcd/print.c **** 
  52:source\lcd/print.c **** typedef struct {
  53:source\lcd/print.c ****       int flags;
  54:source\lcd/print.c ****       char *prefix;
  55:source\lcd/print.c ****       int precision;
  56:source\lcd/print.c ****       int before_dot;
  57:source\lcd/print.c ****       int after_dot;
  58:source\lcd/print.c ****       double d;
  59:source\lcd/print.c **** } fp_print_rec;
  60:source\lcd/print.c **** 
  61:source\lcd/print.c **** 
  62:source\lcd/print.c **** typedef int fp_print(int ch, char buff[], fp_print_rec *p);
  63:source\lcd/print.c **** 
  64:source\lcd/print.c **** 
  65:source\lcd/print.c **** typedef struct {
  66:source\lcd/print.c ****       fp_print_rec fpr;
  67:source\lcd/print.c ****       fp_print *fn;
  68:source\lcd/print.c ****       int (*putc)(int, char *);
  69:source\lcd/print.c ****       int (*ferror)(char *);
  70:source\lcd/print.c ****       char *hextab;
  71:source\lcd/print.c ****       int width;
  72:source\lcd/print.c ****       unsigned long long llval;
  73:source\lcd/print.c **** } printf_display_rec;
  74:source\lcd/print.c **** 
  75:source\lcd/print.c **** #define _LJUSTIFY         0x1
  76:source\lcd/print.c **** #define _SIGNED           0x2
  77:source\lcd/print.c **** #define _BLANKER          0x4
  78:source\lcd/print.c **** #define _VARIANT          0x8
  79:source\lcd/print.c **** #define _PRECGIVEN       0x10
  80:source\lcd/print.c **** #define _LONGSPEC        0x20
  81:source\lcd/print.c **** #define _LLSPEC          0x40
  82:source\lcd/print.c **** #define _SHORTSPEC       0x80
  83:source\lcd/print.c **** #define _PADZERO        0x100    /* *** DEPRECATED FEATURE *** */
  84:source\lcd/print.c **** #define _FPCONV         0x200
  85:source\lcd/print.c **** #define intofdigit(x) ((x)-'0')
  86:source\lcd/print.c **** 
  87:source\lcd/print.c **** #define xputc(dr, ch, f) (dr->putc(ch, f))
  88:source\lcd/print.c **** 
  89:source\lcd/print.c **** #define pr_padding(dr, ch, n, f)  while (--n>=0) charcount++, xputc(dr, ch, f);
  90:source\lcd/print.c **** 
  91:source\lcd/print.c **** #define pre_padding(dr, f)                                                \
  92:source\lcd/print.c ****         if (!(flags&_LJUSTIFY))                                           \
  93:source\lcd/print.c ****         {   char padchar = flags & _PADZERO ? '0' : ' ';                  \
  94:source\lcd/print.c ****             pr_padding(dr, padchar, width, f); }
  95:source\lcd/print.c **** 
  96:source\lcd/print.c **** #define post_padding(dr, f)                                               \
  97:source\lcd/print.c ****         if (flags&_LJUSTIFY)                                              \
  98:source\lcd/print.c ****         {   pr_padding(dr, ' ', width, f); }
  99:source\lcd/print.c **** #define FLOATING_WIDTH 18
 100:source\lcd/print.c **** typedef enum { fp_ord, fp_nan, fp_inf } fp_type;
 101:source\lcd/print.c **** 
 102:source\lcd/print.c **** int is_digit (int c)
 103:source\lcd/print.c **** {
 120              		.loc 1 103 1 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 104:source\lcd/print.c ****       return (unsigned int)(c - '0') <= 9;
 125              		.loc 1 104 7 view .LVU25
 126              		.loc 1 104 31 is_stmt 0 view .LVU26
 127 0000 3038     		subs	r0, r0, #48
 128              	.LVL9:
 105:source\lcd/print.c **** }
 129              		.loc 1 105 1 view .LVU27
 130 0002 0928     		cmp	r0, #9
 131 0004 8CBF     		ite	hi
 132 0006 0020     		movhi	r0, #0
 133              	.LVL10:
 134              		.loc 1 105 1 view .LVU28
 135 0008 0120     		movls	r0, #1
 136 000a 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE3:
 140              		.section	.rodata.__vfprintf.str1.1,"aMS",%progbits,1
 141              	.LC0:
 142 0000 305800   		.ascii	"0X\000"
 143              	.LC1:
 144 0003 00       		.ascii	"\000"
 145              	.LC2:
 146 0004 307800   		.ascii	"0x\000"
 147              	.LC3:
 148 0007 4000     		.ascii	"@\000"
 149              	.LC4:
 150 0009 3000     		.ascii	"0\000"
 151              	.LC5:
 152 000b 2B00     		.ascii	"+\000"
 153              	.LC6:
 154 000d 2D00     		.ascii	"-\000"
 155              	.LC7:
 156 000f 2000     		.ascii	" \000"
 157              	.LC8:
 158 0011 30313233 		.ascii	"0123456789ABCDEF\000"
 158      34353637 
 158      38394142 
 158      43444546 
 158      00
 159              	.LC9:
 160 0022 30313233 		.ascii	"0123456789abcdef\000"
 160      34353637 
 160      38396162 
 160      63646566 
 160      00
 161              		.global	__aeabi_uldivmod
 162              		.section	.text.__vfprintf,"ax",%progbits
 163              		.align	1
 164              		.global	__vfprintf
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	__vfprintf:
 170              	.LVL11:
 171              	.LFB5:
 106:source\lcd/print.c **** 
 107:source\lcd/print.c **** 
 108:source\lcd/print.c **** static int printf_display (char *p, int ch, printf_display_rec *dr, unsigned int v)
 109:source\lcd/print.c **** {
 110:source\lcd/print.c ****       int len = 0, charcount = 0;
 111:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 112:source\lcd/print.c ****       int flags = dr->fpr.flags;
 113:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 114:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 115:source\lcd/print.c ****       switch (ch) {
 116:source\lcd/print.c **** 	 case 'p':
 117:source\lcd/print.c **** 	 case 'X':
 118:source\lcd/print.c **** 	 case 'x':
 119:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 120:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 121:source\lcd/print.c **** 	      while (w != 0) {
 122:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 123:source\lcd/print.c **** 		    w = w >> 4;
 124:source\lcd/print.c **** 	      }
 125:source\lcd/print.c **** 	   } else {
 126:source\lcd/print.c **** 	      while (v != 0) {
 127:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 128:source\lcd/print.c **** 		    v = v >> 4;
 129:source\lcd/print.c **** 	      }
 130:source\lcd/print.c **** 	   }
 131:source\lcd/print.c **** 	   break;
 132:source\lcd/print.c **** 	 case 'o':
 133:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 134:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 135:source\lcd/print.c **** 	      while (w != 0) {
 136:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 137:source\lcd/print.c **** 		    w = w >> 3;
 138:source\lcd/print.c **** 	      }
 139:source\lcd/print.c **** 	   } else {
 140:source\lcd/print.c **** 	      while (v != 0) {
 141:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 142:source\lcd/print.c **** 		    v = v >> 3;
 143:source\lcd/print.c **** 	      }
 144:source\lcd/print.c **** 	   }
 145:source\lcd/print.c **** 	   if (flags & _VARIANT) dr->fpr.precision--;
 146:source\lcd/print.c **** 	   break;
 147:source\lcd/print.c **** 	 case 'u':
 148:source\lcd/print.c **** 	 case 'i':
 149:source\lcd/print.c **** 	 case 'd':
 150:source\lcd/print.c **** 	   if (flags & _LLSPEC) {
 151:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 152:source\lcd/print.c **** 	      while (w != 0) {
 153:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 154:source\lcd/print.c ****                     w = w / 10;
 155:source\lcd/print.c ****               }
 156:source\lcd/print.c ****            } else {
 157:source\lcd/print.c ****               while (v != 0) {
 158:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 159:source\lcd/print.c **** 		    v = v / 10;
 160:source\lcd/print.c **** 	      }
 161:source\lcd/print.c **** 	   }
 162:source\lcd/print.c **** 	   break;
 163:source\lcd/print.c ****          default:
 164:source\lcd/print.c **** 	   buff[0] = '0';
 165:source\lcd/print.c ****            buff[1] = DecimalPoint;
 166:source\lcd/print.c ****            buff[2] = '0';
 167:source\lcd/print.c ****            len = 3;
 168:source\lcd/print.c ****            break;
 169:source\lcd/print.c ****       }
 170:source\lcd/print.c ****       {
 171:source\lcd/print.c ****       int precision;
 172:source\lcd/print.c ****       int width = dr->width;
 173:source\lcd/print.c ****       if (flags & _FPCONV) {
 174:source\lcd/print.c **** 	 precision = 0;
 175:source\lcd/print.c **** 	 if (dr->fpr.before_dot>0) precision = dr->fpr.before_dot-1;
 176:source\lcd/print.c **** 	 if (dr->fpr.after_dot>0) precision += dr->fpr.after_dot-1;
 177:source\lcd/print.c ****       } else {
 178:source\lcd/print.c ****          precision = dr->fpr.precision;
 179:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 180:source\lcd/print.c ****       }
 181:source\lcd/print.c ****       width -= (precision + len + strlen(dr->fpr.prefix));
 182:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 183:source\lcd/print.c ****       {
 184:source\lcd/print.c ****       int c;                                      /* prefix    */
 185:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 186:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 187:source\lcd/print.c ****       }
 188:source\lcd/print.c ****       pre_padding(dr, p);
 189:source\lcd/print.c ****       if (flags & _FPCONV) {
 190:source\lcd/print.c **** 	 int i, c;
 191:source\lcd/print.c ****          for (i = 0; i<len; i++) {
 192:source\lcd/print.c **** 	     switch (c = buff[i]) {
 193:source\lcd/print.c ****                 case '<':
 194:source\lcd/print.c **** 		  pr_padding(dr, '0', dr->fpr.before_dot, p);
 195:source\lcd/print.c **** 		  break;
 196:source\lcd/print.c **** 		case '>':
 197:source\lcd/print.c **** 	       	  pr_padding(dr, '0', dr->fpr.after_dot, p);
 198:source\lcd/print.c **** 	          break;
 199:source\lcd/print.c **** 	        default:
 200:source\lcd/print.c **** 	      	  xputc(dr, c, p);
 201:source\lcd/print.c **** 	          charcount++;
 202:source\lcd/print.c **** 	          break;
 203:source\lcd/print.c **** 	     }
 204:source\lcd/print.c **** 	 }
 205:source\lcd/print.c ****       } else {
 206:source\lcd/print.c **** 	 pr_padding(dr, '0', precision, p);
 207:source\lcd/print.c **** 	 charcount += len;
 208:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 209:source\lcd/print.c ****       }
 210:source\lcd/print.c ****       post_padding(dr, p);
 211:source\lcd/print.c ****       return charcount;
 212:source\lcd/print.c ****       }
 213:source\lcd/print.c **** }
 214:source\lcd/print.c **** 
 215:source\lcd/print.c **** 
 216:source\lcd/print.c **** int __vfprintf (char *p, const char *fmt, va_list args, printf_display_rec *dr)
 217:source\lcd/print.c **** {
 172              		.loc 1 217 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 64
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 217 1 is_stmt 0 view .LVU30
 177 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 178              		.cfi_def_cfa_offset 36
 179              		.cfi_offset 4, -36
 180              		.cfi_offset 5, -32
 181              		.cfi_offset 6, -28
 182              		.cfi_offset 7, -24
 183              		.cfi_offset 8, -20
 184              		.cfi_offset 9, -16
 185              		.cfi_offset 10, -12
 186              		.cfi_offset 11, -8
 187              		.cfi_offset 14, -4
 188 0004 91B0     		sub	sp, sp, #68
 189              		.cfi_def_cfa_offset 104
 190              		.loc 1 217 1 view .LVU31
 191 0006 0E46     		mov	r6, r1
 192 0008 0190     		str	r0, [sp, #4]
 193 000a 1C46     		mov	r4, r3
 194 000c 9046     		mov	r8, r2
 195              	.LVL12:
 218:source\lcd/print.c ****       int ch, charcount = 0;
 196              		.loc 1 218 7 is_stmt 1 view .LVU32
 219:source\lcd/print.c ****       while ((ch = *fmt++) != 0) {
 197              		.loc 1 219 7 view .LVU33
 218:source\lcd/print.c ****       int ch, charcount = 0;
 198              		.loc 1 218 15 is_stmt 0 view .LVU34
 199 000e 4FF00009 		mov	r9, #0
 200              	.LVL13:
 201              	.L6:
 202              		.loc 1 219 28 is_stmt 1 view .LVU35
 203              		.loc 1 219 18 is_stmt 0 view .LVU36
 204 0012 16F8015B 		ldrb	r5, [r6], #1	@ zero_extendqisi2
 205              	.LVL14:
 206              		.loc 1 219 28 view .LVU37
 207 0016 4DB9     		cbnz	r5, .L141
 220:source\lcd/print.c ****       	    if (ch != '%') {
 221:source\lcd/print.c ****       	       xputc(dr, ch, p);
 222:source\lcd/print.c ****       	       charcount++;
 223:source\lcd/print.c ****       	    } else {
 224:source\lcd/print.c ****       	       int flags = 0, width = 0;
 225:source\lcd/print.c ****                unsigned int v = 0;
 226:source\lcd/print.c ****                for (;;) {
 227:source\lcd/print.c ****                    switch (ch = *fmt++) {
 228:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 229:source\lcd/print.c ****                         continue;
 230:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 231:source\lcd/print.c ****                         continue;
 232:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 233:source\lcd/print.c ****                         continue;
 234:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 235:source\lcd/print.c ****                         continue;
 236:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 237:source\lcd/print.c ****                         continue;
 238:source\lcd/print.c ****                       default:
 239:source\lcd/print.c ****                         break;
 240:source\lcd/print.c ****                    }
 241:source\lcd/print.c ****                    break;
 242:source\lcd/print.c ****                }
 243:source\lcd/print.c ****                {
 244:source\lcd/print.c ****                int t = 0;
 245:source\lcd/print.c ****                if (ch == '*') {
 246:source\lcd/print.c ****                   t = va_arg(args, int);
 247:source\lcd/print.c ****                   if (t < 0) {
 248:source\lcd/print.c ****                      t = - t;
 249:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 250:source\lcd/print.c ****                   }
 251:source\lcd/print.c ****                   ch = *fmt++;
 252:source\lcd/print.c ****                } else {
 253:source\lcd/print.c ****                	  while (is_digit(ch)) {
 254:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 255:source\lcd/print.c ****                         ch = *fmt++;
 256:source\lcd/print.c ****                   }
 257:source\lcd/print.c ****                }
 258:source\lcd/print.c ****                width = t>=0 ? t : 0;                 /* disallow -ve arg */
 259:source\lcd/print.c ****                }
 260:source\lcd/print.c ****                if (ch == '.') {                           /* precision spec */
 261:source\lcd/print.c ****                   int t = 0;
 262:source\lcd/print.c ****                   ch = *fmt++;
 263:source\lcd/print.c ****                   if (ch == '*') {
 264:source\lcd/print.c ****                      t = va_arg(args, int);
 265:source\lcd/print.c ****                      ch = *fmt++;
 266:source\lcd/print.c ****                   } else {
 267:source\lcd/print.c ****                      while (is_digit(ch)) {
 268:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 269:source\lcd/print.c ****                            ch = *fmt++;
 270:source\lcd/print.c ****                      }
 271:source\lcd/print.c ****                   }
 272:source\lcd/print.c ****                   if (t >= 0) flags |= _PRECGIVEN, dr->fpr.precision = t;
 273:source\lcd/print.c ****                }
 274:source\lcd/print.c ****                if (ch == 'l' || ch == 'L') {
 275:source\lcd/print.c ****                   ch = *fmt++;
 276:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 277:source\lcd/print.c ****                      flags |= _LLSPEC;
 278:source\lcd/print.c ****                      ch = *fmt++;
 279:source\lcd/print.c ****                   } else {
 280:source\lcd/print.c ****                     flags |= _LONGSPEC;
 281:source\lcd/print.c ****                   }
 282:source\lcd/print.c ****                } else if (ch == 'h') {
 283:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 284:source\lcd/print.c ****                   ch = *fmt++;
 285:source\lcd/print.c ****                }
 286:source\lcd/print.c ****                switch (ch) {
 287:source\lcd/print.c ****                   case 'c':
 288:source\lcd/print.c ****                   default:                  	
 289:source\lcd/print.c ****                     ch = va_arg(args, int);
 290:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 291:source\lcd/print.c ****                     pre_padding(dr, p);
 292:source\lcd/print.c ****                     xputc(dr, ch, p);
 293:source\lcd/print.c ****                     charcount++;
 294:source\lcd/print.c ****                     post_padding(dr, p);
 295:source\lcd/print.c ****                     continue;
 296:source\lcd/print.c ****                   case 0:     fmt--;
 297:source\lcd/print.c ****                     continue;
 298:source\lcd/print.c ****                   case 'n':
 299:source\lcd/print.c ****                     if (flags & _SHORTSPEC) *va_arg(args, short *) = (short)charcount;
 300:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 301:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 302:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 303:source\lcd/print.c ****                     continue;
 304:source\lcd/print.c ****                   case 's':
 305:source\lcd/print.c ****                   {
 306:source\lcd/print.c ****                     char *str = va_arg(args, char *);
 307:source\lcd/print.c ****                     int i, n;
 308:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 309:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 310:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 311:source\lcd/print.c ****                     } else n = strlen(str);
 312:source\lcd/print.c ****                     width -= n;
 313:source\lcd/print.c ****                     pre_padding(dr, p);
 314:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 315:source\lcd/print.c ****                     charcount += n;
 316:source\lcd/print.c ****                     post_padding(dr, p);
 317:source\lcd/print.c ****                   }
 318:source\lcd/print.c ****                     continue;
 319:source\lcd/print.c ****                   case 'X':
 320:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 321:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 322:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 323:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 324:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 325:source\lcd/print.c ****                     break;
 326:source\lcd/print.c ****                   case 'x':
 327:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 328:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 329:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 330:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 331:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 332:source\lcd/print.c ****                     break;
 333:source\lcd/print.c ****                   case 'p':
 334:source\lcd/print.c ****                     v = (unsigned int)va_arg(args, void *);
 335:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 336:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 337:source\lcd/print.c ****                     dr->fpr.precision = 8;
 338:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 339:source\lcd/print.c ****                     break;
 340:source\lcd/print.c ****                   case 'o':
 341:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 342:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 343:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 344:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 345:source\lcd/print.c ****                     break;
 346:source\lcd/print.c ****                   case 'u':
 347:source\lcd/print.c ****                     if (flags & _LLSPEC) dr->llval = va_arg(args, long long);else v = va_arg(args, 
 348:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 349:source\lcd/print.c ****                     dr->fpr.prefix = "";
 350:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 351:source\lcd/print.c ****                     break;
 352:source\lcd/print.c ****                   case 'i':
 353:source\lcd/print.c ****                   case 'd':
 354:source\lcd/print.c ****                   {
 355:source\lcd/print.c ****                     int w;
 356:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 357:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 358:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 359:source\lcd/print.c ****                           dr->llval = -dr->llval;
 360:source\lcd/print.c ****                           w = -1;
 361:source\lcd/print.c ****                        } else w = 0;
 362:source\lcd/print.c ****                     } else {
 363:source\lcd/print.c ****                        w = va_arg(args, int);
 364:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 365:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 366:source\lcd/print.c ****                     }
 367:source\lcd/print.c ****                     dr->fpr.prefix = (w < 0) ? "-" : (flags & _SIGNED) ? "+" : (flags & _BLANKER) ?
 368:source\lcd/print.c ****                   }
 369:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 370:source\lcd/print.c ****                     break;
 371:source\lcd/print.c ****                   case 'f':
 372:source\lcd/print.c ****                   case 'e':
 373:source\lcd/print.c ****                   case 'E':
 374:source\lcd/print.c ****                   case 'g':
 375:source\lcd/print.c ****                   case 'G':
 376:source\lcd/print.c ****                     // Not SUPPORT
 377:source\lcd/print.c ****                     flags |= _FPCONV;
 378:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 379:source\lcd/print.c ****                     {
 380:source\lcd/print.c ****                     //int w = va_arg(args, int);
 381:source\lcd/print.c ****                     va_arg(args, int);
 382:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 383:source\lcd/print.c ****                     }
 384:source\lcd/print.c ****                     break;
 385:source\lcd/print.c ****                }
 386:source\lcd/print.c ****                dr->width = width;
 387:source\lcd/print.c ****                dr->fpr.flags = flags;
 388:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 389:source\lcd/print.c ****                continue;
 390:source\lcd/print.c ****             }
 391:source\lcd/print.c ****       }
 392:source\lcd/print.c ****       return dr->ferror(p) ? 0 : charcount;
 208              		.loc 1 392 7 is_stmt 1 view .LVU38
 209              		.loc 1 392 14 is_stmt 0 view .LVU39
 210 0018 A36A     		ldr	r3, [r4, #40]
 211 001a 0198     		ldr	r0, [sp, #4]
 212 001c 9847     		blx	r3
 213              	.LVL15:
 393:source\lcd/print.c **** }
 214              		.loc 1 393 1 view .LVU40
 215 001e 0028     		cmp	r0, #0
 216 0020 14BF     		ite	ne
 217 0022 2846     		movne	r0, r5
 218 0024 4846     		moveq	r0, r9
 219 0026 11B0     		add	sp, sp, #68
 220              		.cfi_remember_state
 221              		.cfi_def_cfa_offset 36
 222              		@ sp needed
 223 0028 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 224              	.LVL16:
 225              	.L141:
 226              		.cfi_restore_state
 220:source\lcd/print.c ****       	    if (ch != '%') {
 227              		.loc 1 220 12 is_stmt 1 view .LVU41
 220:source\lcd/print.c ****       	    if (ch != '%') {
 228              		.loc 1 220 15 is_stmt 0 view .LVU42
 229 002c 252D     		cmp	r5, #37
 230 002e 07D0     		beq	.L143
 221:source\lcd/print.c ****       	       charcount++;
 231              		.loc 1 221 15 is_stmt 1 view .LVU43
 232 0030 636A     		ldr	r3, [r4, #36]
 233 0032 0199     		ldr	r1, [sp, #4]
 234 0034 2846     		mov	r0, r5
 235 0036 9847     		blx	r3
 236              	.LVL17:
 222:source\lcd/print.c ****       	    } else {
 237              		.loc 1 222 15 view .LVU44
 222:source\lcd/print.c ****       	    } else {
 238              		.loc 1 222 24 is_stmt 0 view .LVU45
 239 0038 09F10109 		add	r9, r9, #1
 240              	.LVL18:
 241              	.L213:
 242              	.LBB40:
 297:source\lcd/print.c ****                   case 'n':
 243              		.loc 1 297 21 is_stmt 1 view .LVU46
 244 003c 4546     		mov	r5, r8
 245 003e 16E1     		b	.L8
 246              	.LVL19:
 247              	.L143:
 224:source\lcd/print.c ****                unsigned int v = 0;
 248              		.loc 1 224 19 is_stmt 0 view .LVU47
 249 0040 4FF0000A 		mov	r10, #0
 250 0044 16E0     		b	.L7
 251              	.LVL20:
 252              	.L10:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 253              		.loc 1 227 20 view .LVU48
 254 0046 2D2A     		cmp	r2, #45
 255 0048 0DD0     		beq	.L14
 256 004a 302A     		cmp	r2, #48
 257 004c 43D0     		beq	.L15
 258              	.L18:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 259              		.loc 1 227 37 view .LVU49
 260 004e 0E46     		mov	r6, r1
 261              	.LBB41:
 244:source\lcd/print.c ****                if (ch == '*') {
 262              		.loc 1 244 20 view .LVU50
 263 0050 0023     		movs	r3, #0
 254:source\lcd/print.c ****                         ch = *fmt++;
 264              		.loc 1 254 30 view .LVU51
 265 0052 0A20     		movs	r0, #10
 266              	.LVL21:
 267              	.L20:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 268              		.loc 1 253 26 is_stmt 1 view .LVU52
 269              	.LBB42:
 270              	.LBI42:
 102:source\lcd/print.c **** {
 271              		.loc 1 102 5 view .LVU53
 272              	.LBB43:
 104:source\lcd/print.c **** }
 273              		.loc 1 104 7 view .LVU54
 104:source\lcd/print.c **** }
 274              		.loc 1 104 31 is_stmt 0 view .LVU55
 275 0054 A2F13001 		sub	r1, r2, #48
 276              	.LVL22:
 104:source\lcd/print.c **** }
 277              		.loc 1 104 31 view .LVU56
 278              	.LBE43:
 279              	.LBE42:
 253:source\lcd/print.c ****                         t = t*10 + intofdigit(ch);
 280              		.loc 1 253 26 discriminator 1 view .LVU57
 281 0058 0929     		cmp	r1, #9
 282 005a 20D8     		bhi	.L22
 254:source\lcd/print.c ****                         ch = *fmt++;
 283              		.loc 1 254 25 is_stmt 1 view .LVU58
 255:source\lcd/print.c ****                   }
 284              		.loc 1 255 28 is_stmt 0 view .LVU59
 285 005c 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 286              	.LVL23:
 254:source\lcd/print.c ****                         ch = *fmt++;
 287              		.loc 1 254 27 view .LVU60
 288 0060 00FB0313 		mla	r3, r0, r3, r1
 289              	.LVL24:
 255:source\lcd/print.c ****                   }
 290              		.loc 1 255 25 is_stmt 1 view .LVU61
 255:source\lcd/print.c ****                   }
 291              		.loc 1 255 25 is_stmt 0 view .LVU62
 292 0064 F6E7     		b	.L20
 293              	.LVL25:
 294              	.L14:
 255:source\lcd/print.c ****                   }
 295              		.loc 1 255 25 view .LVU63
 296              	.LBE41:
 228:source\lcd/print.c ****                         continue;
 297              		.loc 1 228 35 is_stmt 1 view .LVU64
 228:source\lcd/print.c ****                         continue;
 298              		.loc 1 228 53 is_stmt 0 view .LVU65
 299 0066 2AF4807A 		bic	r10, r10, #256
 300              	.LVL26:
 228:source\lcd/print.c ****                         continue;
 301              		.loc 1 228 53 view .LVU66
 302 006a 2AF0010A 		bic	r10, r10, #1
 228:source\lcd/print.c ****                         continue;
 303              		.loc 1 228 41 view .LVU67
 304 006e 4AF0010A 		orr	r10, r10, #1
 305              	.LVL27:
 229:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 306              		.loc 1 229 25 is_stmt 1 view .LVU68
 307              	.L17:
 229:source\lcd/print.c ****                       case '+':   flags |= _SIGNED;
 308              		.loc 1 229 25 is_stmt 0 view .LVU69
 309              	.LBE40:
 217:source\lcd/print.c ****       int ch, charcount = 0;
 310              		.loc 1 217 1 view .LVU70
 311 0072 0E46     		mov	r6, r1
 312              	.LVL28:
 313              	.L7:
 314              	.LBB90:
 226:source\lcd/print.c ****                    switch (ch = *fmt++) {
 315              		.loc 1 226 16 is_stmt 1 view .LVU71
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 316              		.loc 1 227 20 view .LVU72
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 317              		.loc 1 227 37 is_stmt 0 view .LVU73
 318 0074 3146     		mov	r1, r6
 319              	.LVL29:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 320              		.loc 1 227 33 view .LVU74
 321 0076 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 322              	.LVL30:
 227:source\lcd/print.c ****                       case '-':   flags = _LJUSTIFY | (flags & ~_PADZERO);
 323              		.loc 1 227 20 view .LVU75
 324 007a 2B2A     		cmp	r2, #43
 325 007c 22D0     		beq	.L9
 326 007e E2D8     		bhi	.L10
 327 0080 202A     		cmp	r2, #32
 328 0082 22D0     		beq	.L11
 329 0084 232A     		cmp	r2, #35
 330 0086 23D0     		beq	.L12
 239:source\lcd/print.c ****                    }
 331              		.loc 1 239 25 is_stmt 1 view .LVU76
 241:source\lcd/print.c ****                }
 332              		.loc 1 241 20 view .LVU77
 333              	.LBB44:
 244:source\lcd/print.c ****                if (ch == '*') {
 334              		.loc 1 244 16 view .LVU78
 335              	.LVL31:
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 336              		.loc 1 245 16 view .LVU79
 245:source\lcd/print.c ****                   t = va_arg(args, int);
 337              		.loc 1 245 19 is_stmt 0 view .LVU80
 338 0088 2A2A     		cmp	r2, #42
 339 008a E0D1     		bne	.L18
 246:source\lcd/print.c ****                   if (t < 0) {
 340              		.loc 1 246 19 is_stmt 1 view .LVU81
 341              	.LVL32:
 246:source\lcd/print.c ****                   if (t < 0) {
 342              		.loc 1 246 21 is_stmt 0 view .LVU82
 343 008c 58F8043B 		ldr	r3, [r8], #4
 344              	.LVL33:
 247:source\lcd/print.c ****                      t = - t;
 345              		.loc 1 247 19 is_stmt 1 view .LVU83
 251:source\lcd/print.c ****                } else {
 346              		.loc 1 251 22 is_stmt 0 view .LVU84
 347 0090 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 348              	.LVL34:
 247:source\lcd/print.c ****                      t = - t;
 349              		.loc 1 247 22 view .LVU85
 350 0092 002B     		cmp	r3, #0
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 351              		.loc 1 248 22 is_stmt 1 view .LVU86
 248:source\lcd/print.c ****                      flags ^= _LJUSTIFY;
 352              		.loc 1 248 24 is_stmt 0 view .LVU87
 353 0094 BCBF     		itt	lt
 354 0096 5B42     		rsblt	r3, r3, #0
 355              	.LVL35:
 249:source\lcd/print.c ****                   }
 356              		.loc 1 249 22 is_stmt 1 view .LVU88
 249:source\lcd/print.c ****                   }
 357              		.loc 1 249 28 is_stmt 0 view .LVU89
 358 0098 8AF0010A 		eorlt	r10, r10, #1
 359              	.LVL36:
 251:source\lcd/print.c ****                } else {
 360              		.loc 1 251 19 is_stmt 1 view .LVU90
 251:source\lcd/print.c ****                } else {
 361              		.loc 1 251 28 is_stmt 0 view .LVU91
 362 009c 0236     		adds	r6, r6, #2
 363              	.LVL37:
 364              	.L22:
 258:source\lcd/print.c ****                }
 365              		.loc 1 258 16 is_stmt 1 view .LVU92
 366              	.LBE44:
 260:source\lcd/print.c ****                   int t = 0;
 367              		.loc 1 260 19 is_stmt 0 view .LVU93
 368 009e 2E2A     		cmp	r2, #46
 369              	.LBB45:
 258:source\lcd/print.c ****                }
 370              		.loc 1 258 22 view .LVU94
 371 00a0 23EAE377 		bic	r7, r3, r3, asr #31
 372              	.LVL38:
 258:source\lcd/print.c ****                }
 373              		.loc 1 258 22 view .LVU95
 374              	.LBE45:
 260:source\lcd/print.c ****                   int t = 0;
 375              		.loc 1 260 16 is_stmt 1 view .LVU96
 260:source\lcd/print.c ****                   int t = 0;
 376              		.loc 1 260 19 is_stmt 0 view .LVU97
 377 00a4 23D1     		bne	.L24
 378              	.LBB46:
 261:source\lcd/print.c ****                   ch = *fmt++;
 379              		.loc 1 261 19 is_stmt 1 view .LVU98
 380              	.LVL39:
 262:source\lcd/print.c ****                   if (ch == '*') {
 381              		.loc 1 262 19 view .LVU99
 262:source\lcd/print.c ****                   if (ch == '*') {
 382              		.loc 1 262 22 is_stmt 0 view .LVU100
 383 00a6 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 384              	.LVL40:
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 385              		.loc 1 263 19 is_stmt 1 view .LVU101
 263:source\lcd/print.c ****                      t = va_arg(args, int);
 386              		.loc 1 263 22 is_stmt 0 view .LVU102
 387 00a8 2A2A     		cmp	r2, #42
 388 00aa 17D0     		beq	.L25
 262:source\lcd/print.c ****                   if (ch == '*') {
 389              		.loc 1 262 28 view .LVU103
 390 00ac 0136     		adds	r6, r6, #1
 391              	.LVL41:
 261:source\lcd/print.c ****                   ch = *fmt++;
 392              		.loc 1 261 23 view .LVU104
 393 00ae 0021     		movs	r1, #0
 268:source\lcd/print.c ****                            ch = *fmt++;
 394              		.loc 1 268 33 view .LVU105
 395 00b0 0A25     		movs	r5, #10
 396              	.LVL42:
 397              	.L26:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 398              		.loc 1 267 29 is_stmt 1 view .LVU106
 399              	.LBB47:
 400              	.LBI47:
 102:source\lcd/print.c **** {
 401              		.loc 1 102 5 view .LVU107
 402              	.LBB48:
 104:source\lcd/print.c **** }
 403              		.loc 1 104 7 view .LVU108
 104:source\lcd/print.c **** }
 404              		.loc 1 104 31 is_stmt 0 view .LVU109
 405 00b2 A2F13000 		sub	r0, r2, #48
 406              	.LVL43:
 104:source\lcd/print.c **** }
 407              		.loc 1 104 31 view .LVU110
 408              	.LBE48:
 409              	.LBE47:
 267:source\lcd/print.c ****                            t = t*10 + intofdigit(ch);
 410              		.loc 1 267 29 discriminator 1 view .LVU111
 411 00b6 0928     		cmp	r0, #9
 412 00b8 14D8     		bhi	.L27
 268:source\lcd/print.c ****                            ch = *fmt++;
 413              		.loc 1 268 28 is_stmt 1 view .LVU112
 269:source\lcd/print.c ****                      }
 414              		.loc 1 269 31 is_stmt 0 view .LVU113
 415 00ba 16F8012B 		ldrb	r2, [r6], #1	@ zero_extendqisi2
 416              	.LVL44:
 268:source\lcd/print.c ****                            ch = *fmt++;
 417              		.loc 1 268 30 view .LVU114
 418 00be 05FB0101 		mla	r1, r5, r1, r0
 419              	.LVL45:
 269:source\lcd/print.c ****                      }
 420              		.loc 1 269 28 is_stmt 1 view .LVU115
 269:source\lcd/print.c ****                      }
 421              		.loc 1 269 28 is_stmt 0 view .LVU116
 422 00c2 F6E7     		b	.L26
 423              	.LVL46:
 424              	.L9:
 269:source\lcd/print.c ****                      }
 425              		.loc 1 269 28 view .LVU117
 426              	.LBE46:
 230:source\lcd/print.c ****                         continue;
 427              		.loc 1 230 35 is_stmt 1 view .LVU118
 230:source\lcd/print.c ****                         continue;
 428              		.loc 1 230 41 is_stmt 0 view .LVU119
 429 00c4 4AF0020A 		orr	r10, r10, #2
 430              	.LVL47:
 231:source\lcd/print.c ****                       case ' ':   flags |= _BLANKER;
 431              		.loc 1 231 25 is_stmt 1 view .LVU120
 432 00c8 D3E7     		b	.L17
 433              	.L11:
 232:source\lcd/print.c ****                         continue;
 434              		.loc 1 232 35 view .LVU121
 232:source\lcd/print.c ****                         continue;
 435              		.loc 1 232 41 is_stmt 0 view .LVU122
 436 00ca 4AF0040A 		orr	r10, r10, #4
 437              	.LVL48:
 233:source\lcd/print.c ****                       case '#':   flags |= _VARIANT;
 438              		.loc 1 233 25 is_stmt 1 view .LVU123
 439 00ce D0E7     		b	.L17
 440              	.L12:
 234:source\lcd/print.c ****                         continue;
 441              		.loc 1 234 35 view .LVU124
 234:source\lcd/print.c ****                         continue;
 442              		.loc 1 234 41 is_stmt 0 view .LVU125
 443 00d0 4AF0080A 		orr	r10, r10, #8
 444              	.LVL49:
 235:source\lcd/print.c ****                       case '0':   flags |= _PADZERO;
 445              		.loc 1 235 25 is_stmt 1 view .LVU126
 446 00d4 CDE7     		b	.L17
 447              	.L15:
 236:source\lcd/print.c ****                         continue;
 448              		.loc 1 236 35 view .LVU127
 236:source\lcd/print.c ****                         continue;
 449              		.loc 1 236 41 is_stmt 0 view .LVU128
 450 00d6 4AF4807A 		orr	r10, r10, #256
 451              	.LVL50:
 237:source\lcd/print.c ****                       default:
 452              		.loc 1 237 25 is_stmt 1 view .LVU129
 453 00da CAE7     		b	.L17
 454              	.LVL51:
 455              	.L25:
 456              	.LBB49:
 264:source\lcd/print.c ****                      ch = *fmt++;
 457              		.loc 1 264 22 view .LVU130
 264:source\lcd/print.c ****                      ch = *fmt++;
 458              		.loc 1 264 24 is_stmt 0 view .LVU131
 459 00dc 58F8041B 		ldr	r1, [r8], #4
 460              	.LVL52:
 265:source\lcd/print.c ****                   } else {
 461              		.loc 1 265 22 is_stmt 1 view .LVU132
 265:source\lcd/print.c ****                   } else {
 462              		.loc 1 265 25 is_stmt 0 view .LVU133
 463 00e0 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 464              	.LVL53:
 265:source\lcd/print.c ****                   } else {
 465              		.loc 1 265 31 view .LVU134
 466 00e2 0236     		adds	r6, r6, #2
 467              	.LVL54:
 468              	.L27:
 272:source\lcd/print.c ****                }
 469              		.loc 1 272 19 is_stmt 1 view .LVU135
 272:source\lcd/print.c ****                }
 470              		.loc 1 272 22 is_stmt 0 view .LVU136
 471 00e4 0029     		cmp	r1, #0
 272:source\lcd/print.c ****                }
 472              		.loc 1 272 31 is_stmt 1 discriminator 1 view .LVU137
 272:source\lcd/print.c ****                }
 473              		.loc 1 272 37 is_stmt 0 discriminator 1 view .LVU138
 474 00e6 A4BF     		itt	ge
 475 00e8 4AF0100A 		orrge	r10, r10, #16
 476              	.LVL55:
 272:source\lcd/print.c ****                }
 477              		.loc 1 272 70 discriminator 1 view .LVU139
 478 00ec A160     		strge	r1, [r4, #8]
 479              	.LVL56:
 480              	.L24:
 272:source\lcd/print.c ****                }
 481              		.loc 1 272 70 discriminator 1 view .LVU140
 482              	.LBE49:
 274:source\lcd/print.c ****                   ch = *fmt++;
 483              		.loc 1 274 16 is_stmt 1 view .LVU141
 274:source\lcd/print.c ****                   ch = *fmt++;
 484              		.loc 1 274 19 is_stmt 0 view .LVU142
 485 00ee 22F02001 		bic	r1, r2, #32
 486 00f2 4C29     		cmp	r1, #76
 487 00f4 2ED1     		bne	.L29
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 488              		.loc 1 275 19 is_stmt 1 view .LVU143
 489              	.LVL57:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 490              		.loc 1 275 24 is_stmt 0 view .LVU144
 491 00f6 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 492              	.LVL58:
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 493              		.loc 1 276 19 is_stmt 1 view .LVU145
 276:source\lcd/print.c ****                      flags |= _LLSPEC;
 494              		.loc 1 276 22 is_stmt 0 view .LVU146
 495 00f8 02F0DF01 		and	r1, r2, #223
 496 00fc 4C29     		cmp	r1, #76
 277:source\lcd/print.c ****                      ch = *fmt++;
 497              		.loc 1 277 22 is_stmt 1 view .LVU147
 278:source\lcd/print.c ****                   } else {
 498              		.loc 1 278 25 is_stmt 0 view .LVU148
 499 00fe 03BF     		ittte	eq
 500 0100 7278     		ldrbeq	r2, [r6, #1]	@ zero_extendqisi2
 501              	.LVL59:
 277:source\lcd/print.c ****                      ch = *fmt++;
 502              		.loc 1 277 28 view .LVU149
 503 0102 4AF0400A 		orreq	r10, r10, #64
 504              	.LVL60:
 278:source\lcd/print.c ****                   } else {
 505              		.loc 1 278 22 is_stmt 1 view .LVU150
 278:source\lcd/print.c ****                   } else {
 506              		.loc 1 278 31 is_stmt 0 view .LVU151
 507 0106 0236     		addeq	r6, r6, #2
 508              	.LVL61:
 275:source\lcd/print.c ****                   if (ch == 'l' || ch == 'L') {
 509              		.loc 1 275 28 view .LVU152
 510 0108 0136     		addne	r6, r6, #1
 280:source\lcd/print.c ****                   }
 511              		.loc 1 280 21 is_stmt 1 view .LVU153
 280:source\lcd/print.c ****                   }
 512              		.loc 1 280 27 is_stmt 0 view .LVU154
 513 010a 18BF     		it	ne
 514 010c 4AF0200A 		orrne	r10, r10, #32
 515              	.LVL62:
 516              	.L31:
 286:source\lcd/print.c ****                   case 'c':
 517              		.loc 1 286 16 is_stmt 1 view .LVU155
 518 0110 782A     		cmp	r2, #120
 519 0112 6FDC     		bgt	.L32
 286:source\lcd/print.c ****                   case 'c':
 520              		.loc 1 286 16 is_stmt 0 view .LVU156
 521 0114 572A     		cmp	r2, #87
 522 0116 24DC     		bgt	.L33
 523 0118 002A     		cmp	r2, #0
 524 011a 00F0AA80 		beq	.L34
 525 011e 22F00201 		bic	r1, r2, #2
 526 0122 4529     		cmp	r1, #69
 527 0124 66D1     		bne	.L32
 528              	.L35:
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 529              		.loc 1 377 21 is_stmt 1 view .LVU157
 378:source\lcd/print.c ****                     {
 530              		.loc 1 378 24 is_stmt 0 view .LVU158
 531 0126 1AF0100F 		tst	r10, #16
 378:source\lcd/print.c ****                     {
 532              		.loc 1 378 66 discriminator 1 view .LVU159
 533 012a 04BF     		itt	eq
 534 012c 0623     		moveq	r3, #6
 535              	.LVL63:
 378:source\lcd/print.c ****                     {
 536              		.loc 1 378 66 discriminator 1 view .LVU160
 537 012e A360     		streq	r3, [r4, #8]
 382:source\lcd/print.c ****                     }
 538              		.loc 1 382 60 view .LVU161
 539 0130 1AF0020F 		tst	r10, #2
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 540              		.loc 1 377 27 view .LVU162
 541 0134 4AF40071 		orr	r1, r10, #512
 542              	.LVL64:
 378:source\lcd/print.c ****                     {
 543              		.loc 1 378 21 is_stmt 1 view .LVU163
 378:source\lcd/print.c ****                     {
 544              		.loc 1 378 48 discriminator 1 view .LVU164
 381:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_SIGNED) ? "+" : (flags&_BLANKER) ? " " : "";
 545              		.loc 1 381 21 view .LVU165
 546 0138 08F10405 		add	r5, r8, #4
 547              	.LVL65:
 382:source\lcd/print.c ****                     }
 548              		.loc 1 382 21 view .LVU166
 382:source\lcd/print.c ****                     }
 549              		.loc 1 382 60 is_stmt 0 view .LVU167
 550 013c 40F0E681 		bne	.L155
 382:source\lcd/print.c ****                     }
 551              		.loc 1 382 85 discriminator 3 view .LVU168
 552 0140 B648     		ldr	r0, .L219
 553 0142 B74B     		ldr	r3, .L219+4
 554 0144 1AF0040F 		tst	r10, #4
 555 0148 18BF     		it	ne
 556 014a 0346     		movne	r3, r0
 557              	.L91:
 382:source\lcd/print.c ****                     }
 558              		.loc 1 382 36 discriminator 8 view .LVU169
 559 014c 6360     		str	r3, [r4, #4]
 384:source\lcd/print.c ****                }
 560              		.loc 1 384 21 is_stmt 1 view .LVU170
 377:source\lcd/print.c ****                     if (!(flags & _PRECGIVEN)) dr->fpr.precision = 6;
 561              		.loc 1 377 27 is_stmt 0 view .LVU171
 562 014e 8A46     		mov	r10, r1
 225:source\lcd/print.c ****                for (;;) {
 563              		.loc 1 225 29 view .LVU172
 564 0150 0023     		movs	r3, #0
 384:source\lcd/print.c ****                }
 565              		.loc 1 384 21 view .LVU173
 566 0152 39E1     		b	.L72
 567              	.LVL66:
 568              	.L29:
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 569              		.loc 1 282 23 is_stmt 1 view .LVU174
 282:source\lcd/print.c ****                   flags |= _SHORTSPEC;
 570              		.loc 1 282 26 is_stmt 0 view .LVU175
 571 0154 682A     		cmp	r2, #104
 283:source\lcd/print.c ****                   ch = *fmt++;
 572              		.loc 1 283 19 is_stmt 1 view .LVU176
 284:source\lcd/print.c ****                }
 573              		.loc 1 284 22 is_stmt 0 view .LVU177
 574 0156 04BF     		itt	eq
 575 0158 16F8012B 		ldrbeq	r2, [r6], #1	@ zero_extendqisi2
 576              	.LVL67:
 283:source\lcd/print.c ****                   ch = *fmt++;
 577              		.loc 1 283 25 view .LVU178
 578 015c 4AF0800A 		orreq	r10, r10, #128
 579              	.LVL68:
 284:source\lcd/print.c ****                }
 580              		.loc 1 284 19 is_stmt 1 view .LVU179
 284:source\lcd/print.c ****                }
 581              		.loc 1 284 19 is_stmt 0 view .LVU180
 582 0160 D6E7     		b	.L31
 583              	.LVL69:
 584              	.L33:
 286:source\lcd/print.c ****                   case 'c':
 585              		.loc 1 286 16 view .LVU181
 586 0162 A2F15801 		sub	r1, r2, #88
 587 0166 2029     		cmp	r1, #32
 588 0168 44D8     		bhi	.L32
 589 016a 01A0     		adr	r0, .L37
 590 016c 50F821F0 		ldr	pc, [r0, r1, lsl #2]
 591              		.p2align 2
 592              	.L37:
 593 0170 33030000 		.word	.L44+1
 594 0174 F5010000 		.word	.L32+1
 595 0178 F5010000 		.word	.L32+1
 596 017c F5010000 		.word	.L32+1
 597 0180 F5010000 		.word	.L32+1
 598 0184 F5010000 		.word	.L32+1
 599 0188 F5010000 		.word	.L32+1
 600 018c F5010000 		.word	.L32+1
 601 0190 F5010000 		.word	.L32+1
 602 0194 F5010000 		.word	.L32+1
 603 0198 F5010000 		.word	.L32+1
 604 019c F5010000 		.word	.L32+1
 605 01a0 AB040000 		.word	.L43+1
 606 01a4 27010000 		.word	.L35+1
 607 01a8 27010000 		.word	.L35+1
 608 01ac 27010000 		.word	.L35+1
 609 01b0 F5010000 		.word	.L32+1
 610 01b4 AB040000 		.word	.L43+1
 611 01b8 F5010000 		.word	.L32+1
 612 01bc F5010000 		.word	.L32+1
 613 01c0 F5010000 		.word	.L32+1
 614 01c4 F5010000 		.word	.L32+1
 615 01c8 77020000 		.word	.L42+1
 616 01cc 41040000 		.word	.L41+1
 617 01d0 A9030000 		.word	.L40+1
 618 01d4 F5010000 		.word	.L32+1
 619 01d8 F5010000 		.word	.L32+1
 620 01dc 9F020000 		.word	.L39+1
 621 01e0 F5010000 		.word	.L32+1
 622 01e4 73040000 		.word	.L38+1
 623 01e8 F5010000 		.word	.L32+1
 624 01ec F5010000 		.word	.L32+1
 625 01f0 71030000 		.word	.L36+1
 626              		.p2align 1
 627              	.L32:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 628              		.loc 1 289 21 is_stmt 1 view .LVU182
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 629              		.loc 1 289 24 is_stmt 0 view .LVU183
 630 01f4 4546     		mov	r5, r8
 631              	.LVL70:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 632              		.loc 1 291 21 view .LVU184
 633 01f6 1AF0010B 		ands	fp, r10, #1
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 634              		.loc 1 289 24 view .LVU185
 635 01fa 55F8042B 		ldr	r2, [r5], #4
 636              	.LVL71:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 637              		.loc 1 289 24 view .LVU186
 638 01fe 0292     		str	r2, [sp, #8]
 639              	.LVL72:
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 640              		.loc 1 290 21 is_stmt 1 view .LVU187
 290:source\lcd/print.c ****                     pre_padding(dr, p);
 641              		.loc 1 290 26 is_stmt 0 view .LVU188
 642 0200 07F1FF38 		add	r8, r7, #-1
 643              	.LVL73:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 644              		.loc 1 291 21 is_stmt 1 view .LVU189
 645 0204 18D1     		bne	.L45
 646              	.LBB50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 647              		.loc 1 291 21 discriminator 1 view .LVU190
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 648              		.loc 1 291 21 is_stmt 0 discriminator 3 view .LVU191
 649 0206 1AF4807F 		tst	r10, #256
 650 020a 0CBF     		ite	eq
 651 020c 4FF0200A 		moveq	r10, #32
 652              	.LVL74:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 653              		.loc 1 291 21 discriminator 3 view .LVU192
 654 0210 4FF0300A 		movne	r10, #48
 655              	.LVL75:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 656              		.loc 1 291 21 is_stmt 1 discriminator 6 view .LVU193
 657              	.L47:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 658              		.loc 1 291 21 discriminator 7 view .LVU194
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 659              		.loc 1 291 21 is_stmt 0 discriminator 7 view .LVU195
 660 0214 B8F10108 		subs	r8, r8, #1
 661              	.LVL76:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 662              		.loc 1 291 21 discriminator 9 view .LVU196
 663 0218 626A     		ldr	r2, [r4, #36]
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 664              		.loc 1 291 21 discriminator 7 view .LVU197
 665 021a 18D5     		bpl	.L48
 666 021c 012F     		cmp	r7, #1
 667 021e 3A46     		mov	r2, r7
 668 0220 B8BF     		it	lt
 669 0222 0122     		movlt	r2, #1
 670 0224 013A     		subs	r2, r2, #1
 671 0226 002B     		cmp	r3, #0
 672 0228 C7F10108 		rsb	r8, r7, #1
 673              	.LVL77:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 674              		.loc 1 291 21 discriminator 7 view .LVU198
 675 022c 9144     		add	r9, r9, r2
 676 022e D8BF     		it	le
 677 0230 4FF00008 		movle	r8, #0
 678 0234 BA1E     		subs	r2, r7, #2
 679 0236 9044     		add	r8, r8, r2
 680              	.LVL78:
 681              	.L45:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 682              		.loc 1 291 21 is_stmt 1 discriminator 10 view .LVU199
 683              	.LBE50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 684              		.loc 1 291 39 discriminator 10 view .LVU200
 292:source\lcd/print.c ****                     charcount++;
 685              		.loc 1 292 21 view .LVU201
 686 0238 DDE90110 		ldrd	r1, r0, [sp, #4]
 687 023c 636A     		ldr	r3, [r4, #36]
 688 023e 9847     		blx	r3
 689              	.LVL79:
 293:source\lcd/print.c ****                     post_padding(dr, p);
 690              		.loc 1 293 21 view .LVU202
 293:source\lcd/print.c ****                     post_padding(dr, p);
 691              		.loc 1 293 30 is_stmt 0 view .LVU203
 692 0240 09F10109 		add	r9, r9, #1
 693              	.LVL80:
 294:source\lcd/print.c ****                     continue;
 694              		.loc 1 294 21 is_stmt 1 view .LVU204
 695 0244 BBF1000F 		cmp	fp, #0
 696 0248 11D0     		beq	.L8
 697 024a 4746     		mov	r7, r8
 698 024c 09E0     		b	.L49
 699              	.LVL81:
 700              	.L48:
 701              	.LBB51:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 702              		.loc 1 291 21 is_stmt 0 discriminator 9 view .LVU205
 703 024e 0199     		ldr	r1, [sp, #4]
 704 0250 0393     		str	r3, [sp, #12]
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 705              		.loc 1 291 21 is_stmt 1 discriminator 9 view .LVU206
 706 0252 5046     		mov	r0, r10
 707 0254 9047     		blx	r2
 708              	.LVL82:
 709 0256 039B     		ldr	r3, [sp, #12]
 710 0258 DCE7     		b	.L47
 711              	.LVL83:
 712              	.L50:
 291:source\lcd/print.c ****                     xputc(dr, ch, p);
 713              		.loc 1 291 21 is_stmt 0 discriminator 9 view .LVU207
 714              	.LBE51:
 294:source\lcd/print.c ****                     continue;
 715              		.loc 1 294 21 is_stmt 1 discriminator 4 view .LVU208
 716 025a 636A     		ldr	r3, [r4, #36]
 717 025c 0199     		ldr	r1, [sp, #4]
 718 025e 2020     		movs	r0, #32
 719 0260 9847     		blx	r3
 720              	.LVL84:
 721              	.L49:
 294:source\lcd/print.c ****                     continue;
 722              		.loc 1 294 21 discriminator 3 view .LVU209
 294:source\lcd/print.c ****                     continue;
 723              		.loc 1 294 21 is_stmt 0 discriminator 3 view .LVU210
 724 0262 013F     		subs	r7, r7, #1
 725              	.LVL85:
 294:source\lcd/print.c ****                     continue;
 726              		.loc 1 294 21 discriminator 3 view .LVU211
 727 0264 F9D5     		bpl	.L50
 728 0266 B8F1000F 		cmp	r8, #0
 729 026a A8BF     		it	ge
 730 026c C144     		addge	r9, r9, r8
 731              	.LVL86:
 732              	.L8:
 297:source\lcd/print.c ****                   case 'n':
 733              		.loc 1 297 21 view .LVU212
 734 026e A846     		mov	r8, r5
 735 0270 CFE6     		b	.L6
 736              	.LVL87:
 737              	.L34:
 296:source\lcd/print.c ****                     continue;
 738              		.loc 1 296 31 is_stmt 1 view .LVU213
 296:source\lcd/print.c ****                     continue;
 739              		.loc 1 296 34 is_stmt 0 view .LVU214
 740 0272 013E     		subs	r6, r6, #1
 741              	.LVL88:
 296:source\lcd/print.c ****                     continue;
 742              		.loc 1 296 34 view .LVU215
 743 0274 E2E6     		b	.L213
 744              	.LVL89:
 745              	.L42:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 746              		.loc 1 299 21 is_stmt 1 view .LVU216
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 747              		.loc 1 299 24 is_stmt 0 view .LVU217
 748 0276 1AF0800F 		tst	r10, #128
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 749              		.loc 1 299 68 discriminator 1 view .LVU218
 750 027a D8F80030 		ldr	r3, [r8]
 751              	.LVL90:
 289:source\lcd/print.c ****                     width--;                        /* char width is 1       */
 752              		.loc 1 289 24 view .LVU219
 753 027e 08F10405 		add	r5, r8, #4
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 754              		.loc 1 299 24 view .LVU220
 755 0282 02D0     		beq	.L51
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 756              		.loc 1 299 45 is_stmt 1 discriminator 1 view .LVU221
 757              	.LVL91:
 299:source\lcd/print.c ****                     else if (flags & _LLSPEC) *va_arg(args, long long *) = charcount;
 758              		.loc 1 299 70 is_stmt 0 discriminator 1 view .LVU222
 759 0284 A3F80090 		strh	r9, [r3]	@ movhi
 760 0288 F1E7     		b	.L8
 761              	.LVL92:
 762              	.L51:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 763              		.loc 1 300 26 is_stmt 1 view .LVU223
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 764              		.loc 1 300 29 is_stmt 0 view .LVU224
 765 028a 1AF0400F 		tst	r10, #64
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 766              		.loc 1 300 47 is_stmt 1 discriminator 1 view .LVU225
 767              	.LVL93:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 768              		.loc 1 300 74 is_stmt 0 discriminator 1 view .LVU226
 769 028e 1ABF     		itte	ne
 770 0290 4FEAE972 		asrne	r2, r9, #31
 771              	.LVL94:
 300:source\lcd/print.c ****                     else if (flags & _LONGSPEC) *va_arg(args, long *) = charcount;
 772              		.loc 1 300 74 discriminator 1 view .LVU227
 773 0294 C3E90092 		strdne	r9, r2, [r3]
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 774              		.loc 1 301 26 is_stmt 1 view .LVU228
 301:source\lcd/print.c ****                     else *va_arg(args, int *) = charcount;
 775              		.loc 1 301 71 is_stmt 0 discriminator 1 view .LVU229
 776 0298 C3F80090 		streq	r9, [r3]
 777 029c E7E7     		b	.L8
 778              	.LVL95:
 779              	.L39:
 780              	.LBB52:
 306:source\lcd/print.c ****                     int i, n;
 781              		.loc 1 306 21 is_stmt 1 view .LVU230
 306:source\lcd/print.c ****                     int i, n;
 782              		.loc 1 306 27 is_stmt 0 view .LVU231
 783 029e 4546     		mov	r5, r8
 784              	.LVL96:
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 785              		.loc 1 308 24 view .LVU232
 786 02a0 1AF0100F 		tst	r10, #16
 306:source\lcd/print.c ****                     int i, n;
 787              		.loc 1 306 27 view .LVU233
 788 02a4 55F8048B 		ldr	r8, [r5], #4
 789              	.LVL97:
 307:source\lcd/print.c ****                     if (flags & _PRECGIVEN) {
 790              		.loc 1 307 21 is_stmt 1 view .LVU234
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 791              		.loc 1 308 21 view .LVU235
 308:source\lcd/print.c ****                        int precision = dr->fpr.precision;
 792              		.loc 1 308 24 is_stmt 0 view .LVU236
 793 02a8 0AD0     		beq	.L56
 794              	.LBB53:
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 795              		.loc 1 309 24 is_stmt 1 view .LVU237
 309:source\lcd/print.c ****                        for (n = 0; n < precision && str[n] != 0; n++) continue;
 796              		.loc 1 309 28 is_stmt 0 view .LVU238
 797 02aa A368     		ldr	r3, [r4, #8]
 798              	.LVL98:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 799              		.loc 1 310 24 is_stmt 1 view .LVU239
 310:source\lcd/print.c ****                     } else n = strlen(str);
 800              		.loc 1 310 31 is_stmt 0 view .LVU240
 801 02ac 4FF0000B 		mov	fp, #0
 802              	.LVL99:
 803              	.L57:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 804              		.loc 1 310 50 is_stmt 1 discriminator 1 view .LVU241
 805 02b0 9B45     		cmp	fp, r3
 806 02b2 09DA     		bge	.L58
 310:source\lcd/print.c ****                     } else n = strlen(str);
 807              		.loc 1 310 50 is_stmt 0 discriminator 3 view .LVU242
 808 02b4 18F80B20 		ldrb	r2, [r8, fp]	@ zero_extendqisi2
 809 02b8 32B1     		cbz	r2, .L58
 310:source\lcd/print.c ****                     } else n = strlen(str);
 810              		.loc 1 310 71 is_stmt 1 discriminator 4 view .LVU243
 310:source\lcd/print.c ****                     } else n = strlen(str);
 811              		.loc 1 310 67 discriminator 2 view .LVU244
 812 02ba 0BF1010B 		add	fp, fp, #1
 813              	.LVL100:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 814              		.loc 1 310 67 is_stmt 0 discriminator 2 view .LVU245
 815 02be F7E7     		b	.L57
 816              	.LVL101:
 817              	.L56:
 310:source\lcd/print.c ****                     } else n = strlen(str);
 818              		.loc 1 310 67 discriminator 2 view .LVU246
 819              	.LBE53:
 311:source\lcd/print.c ****                     width -= n;
 820              		.loc 1 311 28 is_stmt 1 view .LVU247
 311:source\lcd/print.c ****                     width -= n;
 821              		.loc 1 311 32 is_stmt 0 view .LVU248
 822 02c0 4046     		mov	r0, r8
 823 02c2 FFF7FEFF 		bl	strlen
 824              	.LVL102:
 311:source\lcd/print.c ****                     width -= n;
 825              		.loc 1 311 32 view .LVU249
 826 02c6 8346     		mov	fp, r0
 827              	.LVL103:
 828              	.L58:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 829              		.loc 1 312 21 is_stmt 1 view .LVU250
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 830              		.loc 1 313 21 is_stmt 0 view .LVU251
 831 02c8 1AF00103 		ands	r3, r10, #1
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 832              		.loc 1 312 27 view .LVU252
 833 02cc A7EB0B07 		sub	r7, r7, fp
 834              	.LVL104:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 835              		.loc 1 313 21 is_stmt 1 view .LVU253
 836 02d0 0293     		str	r3, [sp, #8]
 837 02d2 0ED1     		bne	.L60
 838              	.LBB54:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 839              		.loc 1 313 21 discriminator 1 view .LVU254
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 840              		.loc 1 313 21 is_stmt 0 discriminator 3 view .LVU255
 841 02d4 1AF4807F 		tst	r10, #256
 842 02d8 0CBF     		ite	eq
 843 02da 2023     		moveq	r3, #32
 844 02dc 3023     		movne	r3, #48
 845 02de 0393     		str	r3, [sp, #12]
 846              	.LVL105:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 847              		.loc 1 313 21 is_stmt 1 discriminator 6 view .LVU256
 848              	.LBE54:
 312:source\lcd/print.c ****                     pre_padding(dr, p);
 849              		.loc 1 312 27 is_stmt 0 view .LVU257
 850 02e0 BA46     		mov	r10, r7
 851              	.LVL106:
 852              	.L62:
 853              	.LBB55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 854              		.loc 1 313 21 is_stmt 1 discriminator 7 view .LVU258
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 855              		.loc 1 313 21 is_stmt 0 discriminator 7 view .LVU259
 856 02e2 BAF1010A 		subs	r10, r10, #1
 857              	.LVL107:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 858              		.loc 1 313 21 discriminator 7 view .LVU260
 859 02e6 0ED5     		bpl	.L63
 860 02e8 27EAE773 		bic	r3, r7, r7, asr #31
 861 02ec 013F     		subs	r7, r7, #1
 862 02ee 9944     		add	r9, r9, r3
 863 02f0 FF1A     		subs	r7, r7, r3
 864              	.LVL108:
 865              	.L60:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 866              		.loc 1 313 21 is_stmt 1 discriminator 10 view .LVU261
 867              	.LBE55:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 868              		.loc 1 313 39 discriminator 10 view .LVU262
 314:source\lcd/print.c ****                     charcount += n;
 869              		.loc 1 314 21 view .LVU263
 314:source\lcd/print.c ****                     charcount += n;
 870              		.loc 1 314 21 is_stmt 0 view .LVU264
 871 02f2 08EB0B0A 		add	r10, r8, fp
 872              	.LVL109:
 873              	.L64:
 314:source\lcd/print.c ****                     charcount += n;
 874              		.loc 1 314 32 is_stmt 1 discriminator 2 view .LVU265
 875 02f6 C245     		cmp	r10, r8
 876 02f8 0AD1     		bne	.L65
 315:source\lcd/print.c ****                     post_padding(dr, p);
 877              		.loc 1 315 21 view .LVU266
 316:source\lcd/print.c ****                   }
 878              		.loc 1 316 21 is_stmt 0 view .LVU267
 879 02fa 029B     		ldr	r3, [sp, #8]
 315:source\lcd/print.c ****                     post_padding(dr, p);
 880              		.loc 1 315 31 view .LVU268
 881 02fc D944     		add	r9, r9, fp
 882              	.LVL110:
 316:source\lcd/print.c ****                   }
 883              		.loc 1 316 21 is_stmt 1 view .LVU269
 884 02fe 002B     		cmp	r3, #0
 885 0300 B5D0     		beq	.L8
 886 0302 B846     		mov	r8, r7
 316:source\lcd/print.c ****                   }
 887              		.loc 1 316 21 is_stmt 0 view .LVU270
 888 0304 0EE0     		b	.L66
 889              	.LVL111:
 890              	.L63:
 891              	.LBB56:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 892              		.loc 1 313 21 is_stmt 1 discriminator 9 view .LVU271
 893 0306 636A     		ldr	r3, [r4, #36]
 894 0308 0199     		ldr	r1, [sp, #4]
 895 030a 0398     		ldr	r0, [sp, #12]
 896 030c 9847     		blx	r3
 897              	.LVL112:
 898 030e E8E7     		b	.L62
 899              	.LVL113:
 900              	.L65:
 313:source\lcd/print.c ****                     for (i=0; i<n; i++) xputc(dr, str[i], p);
 901              		.loc 1 313 21 is_stmt 0 discriminator 9 view .LVU272
 902              	.LBE56:
 314:source\lcd/print.c ****                     charcount += n;
 903              		.loc 1 314 41 is_stmt 1 discriminator 3 view .LVU273
 904 0310 636A     		ldr	r3, [r4, #36]
 905 0312 0199     		ldr	r1, [sp, #4]
 906 0314 18F8010B 		ldrb	r0, [r8], #1	@ zero_extendqisi2
 314:source\lcd/print.c ****                     charcount += n;
 907              		.loc 1 314 41 is_stmt 0 discriminator 3 view .LVU274
 908 0318 9847     		blx	r3
 909              	.LVL114:
 314:source\lcd/print.c ****                     charcount += n;
 910              		.loc 1 314 37 is_stmt 1 discriminator 3 view .LVU275
 314:source\lcd/print.c ****                     charcount += n;
 911              		.loc 1 314 37 is_stmt 0 discriminator 3 view .LVU276
 912 031a ECE7     		b	.L64
 913              	.LVL115:
 914              	.L67:
 316:source\lcd/print.c ****                   }
 915              		.loc 1 316 21 is_stmt 1 discriminator 4 view .LVU277
 916 031c 636A     		ldr	r3, [r4, #36]
 917 031e 0199     		ldr	r1, [sp, #4]
 918 0320 2020     		movs	r0, #32
 919 0322 9847     		blx	r3
 920              	.LVL116:
 921              	.L66:
 316:source\lcd/print.c ****                   }
 922              		.loc 1 316 21 discriminator 3 view .LVU278
 316:source\lcd/print.c ****                   }
 923              		.loc 1 316 21 is_stmt 0 discriminator 3 view .LVU279
 924 0324 B8F10108 		subs	r8, r8, #1
 925              	.LVL117:
 316:source\lcd/print.c ****                   }
 926              		.loc 1 316 21 discriminator 3 view .LVU280
 927 0328 F8D5     		bpl	.L67
 928 032a 002F     		cmp	r7, #0
 929 032c A8BF     		it	ge
 930 032e B944     		addge	r9, r9, r7
 931 0330 9DE7     		b	.L8
 932              	.LVL118:
 933              	.L44:
 316:source\lcd/print.c ****                   }
 934              		.loc 1 316 21 discriminator 3 view .LVU281
 935              	.LBE52:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 936              		.loc 1 320 21 is_stmt 1 view .LVU282
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 937              		.loc 1 320 24 is_stmt 0 view .LVU283
 938 0332 1AF0400F 		tst	r10, #64
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 939              		.loc 1 320 42 is_stmt 1 discriminator 1 view .LVU284
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 940              		.loc 1 320 54 is_stmt 0 discriminator 1 view .LVU285
 941 0336 1DBF     		ittte	ne
 942 0338 08F10708 		addne	r8, r8, #7
 943              	.LVL119:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 944              		.loc 1 320 54 discriminator 1 view .LVU286
 945 033c 28F00705 		bicne	r5, r8, #7
 946              	.LVL120:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 947              		.loc 1 320 52 discriminator 1 view .LVU287
 948 0340 F5E80201 		ldrdne	r0, [r5], #8
 949              	.LVL121:
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 950              		.loc 1 320 87 discriminator 2 view .LVU288
 951 0344 4546     		moveq	r5, r8
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 952              		.loc 1 320 52 discriminator 1 view .LVU289
 953 0346 18BF     		it	ne
 954 0348 C4E90E01 		strdne	r0, [r4, #56]
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 955              		.loc 1 322 32 view .LVU290
 956 034c 3549     		ldr	r1, .L219+8
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 957              		.loc 1 320 85 discriminator 1 view .LVU291
 958 034e 08BF     		it	eq
 959 0350 55F8043B 		ldreq	r3, [r5], #4
 960              	.LVL122:
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 961              		.loc 1 323 62 discriminator 1 view .LVU292
 962 0354 3448     		ldr	r0, .L219+12
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 963              		.loc 1 322 32 view .LVU293
 964 0356 E162     		str	r1, [r4, #44]
 225:source\lcd/print.c ****                for (;;) {
 965              		.loc 1 225 29 view .LVU294
 966 0358 18BF     		it	ne
 967 035a 0023     		movne	r3, #0
 320:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 968              		.loc 1 320 83 is_stmt 1 discriminator 2 view .LVU295
 969              	.LVL123:
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 970              		.loc 1 321 21 view .LVU296
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 971              		.loc 1 323 62 is_stmt 0 discriminator 1 view .LVU297
 972 035c 3049     		ldr	r1, .L219+4
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 973              		.loc 1 321 24 view .LVU298
 974 035e 1AF0800F 		tst	r10, #128
 321:source\lcd/print.c ****                     dr->hextab = "0123456789ABCDEF";
 975              		.loc 1 321 45 is_stmt 1 discriminator 1 view .LVU299
 976 0362 18BF     		it	ne
 977 0364 9BB2     		uxthne	r3, r3
 978              	.LVL124:
 322:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0X" : "";
 979              		.loc 1 322 21 view .LVU300
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 980              		.loc 1 323 21 view .LVU301
 323:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 981              		.loc 1 323 62 is_stmt 0 discriminator 1 view .LVU302
 982 0366 1AF0080F 		tst	r10, #8
 983              	.LVL125:
 984              	.L218:
 985              	.LBB57:
 367:source\lcd/print.c ****                   }
 986              		.loc 1 367 105 discriminator 5 view .LVU303
 987 036a 18BF     		it	ne
 988 036c 0146     		movne	r1, r0
 989 036e 95E0     		b	.L88
 990              	.LVL126:
 991              	.L36:
 367:source\lcd/print.c ****                   }
 992              		.loc 1 367 105 discriminator 5 view .LVU304
 993              	.LBE57:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 994              		.loc 1 327 21 is_stmt 1 view .LVU305
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 995              		.loc 1 327 24 is_stmt 0 view .LVU306
 996 0370 1AF0400F 		tst	r10, #64
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 997              		.loc 1 327 42 is_stmt 1 discriminator 1 view .LVU307
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 998              		.loc 1 327 54 is_stmt 0 discriminator 1 view .LVU308
 999 0374 1DBF     		ittte	ne
 1000 0376 08F10708 		addne	r8, r8, #7
 1001              	.LVL127:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1002              		.loc 1 327 54 discriminator 1 view .LVU309
 1003 037a 28F00705 		bicne	r5, r8, #7
 1004              	.LVL128:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1005              		.loc 1 327 52 discriminator 1 view .LVU310
 1006 037e F5E80201 		ldrdne	r0, [r5], #8
 1007              	.LVL129:
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1008              		.loc 1 327 87 discriminator 2 view .LVU311
 1009 0382 4546     		moveq	r5, r8
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1010              		.loc 1 327 52 discriminator 1 view .LVU312
 1011 0384 14BF     		ite	ne
 1012 0386 C4E90E01 		strdne	r0, [r4, #56]
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1013              		.loc 1 327 85 discriminator 1 view .LVU313
 1014 038a 55F8043B 		ldreq	r3, [r5], #4
 1015              	.LVL130:
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1016              		.loc 1 329 32 view .LVU314
 1017 038e 2749     		ldr	r1, .L219+16
 1018 0390 E162     		str	r1, [r4, #44]
 225:source\lcd/print.c ****                for (;;) {
 1019              		.loc 1 225 29 view .LVU315
 1020 0392 18BF     		it	ne
 1021 0394 0023     		movne	r3, #0
 327:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1022              		.loc 1 327 83 is_stmt 1 discriminator 2 view .LVU316
 1023              	.LVL131:
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1024              		.loc 1 328 21 view .LVU317
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1025              		.loc 1 328 24 is_stmt 0 view .LVU318
 1026 0396 1AF0800F 		tst	r10, #128
 328:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1027              		.loc 1 328 45 is_stmt 1 discriminator 1 view .LVU319
 1028 039a 18BF     		it	ne
 1029 039c 9BB2     		uxthne	r3, r3
 1030              	.LVL132:
 329:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0x" : "";
 1031              		.loc 1 329 21 view .LVU320
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1032              		.loc 1 330 21 view .LVU321
 330:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1033              		.loc 1 330 62 is_stmt 0 discriminator 1 view .LVU322
 1034 039e 2049     		ldr	r1, .L219+4
 1035 03a0 2348     		ldr	r0, .L219+20
 1036 03a2 1AF0080F 		tst	r10, #8
 1037 03a6 E0E7     		b	.L218
 1038              	.LVL133:
 1039              	.L40:
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1040              		.loc 1 334 21 is_stmt 1 view .LVU323
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1041              		.loc 1 336 61 is_stmt 0 discriminator 1 view .LVU324
 1042 03a8 2248     		ldr	r0, .L219+24
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1043              		.loc 1 335 32 view .LVU325
 1044 03aa 2049     		ldr	r1, .L219+16
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1045              		.loc 1 334 39 view .LVU326
 1046 03ac 4546     		mov	r5, r8
 1047              	.LVL134:
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1048              		.loc 1 336 61 discriminator 1 view .LVU327
 1049 03ae 1AF0080F 		tst	r10, #8
 334:source\lcd/print.c ****                     dr->hextab = "0123456789abcdef";
 1050              		.loc 1 334 23 discriminator 1 view .LVU328
 1051 03b2 55F8043B 		ldr	r3, [r5], #4
 1052              	.LVL135:
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1053              		.loc 1 335 21 is_stmt 1 view .LVU329
 335:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "@" : "";
 1054              		.loc 1 335 32 is_stmt 0 view .LVU330
 1055 03b6 E162     		str	r1, [r4, #44]
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1056              		.loc 1 336 21 is_stmt 1 view .LVU331
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1057              		.loc 1 336 61 is_stmt 0 discriminator 1 view .LVU332
 1058 03b8 1949     		ldr	r1, .L219+4
 1059 03ba 18BF     		it	ne
 1060 03bc 0146     		movne	r1, r0
 336:source\lcd/print.c ****                     dr->fpr.precision = 8;
 1061              		.loc 1 336 36 discriminator 4 view .LVU333
 1062 03be 6160     		str	r1, [r4, #4]
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1063              		.loc 1 337 21 is_stmt 1 view .LVU334
 337:source\lcd/print.c ****                     flags |= _PRECGIVEN;
 1064              		.loc 1 337 39 is_stmt 0 view .LVU335
 1065 03c0 0821     		movs	r1, #8
 1066 03c2 A160     		str	r1, [r4, #8]
 338:source\lcd/print.c ****                     break;
 1067              		.loc 1 338 21 is_stmt 1 view .LVU336
 338:source\lcd/print.c ****                     break;
 1068              		.loc 1 338 27 is_stmt 0 view .LVU337
 1069 03c4 4AF0100A 		orr	r10, r10, #16
 1070              	.LVL136:
 339:source\lcd/print.c ****                   case 'o':
 1071              		.loc 1 339 21 is_stmt 1 view .LVU338
 1072              	.L72:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1073              		.loc 1 386 16 view .LVU339
 1074              	.LBB58:
 1075              	.LBB59:
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1076              		.loc 1 113 26 is_stmt 0 view .LVU340
 1077 03c8 4FF0FF31 		mov	r1, #-1
 114:source\lcd/print.c ****       switch (ch) {
 1078              		.loc 1 114 10 view .LVU341
 1079 03cc 1AF4047F 		tst	r10, #528
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1080              		.loc 1 113 50 view .LVU342
 1081 03d0 C4E90311 		strd	r1, r1, [r4, #12]
 114:source\lcd/print.c ****       switch (ch) {
 1082              		.loc 1 114 72 discriminator 1 view .LVU343
 1083 03d4 04BF     		itt	eq
 1084 03d6 0121     		moveq	r1, #1
 1085 03d8 A160     		streq	r1, [r4, #8]
 115:source\lcd/print.c **** 	 case 'p':
 1086              		.loc 1 115 7 view .LVU344
 1087 03da 582A     		cmp	r2, #88
 1088              	.LBE59:
 1089              	.LBE58:
 386:source\lcd/print.c ****                dr->fpr.flags = flags;
 1090              		.loc 1 386 26 view .LVU345
 1091 03dc 2763     		str	r7, [r4, #48]
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1092              		.loc 1 387 16 is_stmt 1 view .LVU346
 387:source\lcd/print.c ****                charcount += printf_display(p, ch, dr, v);
 1093              		.loc 1 387 30 is_stmt 0 view .LVU347
 1094 03de C4F800A0 		str	r10, [r4]
 388:source\lcd/print.c ****                continue;
 1095              		.loc 1 388 16 is_stmt 1 view .LVU348
 1096              	.LVL137:
 1097              	.LBB83:
 1098              	.LBI58:
 108:source\lcd/print.c **** {
 1099              		.loc 1 108 12 view .LVU349
 1100              	.LBB80:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1101              		.loc 1 110 7 view .LVU350
 111:source\lcd/print.c ****       int flags = dr->fpr.flags;
 1102              		.loc 1 111 7 view .LVU351
 112:source\lcd/print.c ****       dr->fpr.before_dot = -1, dr->fpr.after_dot = -1;
 1103              		.loc 1 112 7 view .LVU352
 113:source\lcd/print.c ****       if (!(dr->fpr.flags & (_FPCONV + _PRECGIVEN))) dr->fpr.precision = 1;
 1104              		.loc 1 113 7 view .LVU353
 114:source\lcd/print.c ****       switch (ch) {
 1105              		.loc 1 114 7 view .LVU354
 114:source\lcd/print.c ****       switch (ch) {
 1106              		.loc 1 114 54 discriminator 1 view .LVU355
 115:source\lcd/print.c **** 	 case 'p':
 1107              		.loc 1 115 7 view .LVU356
 1108 03e2 00F09580 		beq	.L93
 115:source\lcd/print.c **** 	 case 'p':
 1109              		.loc 1 115 7 is_stmt 0 view .LVU357
 1110 03e6 643A     		subs	r2, r2, #100
 1111              	.LVL138:
 115:source\lcd/print.c **** 	 case 'p':
 1112              		.loc 1 115 7 view .LVU358
 1113 03e8 142A     		cmp	r2, #20
 1114 03ea 0DD8     		bhi	.L94
 1115 03ec 1248     		ldr	r0, .L219+28
 1116 03ee 0121     		movs	r1, #1
 1117 03f0 9140     		lsls	r1, r1, r2
 1118 03f2 0840     		ands	r0, r0, r1
 1119 03f4 0028     		cmp	r0, #0
 1120 03f6 40F03081 		bne	.L95
 1121 03fa 1048     		ldr	r0, .L219+32
 1122 03fc 0140     		ands	r1, r1, r0
 1123 03fe 40F08780 		bne	.L93
 1124 0402 0B2A     		cmp	r2, #11
 1125 0404 00F0FF80 		beq	.L96
 1126              	.L94:
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1127              		.loc 1 164 5 is_stmt 1 view .LVU359
 165:source\lcd/print.c ****            buff[2] = '0';
 1128              		.loc 1 165 12 view .LVU360
 166:source\lcd/print.c ****            len = 3;
 1129              		.loc 1 166 12 view .LVU361
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1130              		.loc 1 164 13 is_stmt 0 view .LVU362
 1131 0408 42F63063 		movw	r3, #11824
 1132              	.LVL139:
 164:source\lcd/print.c ****            buff[1] = DecimalPoint;
 1133              		.loc 1 164 13 view .LVU363
 1134 040c ADF82030 		strh	r3, [sp, #32]	@ movhi
 166:source\lcd/print.c ****            len = 3;
 1135              		.loc 1 166 20 view .LVU364
 1136 0410 3023     		movs	r3, #48
 1137 0412 8DF82230 		strb	r3, [sp, #34]
 167:source\lcd/print.c ****            break;
 1138              		.loc 1 167 12 is_stmt 1 view .LVU365
 1139              	.LVL140:
 168:source\lcd/print.c ****       }
 1140              		.loc 1 168 12 view .LVU366
 167:source\lcd/print.c ****            break;
 1141              		.loc 1 167 16 is_stmt 0 view .LVU367
 1142 0416 4FF00308 		mov	r8, #3
 168:source\lcd/print.c ****       }
 1143              		.loc 1 168 12 view .LVU368
 1144 041a 90E0     		b	.L101
 1145              	.L220:
 1146              		.align	2
 1147              	.L219:
 1148 041c 0F000000 		.word	.LC7
 1149 0420 03000000 		.word	.LC1
 1150 0424 11000000 		.word	.LC8
 1151 0428 00000000 		.word	.LC0
 1152 042c 22000000 		.word	.LC9
 1153 0430 04000000 		.word	.LC2
 1154 0434 07000000 		.word	.LC3
 1155 0438 21000200 		.word	131105
 1156 043c 00101000 		.word	1052672
 1157              	.LVL141:
 1158              	.L41:
 168:source\lcd/print.c ****       }
 1159              		.loc 1 168 12 view .LVU369
 1160              	.LBE80:
 1161              	.LBE83:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1162              		.loc 1 341 21 is_stmt 1 view .LVU370
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1163              		.loc 1 341 24 is_stmt 0 view .LVU371
 1164 0440 1AF0400F 		tst	r10, #64
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1165              		.loc 1 341 42 is_stmt 1 discriminator 1 view .LVU372
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1166              		.loc 1 341 54 is_stmt 0 discriminator 1 view .LVU373
 1167 0444 1DBF     		ittte	ne
 1168 0446 08F10708 		addne	r8, r8, #7
 1169              	.LVL142:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1170              		.loc 1 341 54 discriminator 1 view .LVU374
 1171 044a 28F00705 		bicne	r5, r8, #7
 1172              	.LVL143:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1173              		.loc 1 341 52 discriminator 1 view .LVU375
 1174 044e F5E80201 		ldrdne	r0, [r5], #8
 1175              	.LVL144:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1176              		.loc 1 341 87 discriminator 2 view .LVU376
 1177 0452 4546     		moveq	r5, r8
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1178              		.loc 1 341 52 discriminator 1 view .LVU377
 1179 0454 1ABF     		itte	ne
 1180 0456 C4E90E01 		strdne	r0, [r4, #56]
 225:source\lcd/print.c ****                for (;;) {
 1181              		.loc 1 225 29 view .LVU378
 1182 045a 0023     		movne	r3, #0
 1183              	.LVL145:
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1184              		.loc 1 341 83 is_stmt 1 discriminator 2 view .LVU379
 341:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1185              		.loc 1 341 85 is_stmt 0 discriminator 1 view .LVU380
 1186 045c 55F8043B 		ldreq	r3, [r5], #4
 1187              	.LVL146:
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1188              		.loc 1 342 21 is_stmt 1 view .LVU381
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1189              		.loc 1 343 61 is_stmt 0 discriminator 1 view .LVU382
 1190 0460 B049     		ldr	r1, .L221
 1191 0462 B148     		ldr	r0, .L221+4
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1192              		.loc 1 342 24 view .LVU383
 1193 0464 1AF0800F 		tst	r10, #128
 342:source\lcd/print.c ****                     dr->fpr.prefix = (flags&_VARIANT) ? "0" : "";
 1194              		.loc 1 342 45 is_stmt 1 discriminator 1 view .LVU384
 1195 0468 18BF     		it	ne
 1196 046a 9BB2     		uxthne	r3, r3
 1197              	.LVL147:
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1198              		.loc 1 343 21 view .LVU385
 343:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1199              		.loc 1 343 61 is_stmt 0 discriminator 1 view .LVU386
 1200 046c 1AF0080F 		tst	r10, #8
 1201 0470 7BE7     		b	.L218
 1202              	.LVL148:
 1203              	.L38:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1204              		.loc 1 347 21 is_stmt 1 view .LVU387
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1205              		.loc 1 347 24 is_stmt 0 view .LVU388
 1206 0472 1AF0400F 		tst	r10, #64
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1207              		.loc 1 347 42 is_stmt 1 discriminator 1 view .LVU389
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1208              		.loc 1 347 54 is_stmt 0 discriminator 1 view .LVU390
 1209 0476 1DBF     		ittte	ne
 1210 0478 08F10708 		addne	r8, r8, #7
 1211              	.LVL149:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1212              		.loc 1 347 54 discriminator 1 view .LVU391
 1213 047c 28F00705 		bicne	r5, r8, #7
 1214              	.LVL150:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1215              		.loc 1 347 52 discriminator 1 view .LVU392
 1216 0480 F5E80201 		ldrdne	r0, [r5], #8
 1217              	.LVL151:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1218              		.loc 1 347 85 discriminator 2 view .LVU393
 1219 0484 4546     		moveq	r5, r8
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1220              		.loc 1 347 52 discriminator 1 view .LVU394
 1221 0486 1ABF     		itte	ne
 1222 0488 C4E90E01 		strdne	r0, [r4, #56]
 225:source\lcd/print.c ****                for (;;) {
 1223              		.loc 1 225 29 view .LVU395
 1224 048c 0023     		movne	r3, #0
 1225              	.LVL152:
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1226              		.loc 1 347 83 is_stmt 1 discriminator 2 view .LVU396
 347:source\lcd/print.c ****                     if (flags & _SHORTSPEC) v = (unsigned short)v;
 1227              		.loc 1 347 85 is_stmt 0 discriminator 2 view .LVU397
 1228 048e 55F8043B 		ldreq	r3, [r5], #4
 1229              	.LVL153:
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1230              		.loc 1 348 21 is_stmt 1 view .LVU398
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1231              		.loc 1 349 36 is_stmt 0 view .LVU399
 1232 0492 A449     		ldr	r1, .L221
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1233              		.loc 1 348 24 view .LVU400
 1234 0494 1AF0800F 		tst	r10, #128
 348:source\lcd/print.c ****                     dr->fpr.prefix = "";
 1235              		.loc 1 348 45 is_stmt 1 discriminator 1 view .LVU401
 1236 0498 18BF     		it	ne
 1237 049a 9BB2     		uxthne	r3, r3
 1238              	.LVL154:
 349:source\lcd/print.c ****                     if (flags & _PRECGIVEN) flags &= ~_PADZERO;
 1239              		.loc 1 349 21 view .LVU402
 1240              	.L88:
 369:source\lcd/print.c ****                     break;
 1241              		.loc 1 369 24 is_stmt 0 view .LVU403
 1242 049c 1AF0100F 		tst	r10, #16
 1243              	.LBB84:
 367:source\lcd/print.c ****                   }
 1244              		.loc 1 367 36 discriminator 12 view .LVU404
 1245 04a0 6160     		str	r1, [r4, #4]
 1246              	.LBE84:
 369:source\lcd/print.c ****                     break;
 1247              		.loc 1 369 21 is_stmt 1 view .LVU405
 369:source\lcd/print.c ****                     break;
 1248              		.loc 1 369 24 is_stmt 0 view .LVU406
 1249 04a2 91D0     		beq	.L72
 369:source\lcd/print.c ****                     break;
 1250              		.loc 1 369 45 is_stmt 1 discriminator 1 view .LVU407
 369:source\lcd/print.c ****                     break;
 1251              		.loc 1 369 51 is_stmt 0 discriminator 1 view .LVU408
 1252 04a4 2AF4807A 		bic	r10, r10, #256
 1253              	.LVL155:
 369:source\lcd/print.c ****                     break;
 1254              		.loc 1 369 51 discriminator 1 view .LVU409
 1255 04a8 8EE7     		b	.L72
 1256              	.LVL156:
 1257              	.L43:
 1258              	.LBB85:
 355:source\lcd/print.c ****                     if (flags & _LLSPEC) {
 1259              		.loc 1 355 21 is_stmt 1 view .LVU410
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1260              		.loc 1 356 21 view .LVU411
 356:source\lcd/print.c ****                        dr->llval = va_arg(args, long long);
 1261              		.loc 1 356 24 is_stmt 0 view .LVU412
 1262 04aa 1AF0400F 		tst	r10, #64
 1263 04ae 1DD0     		beq	.L85
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1264              		.loc 1 357 24 is_stmt 1 view .LVU413
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1265              		.loc 1 357 36 is_stmt 0 view .LVU414
 1266 04b0 08F10708 		add	r8, r8, #7
 1267              	.LVL157:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1268              		.loc 1 357 36 view .LVU415
 1269 04b4 28F00708 		bic	r8, r8, #7
 1270              	.LVL158:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1271              		.loc 1 357 36 view .LVU416
 1272 04b8 4546     		mov	r5, r8
 1273              	.LVL159:
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1274              		.loc 1 357 36 view .LVU417
 1275 04ba D8F80430 		ldr	r3, [r8, #4]
 1276              	.LVL160:
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1277              		.loc 1 358 24 is_stmt 1 view .LVU418
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1278              		.loc 1 357 36 is_stmt 0 view .LVU419
 1279 04be 55F8081B 		ldr	r1, [r5], #8
 1280              	.LVL161:
 358:source\lcd/print.c ****                           dr->llval = -dr->llval;
 1281              		.loc 1 358 27 view .LVU420
 1282 04c2 002B     		cmp	r3, #0
 1283 04c4 0ADB     		blt	.L86
 357:source\lcd/print.c ****                        if ((long long)dr->llval < 0) {
 1284              		.loc 1 357 34 discriminator 1 view .LVU421
 1285 04c6 C4E90E13 		strd	r1, r3, [r4, #56]
 1286              	.LBE85:
 225:source\lcd/print.c ****                for (;;) {
 1287              		.loc 1 225 29 view .LVU422
 1288 04ca 0023     		movs	r3, #0
 1289              	.L87:
 1290              	.LBB86:
 367:source\lcd/print.c ****                   }
 1291              		.loc 1 367 78 discriminator 1 view .LVU423
 1292 04cc 1AF0020F 		tst	r10, #2
 1293 04d0 1AD1     		bne	.L153
 367:source\lcd/print.c ****                   }
 1294              		.loc 1 367 105 discriminator 5 view .LVU424
 1295 04d2 9449     		ldr	r1, .L221
 1296 04d4 9548     		ldr	r0, .L221+8
 1297 04d6 1AF0040F 		tst	r10, #4
 1298 04da 46E7     		b	.L218
 1299              	.L86:
 359:source\lcd/print.c ****                           w = -1;
 1300              		.loc 1 359 27 is_stmt 1 view .LVU425
 359:source\lcd/print.c ****                           w = -1;
 1301              		.loc 1 359 39 is_stmt 0 view .LVU426
 1302 04dc 4942     		negs	r1, r1
 1303 04de 63EB4303 		sbc	r3, r3, r3, lsl #1
 359:source\lcd/print.c ****                           w = -1;
 1304              		.loc 1 359 37 view .LVU427
 1305 04e2 C4E90E13 		strd	r1, r3, [r4, #56]
 360:source\lcd/print.c ****                        } else w = 0;
 1306              		.loc 1 360 27 is_stmt 1 view .LVU428
 1307              	.LVL162:
 367:source\lcd/print.c ****                   }
 1308              		.loc 1 367 21 view .LVU429
 1309              	.LBE86:
 225:source\lcd/print.c ****                for (;;) {
 1310              		.loc 1 225 29 is_stmt 0 view .LVU430
 1311 04e6 0023     		movs	r3, #0
 1312              	.LVL163:
 1313              	.L152:
 1314              	.LBB87:
 367:source\lcd/print.c ****                   }
 1315              		.loc 1 367 52 discriminator 2 view .LVU431
 1316 04e8 9149     		ldr	r1, .L221+12
 1317 04ea D7E7     		b	.L88
 1318              	.LVL164:
 1319              	.L85:
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1320              		.loc 1 363 24 is_stmt 1 view .LVU432
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1321              		.loc 1 363 26 is_stmt 0 view .LVU433
 1322 04ec 4546     		mov	r5, r8
 1323              	.LVL165:
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1324              		.loc 1 364 27 view .LVU434
 1325 04ee 1AF0800F 		tst	r10, #128
 363:source\lcd/print.c ****                        if (flags & _SHORTSPEC) w = (signed short)w;
 1326              		.loc 1 363 26 view .LVU435
 1327 04f2 55F8041B 		ldr	r1, [r5], #4
 1328              	.LVL166:
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1329              		.loc 1 364 24 is_stmt 1 view .LVU436
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1330              		.loc 1 364 48 discriminator 1 view .LVU437
 364:source\lcd/print.c ****                        v = (w < 0) ? -w : w;
 1331              		.loc 1 364 52 is_stmt 0 discriminator 1 view .LVU438
 1332 04f6 18BF     		it	ne
 1333 04f8 09B2     		sxthne	r1, r1
 1334              	.LVL167:
 365:source\lcd/print.c ****                     }
 1335              		.loc 1 365 24 is_stmt 1 view .LVU439
 365:source\lcd/print.c ****                     }
 1336              		.loc 1 365 41 is_stmt 0 view .LVU440
 1337 04fa 81EAE173 		eor	r3, r1, r1, asr #31
 1338              	.LVL168:
 367:source\lcd/print.c ****                   }
 1339              		.loc 1 367 52 view .LVU441
 1340 04fe 0029     		cmp	r1, #0
 365:source\lcd/print.c ****                     }
 1341              		.loc 1 365 41 view .LVU442
 1342 0500 A3EBE173 		sub	r3, r3, r1, asr #31
 1343              	.LVL169:
 367:source\lcd/print.c ****                   }
 1344              		.loc 1 367 21 is_stmt 1 view .LVU443
 367:source\lcd/print.c ****                   }
 1345              		.loc 1 367 52 is_stmt 0 view .LVU444
 1346 0504 E2DA     		bge	.L87
 1347 0506 EFE7     		b	.L152
 1348              	.LVL170:
 1349              	.L153:
 367:source\lcd/print.c ****                   }
 1350              		.loc 1 367 78 discriminator 4 view .LVU445
 1351 0508 8A49     		ldr	r1, .L221+16
 1352 050a C7E7     		b	.L88
 1353              	.LVL171:
 1354              	.L155:
 367:source\lcd/print.c ****                   }
 1355              		.loc 1 367 78 discriminator 4 view .LVU446
 1356              	.LBE87:
 382:source\lcd/print.c ****                     }
 1357              		.loc 1 382 60 discriminator 2 view .LVU447
 1358 050c 894B     		ldr	r3, .L221+16
 1359 050e 1DE6     		b	.L91
 1360              	.LVL172:
 1361              	.L93:
 1362              	.LBB88:
 1363              	.LBB81:
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1364              		.loc 1 119 5 is_stmt 1 view .LVU448
 119:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1365              		.loc 1 119 8 is_stmt 0 view .LVU449
 1366 0510 1AF04008 		ands	r8, r10, #64
 1367 0514 0BD1     		bne	.L97
 1368 0516 08AA     		add	r2, sp, #32
 1369              	.LVL173:
 1370              	.L98:
 126:source\lcd/print.c **** 		    buff[len++] = dr->hextab[v & 0xf];
 1371              		.loc 1 126 17 is_stmt 1 view .LVU450
 1372 0518 8BB1     		cbz	r3, .L101
 127:source\lcd/print.c **** 		    v = v >> 4;
 1373              		.loc 1 127 7 view .LVU451
 127:source\lcd/print.c **** 		    v = v >> 4;
 1374              		.loc 1 127 34 is_stmt 0 view .LVU452
 1375 051a 03F00F01 		and	r1, r3, #15
 127:source\lcd/print.c **** 		    v = v >> 4;
 1376              		.loc 1 127 31 view .LVU453
 1377 051e E06A     		ldr	r0, [r4, #44]
 127:source\lcd/print.c **** 		    v = v >> 4;
 1378              		.loc 1 127 19 view .LVU454
 1379 0520 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1380 0522 02F8011B 		strb	r1, [r2], #1
 127:source\lcd/print.c **** 		    v = v >> 4;
 1381              		.loc 1 127 15 view .LVU455
 1382 0526 08F10108 		add	r8, r8, #1
 1383              	.LVL174:
 128:source\lcd/print.c **** 	      }
 1384              		.loc 1 128 7 is_stmt 1 view .LVU456
 128:source\lcd/print.c **** 	      }
 1385              		.loc 1 128 9 is_stmt 0 view .LVU457
 1386 052a 1B09     		lsrs	r3, r3, #4
 1387              	.LVL175:
 128:source\lcd/print.c **** 	      }
 1388              		.loc 1 128 9 view .LVU458
 1389 052c F4E7     		b	.L98
 1390              	.LVL176:
 1391              	.L97:
 1392              	.LBB60:
 120:source\lcd/print.c **** 	      while (w != 0) {
 1393              		.loc 1 120 8 is_stmt 1 view .LVU459
 120:source\lcd/print.c **** 	      while (w != 0) {
 1394              		.loc 1 120 27 is_stmt 0 view .LVU460
 1395 052e D4E90E31 		ldrd	r3, r1, [r4, #56]
 1396              	.LVL177:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1397              		.loc 1 121 8 is_stmt 1 view .LVU461
 1398 0532 08AA     		add	r2, sp, #32
 1399              	.LBE60:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1400              		.loc 1 110 11 is_stmt 0 view .LVU462
 1401 0534 4FF00008 		mov	r8, #0
 1402              	.LVL178:
 1403              	.L99:
 1404              	.LBB61:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1405              		.loc 1 121 17 is_stmt 1 view .LVU463
 1406 0538 53EA0100 		orrs	r0, r3, r1
 1407 053c 55D1     		bne	.L100
 1408              	.LVL179:
 1409              	.L101:
 121:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 0xf];
 1410              		.loc 1 121 17 is_stmt 0 view .LVU464
 1411              	.LBE61:
 1412              	.LBB62:
 171:source\lcd/print.c ****       int width = dr->width;
 1413              		.loc 1 171 7 is_stmt 1 view .LVU465
 172:source\lcd/print.c ****       if (flags & _FPCONV) {
 1414              		.loc 1 172 7 view .LVU466
 173:source\lcd/print.c **** 	 precision = 0;
 1415              		.loc 1 173 7 view .LVU467
 173:source\lcd/print.c **** 	 precision = 0;
 1416              		.loc 1 173 10 is_stmt 0 view .LVU468
 1417 053e 1AF40073 		ands	r3, r10, #512
 1418 0542 0593     		str	r3, [sp, #20]
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1419              		.loc 1 178 10 is_stmt 1 view .LVU469
 178:source\lcd/print.c ****          if ((precision -= len)<0) precision = 0;
 1420              		.loc 1 178 20 is_stmt 0 view .LVU470
 1421 0544 08BF     		it	eq
 1422 0546 A368     		ldreq	r3, [r4, #8]
 1423              	.LVL180:
 179:source\lcd/print.c ****       }
 1424              		.loc 1 179 10 is_stmt 1 view .LVU471
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1425              		.loc 1 181 35 is_stmt 0 view .LVU472
 1426 0548 6068     		ldr	r0, [r4, #4]
 179:source\lcd/print.c ****       }
 1427              		.loc 1 179 25 view .LVU473
 1428 054a 06BF     		itte	eq
 1429 054c A3EB0803 		subeq	r3, r3, r8
 1430              	.LVL181:
 179:source\lcd/print.c ****       }
 1431              		.loc 1 179 13 view .LVU474
 1432 0550 23EAE373 		biceq	r3, r3, r3, asr #31
 1433 0554 0023     		movne	r3, #0
 1434 0556 0293     		str	r3, [sp, #8]
 1435              	.LVL182:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1436              		.loc 1 181 7 is_stmt 1 view .LVU475
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1437              		.loc 1 181 35 is_stmt 0 view .LVU476
 1438 0558 FFF7FEFF 		bl	strlen
 1439              	.LVL183:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1440              		.loc 1 181 27 view .LVU477
 1441 055c 029B     		ldr	r3, [sp, #8]
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1442              		.loc 1 181 13 discriminator 1 view .LVU478
 1443 055e 3F1A     		subs	r7, r7, r0
 1444              	.LVL184:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1445              		.loc 1 181 27 view .LVU479
 1446 0560 4344     		add	r3, r8, r3
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1447              		.loc 1 181 13 discriminator 1 view .LVU480
 1448 0562 A7EB030B 		sub	fp, r7, r3
 1449              	.LVL185:
 182:source\lcd/print.c ****       {
 1450              		.loc 1 182 7 is_stmt 1 view .LVU481
 182:source\lcd/print.c ****       {
 1451              		.loc 1 182 32 discriminator 1 view .LVU482
 1452 0566 0AF00103 		and	r3, r10, #1
 1453 056a 0493     		str	r3, [sp, #16]
 1454 056c 40F20113 		movw	r3, #257
 1455 0570 1AEA030F 		tst	r10, r3
 1456 0574 00F0A580 		beq	.L158
 1457              	.LBE62:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1458              		.loc 1 110 20 is_stmt 0 view .LVU483
 1459 0578 0027     		movs	r7, #0
 1460              	.LVL186:
 1461              	.L117:
 1462              	.LBB71:
 1463              	.LBB63:
 182:source\lcd/print.c ****       {
 1464              		.loc 1 182 32 is_stmt 1 discriminator 12 view .LVU484
 1465              	.LBE63:
 182:source\lcd/print.c ****       {
 1466              		.loc 1 182 50 discriminator 12 view .LVU485
 1467              	.LBB64:
 184:source\lcd/print.c ****       char *prefix = dr->fpr.prefix;
 1468              		.loc 1 184 7 view .LVU486
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1469              		.loc 1 185 7 view .LVU487
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1470              		.loc 1 185 13 is_stmt 0 view .LVU488
 1471 057a 6368     		ldr	r3, [r4, #4]
 1472              	.LVL187:
 186:source\lcd/print.c ****       }
 1473              		.loc 1 186 7 is_stmt 1 view .LVU489
 185:source\lcd/print.c ****       for (; (c=*prefix++)!=0; charcount++) xputc(dr, c, p);
 1474              		.loc 1 185 13 is_stmt 0 view .LVU490
 1475 057c 1946     		mov	r1, r3
 1476              	.LVL188:
 1477              	.L119:
 186:source\lcd/print.c ****       }
 1478              		.loc 1 186 27 is_stmt 1 discriminator 1 view .LVU491
 186:source\lcd/print.c ****       }
 1479              		.loc 1 186 24 is_stmt 0 discriminator 1 view .LVU492
 1480 057e 0A46     		mov	r2, r1
 1481              	.LVL189:
 186:source\lcd/print.c ****       }
 1482              		.loc 1 186 16 discriminator 1 view .LVU493
 1483 0580 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1484              	.LVL190:
 186:source\lcd/print.c ****       }
 1485              		.loc 1 186 16 discriminator 1 view .LVU494
 1486 0584 0390     		str	r0, [sp, #12]
 1487              	.LVL191:
 186:source\lcd/print.c ****       }
 1488              		.loc 1 186 27 discriminator 1 view .LVU495
 1489 0586 0028     		cmp	r0, #0
 1490 0588 40F09D80 		bne	.L120
 1491 058c FB1A     		subs	r3, r7, r3
 1492 058e CF18     		adds	r7, r1, r3
 1493              	.LBE64:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1494              		.loc 1 188 7 is_stmt 1 view .LVU496
 1495 0590 049B     		ldr	r3, [sp, #16]
 1496 0592 8BB9     		cbnz	r3, .L121
 1497              	.LBB65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1498              		.loc 1 188 7 discriminator 1 view .LVU497
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1499              		.loc 1 188 7 is_stmt 0 discriminator 3 view .LVU498
 1500 0594 1AF4807F 		tst	r10, #256
 1501 0598 0CBF     		ite	eq
 1502 059a 2023     		moveq	r3, #32
 1503 059c 3023     		movne	r3, #48
 1504 059e 0693     		str	r3, [sp, #24]
 1505              	.LVL192:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1506              		.loc 1 188 7 is_stmt 1 discriminator 6 view .LVU499
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1507              		.loc 1 188 7 is_stmt 0 view .LVU500
 1508 05a0 DA46     		mov	r10, fp
 1509              	.LVL193:
 1510              	.L123:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1511              		.loc 1 188 7 is_stmt 1 discriminator 7 view .LVU501
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1512              		.loc 1 188 7 is_stmt 0 discriminator 7 view .LVU502
 1513 05a2 BAF1010A 		subs	r10, r10, #1
 1514              	.LVL194:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1515              		.loc 1 188 7 discriminator 7 view .LVU503
 1516 05a6 40F19880 		bpl	.L124
 1517 05aa 2BEAEB73 		bic	r3, fp, fp, asr #31
 1518 05ae 0BF1FF32 		add	r2, fp, #-1
 1519 05b2 1F44     		add	r7, r7, r3
 1520 05b4 A2EB030B 		sub	fp, r2, r3
 1521              	.LVL195:
 1522              	.L121:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1523              		.loc 1 188 7 is_stmt 1 discriminator 10 view .LVU504
 1524              	.LBE65:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1525              		.loc 1 188 25 discriminator 10 view .LVU505
 189:source\lcd/print.c **** 	 int i, c;
 1526              		.loc 1 189 7 view .LVU506
 189:source\lcd/print.c **** 	 int i, c;
 1527              		.loc 1 189 10 is_stmt 0 view .LVU507
 1528 05b8 059B     		ldr	r3, [sp, #20]
 1529 05ba 002B     		cmp	r3, #0
 1530 05bc 40F0AB80 		bne	.L125
 1531 05c0 DDF808A0 		ldr	r10, [sp, #8]
 1532              	.LVL196:
 1533              	.L126:
 206:source\lcd/print.c **** 	 charcount += len;
 1534              		.loc 1 206 3 is_stmt 1 discriminator 1 view .LVU508
 1535 05c4 BAF1010A 		subs	r10, r10, #1
 1536              	.LVL197:
 206:source\lcd/print.c **** 	 charcount += len;
 1537              		.loc 1 206 3 is_stmt 0 discriminator 1 view .LVU509
 1538 05c8 80F0C180 		bcs	.L135
 1539 05cc 029B     		ldr	r3, [sp, #8]
 1540 05ce 3B44     		add	r3, r3, r7
 206:source\lcd/print.c **** 	 charcount += len;
 1541              		.loc 1 206 36 is_stmt 1 discriminator 3 view .LVU510
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1542              		.loc 1 207 3 view .LVU511
 207:source\lcd/print.c ****          while (len-- > 0) xputc(dr, buff[len], p);
 1543              		.loc 1 207 13 is_stmt 0 view .LVU512
 1544 05d0 08EB0307 		add	r7, r8, r3
 1545              	.LVL198:
 208:source\lcd/print.c ****       }
 1546              		.loc 1 208 10 is_stmt 1 view .LVU513
 1547              	.L136:
 208:source\lcd/print.c ****       }
 1548              		.loc 1 208 23 discriminator 1 view .LVU514
 1549 05d4 B8F10108 		subs	r8, r8, #1
 1550              	.LVL199:
 208:source\lcd/print.c ****       }
 1551              		.loc 1 208 23 is_stmt 0 discriminator 1 view .LVU515
 1552 05d8 C0F0A080 		bcc	.L134
 208:source\lcd/print.c ****       }
 1553              		.loc 1 208 28 is_stmt 1 discriminator 2 view .LVU516
 1554 05dc 08AA     		add	r2, sp, #32
 1555 05de 636A     		ldr	r3, [r4, #36]
 1556 05e0 0199     		ldr	r1, [sp, #4]
 1557 05e2 12F80800 		ldrb	r0, [r2, r8]	@ zero_extendqisi2
 1558 05e6 9847     		blx	r3
 1559              	.LVL200:
 1560 05e8 F4E7     		b	.L136
 1561              	.LVL201:
 1562              	.L100:
 208:source\lcd/print.c ****       }
 1563              		.loc 1 208 28 is_stmt 0 discriminator 2 view .LVU517
 1564              	.LBE71:
 1565              	.LBB72:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1566              		.loc 1 122 7 is_stmt 1 view .LVU518
 122:source\lcd/print.c **** 		    w = w >> 4;
 1567              		.loc 1 122 39 is_stmt 0 view .LVU519
 1568 05ea 03F00F0C 		and	ip, r3, #15
 122:source\lcd/print.c **** 		    w = w >> 4;
 1569              		.loc 1 122 31 view .LVU520
 1570 05ee E06A     		ldr	r0, [r4, #44]
 123:source\lcd/print.c **** 	      }
 1571              		.loc 1 123 9 view .LVU521
 1572 05f0 1B09     		lsrs	r3, r3, #4
 1573              	.LVL202:
 122:source\lcd/print.c **** 		    w = w >> 4;
 1574              		.loc 1 122 19 view .LVU522
 1575 05f2 10F80C00 		ldrb	r0, [r0, ip]	@ zero_extendqisi2
 1576 05f6 02F8010B 		strb	r0, [r2], #1
 123:source\lcd/print.c **** 	      }
 1577              		.loc 1 123 9 view .LVU523
 1578 05fa 43EA0173 		orr	r3, r3, r1, lsl #28
 122:source\lcd/print.c **** 		    w = w >> 4;
 1579              		.loc 1 122 15 view .LVU524
 1580 05fe 08F10108 		add	r8, r8, #1
 1581              	.LVL203:
 123:source\lcd/print.c **** 	      }
 1582              		.loc 1 123 7 is_stmt 1 view .LVU525
 123:source\lcd/print.c **** 	      }
 1583              		.loc 1 123 9 is_stmt 0 view .LVU526
 1584 0602 0909     		lsrs	r1, r1, #4
 123:source\lcd/print.c **** 	      }
 1585              		.loc 1 123 9 view .LVU527
 1586 0604 98E7     		b	.L99
 1587              	.LVL204:
 1588              	.L96:
 123:source\lcd/print.c **** 	      }
 1589              		.loc 1 123 9 view .LVU528
 1590              	.LBE72:
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1591              		.loc 1 133 5 is_stmt 1 view .LVU529
 133:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1592              		.loc 1 133 8 is_stmt 0 view .LVU530
 1593 0606 1AF04008 		ands	r8, r10, #64
 1594 060a 0AD1     		bne	.L103
 1595 060c 08AA     		add	r2, sp, #32
 1596              	.LVL205:
 1597              	.L104:
 140:source\lcd/print.c **** 		    buff[len++] = '0' + (v & 7);
 1598              		.loc 1 140 17 is_stmt 1 view .LVU531
 1599 060e 7BB1     		cbz	r3, .L107
 141:source\lcd/print.c **** 		    v = v >> 3;
 1600              		.loc 1 141 7 view .LVU532
 141:source\lcd/print.c **** 		    v = v >> 3;
 1601              		.loc 1 141 30 is_stmt 0 view .LVU533
 1602 0610 03F00701 		and	r1, r3, #7
 141:source\lcd/print.c **** 		    v = v >> 3;
 1603              		.loc 1 141 25 view .LVU534
 1604 0614 3031     		adds	r1, r1, #48
 141:source\lcd/print.c **** 		    v = v >> 3;
 1605              		.loc 1 141 19 view .LVU535
 1606 0616 02F8011B 		strb	r1, [r2], #1
 141:source\lcd/print.c **** 		    v = v >> 3;
 1607              		.loc 1 141 15 view .LVU536
 1608 061a 08F10108 		add	r8, r8, #1
 1609              	.LVL206:
 142:source\lcd/print.c **** 	      }
 1610              		.loc 1 142 7 is_stmt 1 view .LVU537
 142:source\lcd/print.c **** 	      }
 1611              		.loc 1 142 9 is_stmt 0 view .LVU538
 1612 061e DB08     		lsrs	r3, r3, #3
 1613              	.LVL207:
 142:source\lcd/print.c **** 	      }
 1614              		.loc 1 142 9 view .LVU539
 1615 0620 F5E7     		b	.L104
 1616              	.LVL208:
 1617              	.L103:
 1618              	.LBB73:
 134:source\lcd/print.c **** 	      while (w != 0) {
 1619              		.loc 1 134 8 is_stmt 1 view .LVU540
 134:source\lcd/print.c **** 	      while (w != 0) {
 1620              		.loc 1 134 27 is_stmt 0 view .LVU541
 1621 0622 D4E90E20 		ldrd	r2, r0, [r4, #56]
 1622              	.LVL209:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1623              		.loc 1 135 8 is_stmt 1 view .LVU542
 1624 0626 08AB     		add	r3, sp, #32
 1625              	.LVL210:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1626              		.loc 1 135 8 is_stmt 0 view .LVU543
 1627              	.LBE73:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1628              		.loc 1 110 11 view .LVU544
 1629 0628 8846     		mov	r8, r1
 1630              	.LVL211:
 1631              	.L105:
 1632              	.LBB74:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1633              		.loc 1 135 17 is_stmt 1 view .LVU545
 1634 062a 52EA0001 		orrs	r1, r2, r0
 1635 062e 06D1     		bne	.L106
 1636              	.LVL212:
 1637              	.L107:
 135:source\lcd/print.c **** 		    buff[len++] = dr->hextab[(int)w & 7];
 1638              		.loc 1 135 17 is_stmt 0 view .LVU546
 1639              	.LBE74:
 145:source\lcd/print.c **** 	   break;
 1640              		.loc 1 145 5 is_stmt 1 view .LVU547
 145:source\lcd/print.c **** 	   break;
 1641              		.loc 1 145 8 is_stmt 0 view .LVU548
 1642 0630 1AF0080F 		tst	r10, #8
 1643 0634 83D0     		beq	.L101
 145:source\lcd/print.c **** 	   break;
 1644              		.loc 1 145 27 is_stmt 1 discriminator 1 view .LVU549
 145:source\lcd/print.c **** 	   break;
 1645              		.loc 1 145 44 is_stmt 0 discriminator 1 view .LVU550
 1646 0636 A368     		ldr	r3, [r4, #8]
 1647 0638 013B     		subs	r3, r3, #1
 1648 063a A360     		str	r3, [r4, #8]
 1649 063c 7FE7     		b	.L101
 1650              	.LVL213:
 1651              	.L106:
 1652              	.LBB75:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1653              		.loc 1 136 7 is_stmt 1 view .LVU551
 136:source\lcd/print.c **** 		    w = w >> 3;
 1654              		.loc 1 136 39 is_stmt 0 view .LVU552
 1655 063e 02F0070C 		and	ip, r2, #7
 136:source\lcd/print.c **** 		    w = w >> 3;
 1656              		.loc 1 136 31 view .LVU553
 1657 0642 E16A     		ldr	r1, [r4, #44]
 137:source\lcd/print.c **** 	      }
 1658              		.loc 1 137 9 view .LVU554
 1659 0644 D208     		lsrs	r2, r2, #3
 1660              	.LVL214:
 136:source\lcd/print.c **** 		    w = w >> 3;
 1661              		.loc 1 136 19 view .LVU555
 1662 0646 11F80C10 		ldrb	r1, [r1, ip]	@ zero_extendqisi2
 1663 064a 03F8011B 		strb	r1, [r3], #1
 137:source\lcd/print.c **** 	      }
 1664              		.loc 1 137 9 view .LVU556
 1665 064e 42EA4072 		orr	r2, r2, r0, lsl #29
 136:source\lcd/print.c **** 		    w = w >> 3;
 1666              		.loc 1 136 15 view .LVU557
 1667 0652 08F10108 		add	r8, r8, #1
 1668              	.LVL215:
 137:source\lcd/print.c **** 	      }
 1669              		.loc 1 137 7 is_stmt 1 view .LVU558
 137:source\lcd/print.c **** 	      }
 1670              		.loc 1 137 9 is_stmt 0 view .LVU559
 1671 0656 C008     		lsrs	r0, r0, #3
 137:source\lcd/print.c **** 	      }
 1672              		.loc 1 137 9 view .LVU560
 1673 0658 E7E7     		b	.L105
 1674              	.LVL216:
 1675              	.L95:
 137:source\lcd/print.c **** 	      }
 1676              		.loc 1 137 9 view .LVU561
 1677              	.LBE75:
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1678              		.loc 1 150 5 is_stmt 1 view .LVU562
 150:source\lcd/print.c **** 	      unsigned long long w = dr->llval;
 1679              		.loc 1 150 8 is_stmt 0 view .LVU563
 1680 065a 1AF04008 		ands	r8, r10, #64
 1681 065e 0FD1     		bne	.L110
 1682 0660 08AA     		add	r2, sp, #32
 1683              	.LVL217:
 158:source\lcd/print.c **** 		    v = v / 10;
 1684              		.loc 1 158 36 view .LVU564
 1685 0662 0A21     		movs	r1, #10
 1686              	.LVL218:
 1687              	.L111:
 157:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(v % 10);
 1688              		.loc 1 157 24 is_stmt 1 view .LVU565
 1689 0664 002B     		cmp	r3, #0
 1690 0666 3FF46AAF 		beq	.L101
 158:source\lcd/print.c **** 		    v = v / 10;
 1691              		.loc 1 158 7 view .LVU566
 158:source\lcd/print.c **** 		    v = v / 10;
 1692              		.loc 1 158 36 is_stmt 0 view .LVU567
 1693 066a B3FBF1F0 		udiv	r0, r3, r1
 1694 066e 01FB1033 		mls	r3, r1, r0, r3
 1695              	.LVL219:
 158:source\lcd/print.c **** 		    v = v / 10;
 1696              		.loc 1 158 25 view .LVU568
 1697 0672 3033     		adds	r3, r3, #48
 158:source\lcd/print.c **** 		    v = v / 10;
 1698              		.loc 1 158 19 view .LVU569
 1699 0674 02F8013B 		strb	r3, [r2], #1
 158:source\lcd/print.c **** 		    v = v / 10;
 1700              		.loc 1 158 15 view .LVU570
 1701 0678 08F10108 		add	r8, r8, #1
 1702              	.LVL220:
 159:source\lcd/print.c **** 	      }
 1703              		.loc 1 159 7 is_stmt 1 view .LVU571
 159:source\lcd/print.c **** 	      }
 1704              		.loc 1 159 9 is_stmt 0 view .LVU572
 1705 067c 0346     		mov	r3, r0
 1706              	.LVL221:
 159:source\lcd/print.c **** 	      }
 1707              		.loc 1 159 9 view .LVU573
 1708 067e F1E7     		b	.L111
 1709              	.LVL222:
 1710              	.L110:
 1711              	.LBB76:
 151:source\lcd/print.c **** 	      while (w != 0) {
 1712              		.loc 1 151 8 is_stmt 1 view .LVU574
 151:source\lcd/print.c **** 	      while (w != 0) {
 1713              		.loc 1 151 27 is_stmt 0 view .LVU575
 1714 0680 D4E90E01 		ldrd	r0, r1, [r4, #56]
 1715              	.LVL223:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1716              		.loc 1 152 8 is_stmt 1 view .LVU576
 1717 0684 0DF1200B 		add	fp, sp, #32
 1718              	.LBE76:
 110:source\lcd/print.c ****       char buff[32];       /* used to accumulate value to print    */
 1719              		.loc 1 110 11 is_stmt 0 view .LVU577
 1720 0688 4FF00008 		mov	r8, #0
 1721              	.LVL224:
 1722              	.L112:
 1723              	.LBB77:
 152:source\lcd/print.c **** 		    buff[len++] = '0' + (char)(w % 10);
 1724              		.loc 1 152 17 is_stmt 1 view .LVU578
 1725 068c 50EA0103 		orrs	r3, r0, r1
 1726 0690 3FF455AF 		beq	.L101
 153:source\lcd/print.c ****                     w = w / 10;
 1727              		.loc 1 153 7 view .LVU579
 1728 0694 0A22     		movs	r2, #10
 1729 0696 0023     		movs	r3, #0
 1730 0698 FFF7FEFF 		bl	__aeabi_uldivmod
 1731              	.LVL225:
 153:source\lcd/print.c ****                     w = w / 10;
 1732              		.loc 1 153 25 is_stmt 0 view .LVU580
 1733 069c 3032     		adds	r2, r2, #48
 153:source\lcd/print.c ****                     w = w / 10;
 1734              		.loc 1 153 19 view .LVU581
 1735 069e 0BF8012B 		strb	r2, [fp], #1
 153:source\lcd/print.c ****                     w = w / 10;
 1736              		.loc 1 153 15 view .LVU582
 1737 06a2 08F10108 		add	r8, r8, #1
 1738              	.LVL226:
 154:source\lcd/print.c ****               }
 1739              		.loc 1 154 21 is_stmt 1 view .LVU583
 154:source\lcd/print.c ****               }
 1740              		.loc 1 154 21 is_stmt 0 view .LVU584
 1741 06a6 F1E7     		b	.L112
 1742              	.LVL227:
 1743              	.L118:
 154:source\lcd/print.c ****               }
 1744              		.loc 1 154 21 view .LVU585
 1745              	.LBE77:
 1746              	.LBB78:
 1747              	.LBB66:
 182:source\lcd/print.c ****       {
 1748              		.loc 1 182 32 is_stmt 1 discriminator 11 view .LVU586
 1749 06a8 636A     		ldr	r3, [r4, #36]
 1750 06aa 0199     		ldr	r1, [sp, #4]
 1751 06ac 2020     		movs	r0, #32
 1752 06ae 9847     		blx	r3
 1753              	.LVL228:
 1754              	.L116:
 182:source\lcd/print.c ****       {
 1755              		.loc 1 182 32 discriminator 9 view .LVU587
 182:source\lcd/print.c ****       {
 1756              		.loc 1 182 32 is_stmt 0 discriminator 9 view .LVU588
 1757 06b0 013F     		subs	r7, r7, #1
 1758              	.LVL229:
 182:source\lcd/print.c ****       {
 1759              		.loc 1 182 32 discriminator 9 view .LVU589
 1760 06b2 F9D5     		bpl	.L118
 1761 06b4 2BEAEB77 		bic	r7, fp, fp, asr #31
 1762              	.LVL230:
 182:source\lcd/print.c ****       {
 1763              		.loc 1 182 32 discriminator 9 view .LVU590
 1764 06b8 0BF1FF33 		add	r3, fp, #-1
 1765 06bc A3EB070B 		sub	fp, r3, r7
 1766 06c0 5BE7     		b	.L117
 1767              	.LVL231:
 1768              	.L158:
 182:source\lcd/print.c ****       {
 1769              		.loc 1 182 32 discriminator 9 view .LVU591
 1770              	.LBE66:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1771              		.loc 1 181 13 discriminator 1 view .LVU592
 1772 06c2 5F46     		mov	r7, fp
 1773 06c4 F4E7     		b	.L116
 1774              	.LVL232:
 1775              	.L120:
 181:source\lcd/print.c ****       if (!(flags & _PADZERO)) pre_padding(dr, p);
 1776              		.loc 1 181 13 discriminator 1 view .LVU593
 1777 06c6 CDE90632 		strd	r3, r2, [sp, #24]
 1778              	.LBB67:
 186:source\lcd/print.c ****       }
 1779              		.loc 1 186 45 is_stmt 1 discriminator 2 view .LVU594
 1780 06ca 0199     		ldr	r1, [sp, #4]
 1781 06cc 636A     		ldr	r3, [r4, #36]
 1782 06ce 0398     		ldr	r0, [sp, #12]
 1783              	.LVL233:
 186:source\lcd/print.c ****       }
 1784              		.loc 1 186 45 is_stmt 0 discriminator 2 view .LVU595
 1785 06d0 9847     		blx	r3
 1786              	.LVL234:
 186:source\lcd/print.c ****       }
 1787              		.loc 1 186 41 is_stmt 1 discriminator 2 view .LVU596
 186:source\lcd/print.c ****       }
 1788              		.loc 1 186 24 is_stmt 0 discriminator 1 view .LVU597
 1789 06d2 079A     		ldr	r2, [sp, #28]
 1790 06d4 069B     		ldr	r3, [sp, #24]
 1791 06d6 1146     		mov	r1, r2
 1792 06d8 51E7     		b	.L119
 1793              	.LVL235:
 1794              	.L124:
 186:source\lcd/print.c ****       }
 1795              		.loc 1 186 24 discriminator 1 view .LVU598
 1796              	.LBE67:
 1797              	.LBB68:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1798              		.loc 1 188 7 is_stmt 1 discriminator 9 view .LVU599
 1799 06da 636A     		ldr	r3, [r4, #36]
 1800 06dc 0199     		ldr	r1, [sp, #4]
 1801 06de 0698     		ldr	r0, [sp, #24]
 1802 06e0 9847     		blx	r3
 1803              	.LVL236:
 1804 06e2 5EE7     		b	.L123
 1805              	.LVL237:
 1806              	.L133:
 188:source\lcd/print.c ****       if (flags & _FPCONV) {
 1807              		.loc 1 188 7 is_stmt 0 discriminator 9 view .LVU600
 1808              	.LBE68:
 1809              	.LBB69:
 192:source\lcd/print.c ****                 case '<':
 1810              		.loc 1 192 7 is_stmt 1 view .LVU601
 192:source\lcd/print.c ****                 case '<':
 1811              		.loc 1 192 23 is_stmt 0 view .LVU602
 1812 06e4 039B     		ldr	r3, [sp, #12]
 1813              	.LVL238:
 192:source\lcd/print.c ****                 case '<':
 1814              		.loc 1 192 23 view .LVU603
 1815 06e6 08AA     		add	r2, sp, #32
 1816 06e8 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1817              	.LVL239:
 192:source\lcd/print.c ****                 case '<':
 1818              		.loc 1 192 7 view .LVU604
 1819 06ea 3C28     		cmp	r0, #60
 1820 06ec 0BD0     		beq	.L127
 1821 06ee 3E28     		cmp	r0, #62
 1822 06f0 27D0     		beq	.L128
 200:source\lcd/print.c **** 	          charcount++;
 1823              		.loc 1 200 11 is_stmt 1 view .LVU605
 1824 06f2 636A     		ldr	r3, [r4, #36]
 1825 06f4 0199     		ldr	r1, [sp, #4]
 1826 06f6 9847     		blx	r3
 1827              	.LVL240:
 201:source\lcd/print.c **** 	          break;
 1828              		.loc 1 201 12 view .LVU606
 201:source\lcd/print.c **** 	          break;
 1829              		.loc 1 201 21 is_stmt 0 view .LVU607
 1830 06f8 0137     		adds	r7, r7, #1
 1831              	.LVL241:
 202:source\lcd/print.c **** 	     }
 1832              		.loc 1 202 12 is_stmt 1 view .LVU608
 1833 06fa 09E0     		b	.L131
 1834              	.L130:
 194:source\lcd/print.c **** 		  break;
 1835              		.loc 1 194 5 discriminator 2 view .LVU609
 1836 06fc 636A     		ldr	r3, [r4, #36]
 1837 06fe 0199     		ldr	r1, [sp, #4]
 1838 0700 3020     		movs	r0, #48
 1839 0702 0137     		adds	r7, r7, #1
 1840              	.LVL242:
 194:source\lcd/print.c **** 		  break;
 1841              		.loc 1 194 5 is_stmt 0 discriminator 2 view .LVU610
 1842 0704 9847     		blx	r3
 1843              	.LVL243:
 1844              	.L127:
 194:source\lcd/print.c **** 		  break;
 1845              		.loc 1 194 5 is_stmt 1 discriminator 1 view .LVU611
 1846 0706 E368     		ldr	r3, [r4, #12]
 1847 0708 013B     		subs	r3, r3, #1
 1848 070a 002B     		cmp	r3, #0
 1849 070c E360     		str	r3, [r4, #12]
 1850 070e F5DA     		bge	.L130
 1851              	.L131:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1852              		.loc 1 191 30 discriminator 2 view .LVU612
 1853 0710 039B     		ldr	r3, [sp, #12]
 1854 0712 0133     		adds	r3, r3, #1
 1855 0714 0393     		str	r3, [sp, #12]
 1856              	.LVL244:
 1857              	.L125:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1858              		.loc 1 191 23 discriminator 1 view .LVU613
 1859 0716 039B     		ldr	r3, [sp, #12]
 1860 0718 9845     		cmp	r8, r3
 1861 071a E3D1     		bne	.L133
 1862              	.LVL245:
 1863              	.L134:
 191:source\lcd/print.c **** 	     switch (c = buff[i]) {
 1864              		.loc 1 191 23 is_stmt 0 discriminator 1 view .LVU614
 1865              	.LBE69:
 210:source\lcd/print.c ****       return charcount;
 1866              		.loc 1 210 7 is_stmt 1 view .LVU615
 1867 071c 049B     		ldr	r3, [sp, #16]
 1868 071e 3BBB     		cbnz	r3, .L160
 1869              	.LVL246:
 1870              	.L139:
 210:source\lcd/print.c ****       return charcount;
 1871              		.loc 1 210 7 discriminator 5 view .LVU616
 210:source\lcd/print.c ****       return charcount;
 1872              		.loc 1 210 26 discriminator 5 view .LVU617
 211:source\lcd/print.c ****       }
 1873              		.loc 1 211 7 view .LVU618
 211:source\lcd/print.c ****       }
 1874              		.loc 1 211 7 is_stmt 0 view .LVU619
 1875              	.LBE78:
 1876              	.LBE81:
 1877              	.LBE88:
 388:source\lcd/print.c ****                continue;
 1878              		.loc 1 388 26 discriminator 1 view .LVU620
 1879 0720 B944     		add	r9, r9, r7
 1880              	.LVL247:
 389:source\lcd/print.c ****             }
 1881              		.loc 1 389 16 is_stmt 1 view .LVU621
 1882 0722 A4E5     		b	.L8
 1883              	.L222:
 1884              		.align	2
 1885              	.L221:
 1886 0724 03000000 		.word	.LC1
 1887 0728 09000000 		.word	.LC4
 1888 072c 0F000000 		.word	.LC7
 1889 0730 0D000000 		.word	.LC6
 1890 0734 0B000000 		.word	.LC5
 1891              	.LVL248:
 1892              	.L132:
 1893              	.LBB89:
 1894              	.LBB82:
 1895              	.LBB79:
 1896              	.LBB70:
 197:source\lcd/print.c **** 	          break;
 1897              		.loc 1 197 12 discriminator 2 view .LVU622
 1898 0738 636A     		ldr	r3, [r4, #36]
 1899 073a 0199     		ldr	r1, [sp, #4]
 1900 073c 3020     		movs	r0, #48
 1901 073e 0137     		adds	r7, r7, #1
 1902              	.LVL249:
 197:source\lcd/print.c **** 	          break;
 1903              		.loc 1 197 12 is_stmt 0 discriminator 2 view .LVU623
 1904 0740 9847     		blx	r3
 1905              	.LVL250:
 1906              	.L128:
 197:source\lcd/print.c **** 	          break;
 1907              		.loc 1 197 12 is_stmt 1 discriminator 1 view .LVU624
 1908 0742 2369     		ldr	r3, [r4, #16]
 1909 0744 013B     		subs	r3, r3, #1
 1910 0746 002B     		cmp	r3, #0
 1911 0748 2361     		str	r3, [r4, #16]
 1912 074a F5DA     		bge	.L132
 197:source\lcd/print.c **** 	          break;
 1913              		.loc 1 197 12 is_stmt 0 discriminator 1 view .LVU625
 1914 074c E0E7     		b	.L131
 1915              	.LVL251:
 1916              	.L135:
 197:source\lcd/print.c **** 	          break;
 1917              		.loc 1 197 12 discriminator 1 view .LVU626
 1918              	.LBE70:
 206:source\lcd/print.c **** 	 charcount += len;
 1919              		.loc 1 206 3 is_stmt 1 discriminator 2 view .LVU627
 1920 074e 636A     		ldr	r3, [r4, #36]
 1921 0750 0199     		ldr	r1, [sp, #4]
 1922 0752 3020     		movs	r0, #48
 1923 0754 9847     		blx	r3
 1924              	.LVL252:
 1925 0756 35E7     		b	.L126
 1926              	.LVL253:
 1927              	.L140:
 210:source\lcd/print.c ****       return charcount;
 1928              		.loc 1 210 7 discriminator 4 view .LVU628
 1929 0758 636A     		ldr	r3, [r4, #36]
 1930 075a 0199     		ldr	r1, [sp, #4]
 1931 075c 2020     		movs	r0, #32
 1932 075e 9847     		blx	r3
 1933              	.LVL254:
 1934              	.L138:
 210:source\lcd/print.c ****       return charcount;
 1935              		.loc 1 210 7 discriminator 3 view .LVU629
 210:source\lcd/print.c ****       return charcount;
 1936              		.loc 1 210 7 is_stmt 0 discriminator 3 view .LVU630
 1937 0760 B8F10108 		subs	r8, r8, #1
 1938              	.LVL255:
 210:source\lcd/print.c ****       return charcount;
 1939              		.loc 1 210 7 discriminator 3 view .LVU631
 1940 0764 F8D5     		bpl	.L140
 1941 0766 BBF1000F 		cmp	fp, #0
 1942 076a A8BF     		it	ge
 1943 076c 5F44     		addge	r7, r7, fp
 1944 076e D7E7     		b	.L139
 1945              	.LVL256:
 1946              	.L160:
 210:source\lcd/print.c ****       return charcount;
 1947              		.loc 1 210 7 discriminator 3 view .LVU632
 1948 0770 D846     		mov	r8, fp
 1949 0772 F5E7     		b	.L138
 1950              	.LBE79:
 1951              	.LBE82:
 1952              	.LBE89:
 1953              	.LBE90:
 1954              		.cfi_endproc
 1955              	.LFE5:
 1957              		.section	.text.sprintf,"ax",%progbits
 1958              		.align	1
 1959              		.global	sprintf
 1960              		.syntax unified
 1961              		.thumb
 1962              		.thumb_func
 1964              	sprintf:
 1965              	.LVL257:
 1966              	.LFB6:
 394:source\lcd/print.c **** 
 395:source\lcd/print.c **** 
 396:source\lcd/print.c **** int sprintf (char *buff, const char *fmt, ...)
 397:source\lcd/print.c **** {
 1967              		.loc 1 397 1 is_stmt 1 view -0
 1968              		.cfi_startproc
 1969              		@ args = 4, pretend = 12, frame = 72
 1970              		@ frame_needed = 0, uses_anonymous_args = 1
 398:source\lcd/print.c ****       StringOutputFile sf;
 1971              		.loc 1 398 7 view .LVU634
 399:source\lcd/print.c ****       va_list a;
 1972              		.loc 1 399 7 view .LVU635
 400:source\lcd/print.c ****       int length;
 1973              		.loc 1 400 7 view .LVU636
 401:source\lcd/print.c ****       printf_display_rec dr;
 1974              		.loc 1 401 7 view .LVU637
 402:source\lcd/print.c ****       va_start(a, fmt);
 1975              		.loc 1 402 7 view .LVU638
 397:source\lcd/print.c ****       StringOutputFile sf;
 1976              		.loc 1 397 1 is_stmt 0 view .LVU639
 1977 0000 0EB4     		push	{r1, r2, r3}
 1978              		.cfi_def_cfa_offset 12
 1979              		.cfi_offset 1, -12
 1980              		.cfi_offset 2, -8
 1981              		.cfi_offset 3, -4
 1982 0002 10B5     		push	{r4, lr}
 1983              		.cfi_def_cfa_offset 20
 1984              		.cfi_offset 4, -20
 1985              		.cfi_offset 14, -16
 1986 0004 93B0     		sub	sp, sp, #76
 1987              		.cfi_def_cfa_offset 96
 397:source\lcd/print.c ****       StringOutputFile sf;
 1988              		.loc 1 397 1 view .LVU640
 1989 0006 15AA     		add	r2, sp, #84
 403:source\lcd/print.c ****       sf.ptr = buff;
 404:source\lcd/print.c ****       dr.putc = _sputc;
 1990              		.loc 1 404 15 view .LVU641
 1991 0008 0A4B     		ldr	r3, .L224
 397:source\lcd/print.c ****       StringOutputFile sf;
 1992              		.loc 1 397 1 view .LVU642
 1993 000a 52F8041B 		ldr	r1, [r2], #4
 1994              		.loc 1 404 15 view .LVU643
 1995 000e 0B93     		str	r3, [sp, #44]
 405:source\lcd/print.c ****       dr.ferror = _serror;
 1996              		.loc 1 405 17 view .LVU644
 1997 0010 094B     		ldr	r3, .L224+4
 1998 0012 0C93     		str	r3, [sp, #48]
 403:source\lcd/print.c ****       sf.ptr = buff;
 1999              		.loc 1 403 14 view .LVU645
 2000 0014 CDE90002 		strd	r0, r2, [sp]
 404:source\lcd/print.c ****       dr.ferror = _serror;
 2001              		.loc 1 404 7 is_stmt 1 view .LVU646
 2002              		.loc 1 405 7 view .LVU647
 406:source\lcd/print.c ****       dr.fn = 0;
 2003              		.loc 1 406 7 view .LVU648
 2004              		.loc 1 406 13 is_stmt 0 view .LVU649
 2005 0018 0024     		movs	r4, #0
 407:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 2006              		.loc 1 407 16 view .LVU650
 2007 001a 02AB     		add	r3, sp, #8
 2008 001c 6846     		mov	r0, sp
 2009              	.LVL258:
 406:source\lcd/print.c ****       dr.fn = 0;
 2010              		.loc 1 406 13 view .LVU651
 2011 001e 0A94     		str	r4, [sp, #40]
 2012              		.loc 1 407 7 is_stmt 1 view .LVU652
 2013              		.loc 1 407 16 is_stmt 0 view .LVU653
 2014 0020 FFF7FEFF 		bl	__vfprintf
 2015              	.LVL259:
 408:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 2016              		.loc 1 408 7 is_stmt 1 view .LVU654
 2017              	.LBB91:
 2018              	.LBI91:
  31:source\lcd/print.c **** {
 2019              		.loc 1 31 5 view .LVU655
 2020              	.LBB92:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 2021              		.loc 1 33 7 view .LVU656
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2022              		.loc 1 34 7 view .LVU657
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2023              		.loc 1 34 13 is_stmt 0 view .LVU658
 2024 0024 009B     		ldr	r3, [sp]
 2025              	.LVL260:
  35:source\lcd/print.c ****       sf->ptr = op;
 2026              		.loc 1 35 7 is_stmt 1 view .LVU659
  35:source\lcd/print.c ****       sf->ptr = op;
 2027              		.loc 1 35 21 is_stmt 0 view .LVU660
 2028 0026 1C70     		strb	r4, [r3]
 2029              	.LVL261:
  36:source\lcd/print.c ****       return r;
 2030              		.loc 1 36 7 is_stmt 1 view .LVU661
  37:source\lcd/print.c **** }
 2031              		.loc 1 37 7 view .LVU662
  37:source\lcd/print.c **** }
 2032              		.loc 1 37 7 is_stmt 0 view .LVU663
 2033              	.LBE92:
 2034              	.LBE91:
 409:source\lcd/print.c ****       va_end(a);
 2035              		.loc 1 409 7 is_stmt 1 view .LVU664
 410:source\lcd/print.c ****       return length;
 2036              		.loc 1 410 7 view .LVU665
 411:source\lcd/print.c **** }
 2037              		.loc 1 411 1 is_stmt 0 view .LVU666
 2038 0028 13B0     		add	sp, sp, #76
 2039              		.cfi_def_cfa_offset 20
 2040              		@ sp needed
 2041 002a BDE81040 		pop	{r4, lr}
 2042              		.cfi_restore 14
 2043              		.cfi_restore 4
 2044              		.cfi_def_cfa_offset 12
 2045 002e 03B0     		add	sp, sp, #12
 2046              		.cfi_restore 3
 2047              		.cfi_restore 2
 2048              		.cfi_restore 1
 2049              		.cfi_def_cfa_offset 0
 2050 0030 7047     		bx	lr
 2051              	.L225:
 2052 0032 00BF     		.align	2
 2053              	.L224:
 2054 0034 00000000 		.word	_sputc
 2055 0038 00000000 		.word	_serror
 2056              		.cfi_endproc
 2057              	.LFE6:
 2059              		.section	.text.vsprintf,"ax",%progbits
 2060              		.align	1
 2061              		.global	vsprintf
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2066              	vsprintf:
 2067              	.LVL262:
 2068              	.LFB7:
 412:source\lcd/print.c **** 
 413:source\lcd/print.c **** 
 414:source\lcd/print.c **** int vsprintf (char *buff, const char *fmt, va_list a)
 415:source\lcd/print.c **** {
 2069              		.loc 1 415 1 is_stmt 1 view -0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 72
 2072              		@ frame_needed = 0, uses_anonymous_args = 0
 416:source\lcd/print.c ****       StringOutputFile sf;
 2073              		.loc 1 416 7 view .LVU668
 417:source\lcd/print.c ****       int length;
 2074              		.loc 1 417 7 view .LVU669
 418:source\lcd/print.c ****       printf_display_rec dr;
 2075              		.loc 1 418 7 view .LVU670
 419:source\lcd/print.c ****       dr.putc = _sputc;
 2076              		.loc 1 419 7 view .LVU671
 415:source\lcd/print.c ****       StringOutputFile sf;
 2077              		.loc 1 415 1 is_stmt 0 view .LVU672
 2078 0000 10B5     		push	{r4, lr}
 2079              		.cfi_def_cfa_offset 8
 2080              		.cfi_offset 4, -8
 2081              		.cfi_offset 14, -4
 2082 0002 92B0     		sub	sp, sp, #72
 2083              		.cfi_def_cfa_offset 80
 2084              		.loc 1 419 15 view .LVU673
 2085 0004 074B     		ldr	r3, .L227
 2086 0006 0B93     		str	r3, [sp, #44]
 420:source\lcd/print.c ****       dr.ferror = _serror;
 2087              		.loc 1 420 7 is_stmt 1 view .LVU674
 2088              		.loc 1 420 17 is_stmt 0 view .LVU675
 2089 0008 074B     		ldr	r3, .L227+4
 2090 000a 0C93     		str	r3, [sp, #48]
 421:source\lcd/print.c ****       dr.fn = 0;
 2091              		.loc 1 421 7 is_stmt 1 view .LVU676
 2092              		.loc 1 421 13 is_stmt 0 view .LVU677
 2093 000c 0024     		movs	r4, #0
 422:source\lcd/print.c ****       sf.ptr = buff;
 2094              		.loc 1 422 14 view .LVU678
 2095 000e 0190     		str	r0, [sp, #4]
 423:source\lcd/print.c ****       length = __vfprintf((char *)&sf, fmt, a, &dr);
 2096              		.loc 1 423 16 view .LVU679
 2097 0010 02AB     		add	r3, sp, #8
 2098 0012 01A8     		add	r0, sp, #4
 2099              	.LVL263:
 421:source\lcd/print.c ****       dr.fn = 0;
 2100              		.loc 1 421 13 view .LVU680
 2101 0014 0A94     		str	r4, [sp, #40]
 422:source\lcd/print.c ****       sf.ptr = buff;
 2102              		.loc 1 422 7 is_stmt 1 view .LVU681
 2103              		.loc 1 423 7 view .LVU682
 2104              		.loc 1 423 16 is_stmt 0 view .LVU683
 2105 0016 FFF7FEFF 		bl	__vfprintf
 2106              	.LVL264:
 424:source\lcd/print.c ****       _sputc(0, (char *)&sf);
 2107              		.loc 1 424 7 is_stmt 1 view .LVU684
 2108              	.LBB93:
 2109              	.LBI93:
  31:source\lcd/print.c **** {
 2110              		.loc 1 31 5 view .LVU685
 2111              	.LBB94:
  33:source\lcd/print.c ****       char *op = sf->ptr;
 2112              		.loc 1 33 7 view .LVU686
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2113              		.loc 1 34 7 view .LVU687
  34:source\lcd/print.c ****       int r = *op++ = ch;
 2114              		.loc 1 34 13 is_stmt 0 view .LVU688
 2115 001a 019B     		ldr	r3, [sp, #4]
 2116              	.LVL265:
  35:source\lcd/print.c ****       sf->ptr = op;
 2117              		.loc 1 35 7 is_stmt 1 view .LVU689
  35:source\lcd/print.c ****       sf->ptr = op;
 2118              		.loc 1 35 21 is_stmt 0 view .LVU690
 2119 001c 1C70     		strb	r4, [r3]
 2120              	.LVL266:
  36:source\lcd/print.c ****       return r;
 2121              		.loc 1 36 7 is_stmt 1 view .LVU691
  37:source\lcd/print.c **** }
 2122              		.loc 1 37 7 view .LVU692
  37:source\lcd/print.c **** }
 2123              		.loc 1 37 7 is_stmt 0 view .LVU693
 2124              	.LBE94:
 2125              	.LBE93:
 425:source\lcd/print.c ****       return length;
 2126              		.loc 1 425 7 is_stmt 1 view .LVU694
 426:source\lcd/print.c **** }
 2127              		.loc 1 426 1 is_stmt 0 view .LVU695
 2128 001e 12B0     		add	sp, sp, #72
 2129              		.cfi_def_cfa_offset 8
 2130              		@ sp needed
 2131 0020 10BD     		pop	{r4, pc}
 2132              	.LVL267:
 2133              	.L228:
 2134              		.loc 1 426 1 view .LVU696
 2135 0022 00BF     		.align	2
 2136              	.L227:
 2137 0024 00000000 		.word	_sputc
 2138 0028 00000000 		.word	_serror
 2139              		.cfi_endproc
 2140              	.LFE7:
 2142              		.global	errno
 2143              		.section	.bss.errno,"aw",%nobits
 2144              		.align	2
 2147              	errno:
 2148 0000 00000000 		.space	4
 2149              		.text
 2150              	.Letext0:
 2151              		.file 2 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.3 rel1/lib/gcc/arm-none-eabi/13
 2152              		.file 3 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 print.c
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:21     .text._sputc:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:27     .text._sputc:00000000 _sputc
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:55     .text._serror:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:61     .text._serror:00000000 _serror
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:80     .text._sputc1:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:86     .text._sputc1:00000000 _sputc1
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:111    .text.is_digit:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:117    .text.is_digit:00000000 is_digit
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:163    .text.__vfprintf:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:169    .text.__vfprintf:00000000 __vfprintf
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:593    .text.__vfprintf:00000170 $d
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:626    .text.__vfprintf:000001f4 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1148   .text.__vfprintf:0000041c $d
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1164   .text.__vfprintf:00000440 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1886   .text.__vfprintf:00000724 $d
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1898   .text.__vfprintf:00000738 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1958   .text.sprintf:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:1964   .text.sprintf:00000000 sprintf
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2054   .text.sprintf:00000034 $d
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2060   .text.vsprintf:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2066   .text.vsprintf:00000000 vsprintf
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2137   .text.vsprintf:00000024 $d
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2147   .bss.errno:00000000 errno
C:\Users\gedha\AppData\Local\Temp\ccEzHe6e.s:2144   .bss.errno:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
strlen
