   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 4
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "main.c"
  20              		.section	.text.wait_ms,"ax",%progbits
  21              		.align	1
  22              		.global	wait_ms
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	wait_ms:
  28              	.LVL0:
  29              	.LFB123:
   1:main.c        **** /********************************************************************************/
   2:main.c        **** /* main.c                                                                       */
   3:main.c        **** /* STM32F407ZGT6                                                                */
   4:main.c        **** /* (Lee ChangWoo HL2IRW  hl2irw@daum.net 010-8573-6860)                 	*/
   5:main.c        **** /* stm32f4x_test								*/
   6:main.c        **** /********************************************************************************/
   7:main.c        **** #include "hwdefs.h"
   8:main.c        **** #include "source/prototype.h"
   9:main.c        **** #include "source/color.h"
  10:main.c        **** 
  11:main.c        **** 
  12:main.c        **** volatile unsigned short tick,jiffes;
  13:main.c        **** volatile unsigned char time_led,read_key,old_key,remote;
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** FLASH_Status FLASHStatus = FLASH_COMPLETE;
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** extern volatile unsigned char rxck1,rxck2,rxck3,rx_led,tx_led;
  20:main.c        **** extern volatile unsigned short rxcnt1,rxcnt2,rxcnt3;
  21:main.c        **** 
  22:main.c        **** 
  23:main.c        **** 
  24:main.c        **** void wait_ms (unsigned short delay)
  25:main.c        **** {
  30              		.loc 1 25 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  26:main.c        ****       unsigned short old_jiffes;
  34              		.loc 1 26 7 view .LVU1
  27:main.c        ****       jiffes = 0;
  35              		.loc 1 27 7 view .LVU2
  25:main.c        ****       unsigned short old_jiffes;
  36              		.loc 1 25 1 is_stmt 0 view .LVU3
  37 0000 70B5     		push	{r4, r5, r6, lr}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 27 14 view .LVU4
  44 0002 094D     		ldr	r5, .L6
  45 0004 0024     		movs	r4, #0
  25:main.c        ****       unsigned short old_jiffes;
  46              		.loc 1 25 1 view .LVU5
  47 0006 0646     		mov	r6, r0
  48              		.loc 1 27 14 view .LVU6
  49 0008 2C80     		strh	r4, [r5]	@ movhi
  28:main.c        ****       old_jiffes = 0;
  50              		.loc 1 28 7 is_stmt 1 view .LVU7
  51              	.LVL1:
  29:main.c        ****       while (jiffes < delay) {
  52              		.loc 1 29 7 view .LVU8
  53              	.L3:
  54              		.loc 1 29 21 view .LVU9
  55 000a 2B88     		ldrh	r3, [r5]
  56 000c 9BB2     		uxth	r3, r3
  57 000e B342     		cmp	r3, r6
  58 0010 00D3     		bcc	.L4
  30:main.c        ****       	    if (old_jiffes != jiffes) {
  31:main.c        ****       	       old_jiffes = jiffes;
  32:main.c        ****                /* Reload IWDG counter */
  33:main.c        ****                IWDG_ReloadCounter();
  34:main.c        ****             }
  35:main.c        ****       }
  36:main.c        **** }
  59              		.loc 1 36 1 is_stmt 0 view .LVU10
  60 0012 70BD     		pop	{r4, r5, r6, pc}
  61              	.LVL2:
  62              	.L4:
  30:main.c        ****       	    if (old_jiffes != jiffes) {
  63              		.loc 1 30 12 is_stmt 1 view .LVU11
  30:main.c        ****       	    if (old_jiffes != jiffes) {
  64              		.loc 1 30 27 is_stmt 0 view .LVU12
  65 0014 2B88     		ldrh	r3, [r5]
  66 0016 9BB2     		uxth	r3, r3
  30:main.c        ****       	    if (old_jiffes != jiffes) {
  67              		.loc 1 30 15 view .LVU13
  68 0018 A342     		cmp	r3, r4
  69 001a F6D0     		beq	.L3
  31:main.c        ****                /* Reload IWDG counter */
  70              		.loc 1 31 15 is_stmt 1 view .LVU14
  31:main.c        ****                /* Reload IWDG counter */
  71              		.loc 1 31 26 is_stmt 0 view .LVU15
  72 001c 2C88     		ldrh	r4, [r5]
  73 001e A4B2     		uxth	r4, r4
  74              	.LVL3:
  33:main.c        ****             }
  75              		.loc 1 33 16 is_stmt 1 view .LVU16
  76 0020 FFF7FEFF 		bl	IWDG_ReloadCounter
  77              	.LVL4:
  78 0024 F1E7     		b	.L3
  79              	.L7:
  80 0026 00BF     		.align	2
  81              	.L6:
  82 0028 00000000 		.word	jiffes
  83              		.cfi_endproc
  84              	.LFE123:
  86              		.section	.text.hex2dec,"ax",%progbits
  87              		.align	1
  88              		.global	hex2dec
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  93              	hex2dec:
  94              	.LVL5:
  95              	.LFB124:
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** char hex2dec (const char ch)
  40:main.c        **** {
  96              		.loc 1 40 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
  41:main.c        ****       if (ch <= '9') return (ch - '0');
 101              		.loc 1 41 7 view .LVU18
 102              		.loc 1 41 10 is_stmt 0 view .LVU19
 103 0000 3928     		cmp	r0, #57
 104 0002 02D8     		bhi	.L9
 105              		.loc 1 41 22 is_stmt 1 discriminator 1 view .LVU20
 106              		.loc 1 41 33 is_stmt 0 discriminator 1 view .LVU21
 107 0004 3038     		subs	r0, r0, #48
 108              	.LVL6:
 109              	.L13:
  42:main.c        ****       if (ch >= 'a' && ch <= 'f') return (ch - 'a' + 10);
 110              		.loc 1 42 52 discriminator 1 view .LVU22
 111 0006 C0B2     		uxtb	r0, r0
 112              		.loc 1 42 52 view .LVU23
 113 0008 7047     		bx	lr
 114              	.LVL7:
 115              	.L9:
 116              		.loc 1 42 7 is_stmt 1 view .LVU24
 117              		.loc 1 42 10 is_stmt 0 view .LVU25
 118 000a A0F16103 		sub	r3, r0, #97
 119 000e 052B     		cmp	r3, #5
 120 0010 01D8     		bhi	.L11
 121              		.loc 1 42 35 is_stmt 1 discriminator 1 view .LVU26
 122              		.loc 1 42 52 is_stmt 0 discriminator 1 view .LVU27
 123 0012 5738     		subs	r0, r0, #87
 124              	.LVL8:
 125              		.loc 1 42 52 discriminator 1 view .LVU28
 126 0014 F7E7     		b	.L13
 127              	.LVL9:
 128              	.L11:
  43:main.c        ****       if (ch >= 'A' && ch <= 'F') return (ch - 'A' + 10);
 129              		.loc 1 43 7 is_stmt 1 view .LVU29
 130              		.loc 1 43 10 is_stmt 0 view .LVU30
 131 0016 A0F14103 		sub	r3, r0, #65
 132 001a 052B     		cmp	r3, #5
 133 001c 01D8     		bhi	.L12
 134              		.loc 1 43 35 is_stmt 1 discriminator 1 view .LVU31
 135              		.loc 1 43 52 is_stmt 0 discriminator 1 view .LVU32
 136 001e 3738     		subs	r0, r0, #55
 137              	.LVL10:
 138              		.loc 1 43 52 discriminator 1 view .LVU33
 139 0020 F1E7     		b	.L13
 140              	.LVL11:
 141              	.L12:
  44:main.c        ****       return 0;
 142              		.loc 1 44 14 view .LVU34
 143 0022 0020     		movs	r0, #0
 144              	.LVL12:
  45:main.c        **** }
 145              		.loc 1 45 1 view .LVU35
 146 0024 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE124:
 150              		.section	.text.dec2hex,"ax",%progbits
 151              		.align	1
 152              		.global	dec2hex
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	dec2hex:
 158              	.LVL13:
 159              	.LFB125:
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** char dec2hex (const char ch)
  49:main.c        **** {
 160              		.loc 1 49 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
  50:main.c        ****       if (ch <= 9) return (ch + '0');
 165              		.loc 1 50 7 view .LVU37
 166              		.loc 1 50 10 is_stmt 0 view .LVU38
 167 0000 0928     		cmp	r0, #9
 168 0002 02D8     		bhi	.L15
 169              		.loc 1 50 20 is_stmt 1 discriminator 1 view .LVU39
 170              		.loc 1 50 31 is_stmt 0 discriminator 1 view .LVU40
 171 0004 3030     		adds	r0, r0, #48
 172              	.LVL14:
 173              	.L18:
  51:main.c        ****       if (ch >= 10 && ch <= 15) return (ch + 'A' - 10);
 174              		.loc 1 51 50 discriminator 1 view .LVU41
 175 0006 C0B2     		uxtb	r0, r0
 176              		.loc 1 51 50 view .LVU42
 177 0008 7047     		bx	lr
 178              	.LVL15:
 179              	.L15:
 180              		.loc 1 51 7 is_stmt 1 view .LVU43
 181              		.loc 1 51 10 is_stmt 0 view .LVU44
 182 000a A0F10A03 		sub	r3, r0, #10
 183 000e 052B     		cmp	r3, #5
 184 0010 01D8     		bhi	.L17
 185              		.loc 1 51 33 is_stmt 1 discriminator 1 view .LVU45
 186              		.loc 1 51 50 is_stmt 0 discriminator 1 view .LVU46
 187 0012 3730     		adds	r0, r0, #55
 188              	.LVL16:
 189              		.loc 1 51 50 discriminator 1 view .LVU47
 190 0014 F7E7     		b	.L18
 191              	.LVL17:
 192              	.L17:
  52:main.c        ****       return 0;
 193              		.loc 1 52 14 view .LVU48
 194 0016 0020     		movs	r0, #0
 195              	.LVL18:
  53:main.c        **** }
 196              		.loc 1 53 1 view .LVU49
 197 0018 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE125:
 201              		.section	.text.Periph_Configuration,"ax",%progbits
 202              		.align	1
 203              		.global	Periph_Configuration
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	Periph_Configuration:
 209              	.LFB126:
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** void Periph_Configuration (void)
  57:main.c        **** {
 210              		.loc 1 57 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
  58:main.c        ****       /* Enable GPIO clocks */
  59:main.c        ****       RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC | R
 214              		.loc 1 59 7 view .LVU51
  57:main.c        ****       /* Enable GPIO clocks */
 215              		.loc 1 57 1 is_stmt 0 view .LVU52
 216 0000 08B5     		push	{r3, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 220              		.loc 1 59 7 view .LVU53
 221 0002 0121     		movs	r1, #1
 222 0004 7F20     		movs	r0, #127
 223 0006 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 224              	.LVL19:
  60:main.c        ****       /* Enable USART1 clock */
  61:main.c        ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 225              		.loc 1 61 7 is_stmt 1 view .LVU54
 226 000a 0121     		movs	r1, #1
 227 000c 1020     		movs	r0, #16
 228 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 229              	.LVL20:
  62:main.c        ****       /* Enable USART2 clock */
  63:main.c        ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
 230              		.loc 1 63 7 view .LVU55
 231 0012 0121     		movs	r1, #1
 232 0014 4FF40030 		mov	r0, #131072
 233 0018 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 234              	.LVL21:
  64:main.c        ****       /* Enable USART3 clock */
  65:main.c        ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 235              		.loc 1 65 7 view .LVU56
 236 001c 0121     		movs	r1, #1
 237 001e 4FF48020 		mov	r0, #262144
 238 0022 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 239              	.LVL22:
  66:main.c        ****       /* Enable PWR and BKP clocks */
  67:main.c        ****       RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_AHB1Periph_BKPSRAM | RCC_AHB1Periph_SRAM1 | R
 240              		.loc 1 67 7 view .LVU57
  68:main.c        **** }
 241              		.loc 1 68 1 is_stmt 0 view .LVU58
 242 0026 BDE80840 		pop	{r3, lr}
 243              		.cfi_restore 14
 244              		.cfi_restore 3
 245              		.cfi_def_cfa_offset 0
  67:main.c        **** }
 246              		.loc 1 67 7 view .LVU59
 247 002a 0248     		ldr	r0, .L20
 248 002c 0121     		movs	r1, #1
 249 002e FFF7FEBF 		b	RCC_APB1PeriphClockCmd
 250              	.LVL23:
 251              	.L21:
 252 0032 00BF     		.align	2
 253              	.L20:
 254 0034 00000710 		.word	268894208
 255              		.cfi_endproc
 256              	.LFE126:
 258              		.section	.text.GPIO_Configuration,"ax",%progbits
 259              		.align	1
 260              		.global	GPIO_Configuration
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	GPIO_Configuration:
 266              	.LFB127:
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** void GPIO_Configuration (void)
  72:main.c        **** {
 267              		.loc 1 72 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
  73:main.c        ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
 271              		.loc 1 73 7 view .LVU61
  72:main.c        ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
 272              		.loc 1 72 1 is_stmt 0 view .LVU62
 273 0000 10B5     		push	{r4, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 4, -8
 276              		.cfi_offset 14, -4
 277              		.loc 1 73 7 view .LVU63
 278 0002 3F4C     		ldr	r4, .L23
 279 0004 0722     		movs	r2, #7
 280 0006 2046     		mov	r0, r4
 281 0008 0221     		movs	r1, #2
 282 000a FFF7FEFF 		bl	GPIO_PinAFConfig
 283              	.LVL24:
  74:main.c        ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2);
 284              		.loc 1 74 7 is_stmt 1 view .LVU64
 285 000e 2046     		mov	r0, r4
 286 0010 0722     		movs	r2, #7
 287 0012 0321     		movs	r1, #3
 288 0014 FFF7FEFF 		bl	GPIO_PinAFConfig
 289              	.LVL25:
  75:main.c        ****       GPIO_Init_Pin(GPIOA,TXD2,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 290              		.loc 1 75 7 view .LVU65
 291 0018 2046     		mov	r0, r4
 292 001a 1223     		movs	r3, #18
 293 001c 0322     		movs	r2, #3
 294 001e 0421     		movs	r1, #4
 295 0020 FFF7FEFF 		bl	GPIO_Init_Pin
 296              	.LVL26:
  76:main.c        ****       GPIO_Init_Pin(GPIOA,RXD2,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 297              		.loc 1 76 7 view .LVU66
 298 0024 1223     		movs	r3, #18
 299 0026 2046     		mov	r0, r4
 300 0028 0322     		movs	r2, #3
 301 002a 0821     		movs	r1, #8
 302 002c FFF7FEFF 		bl	GPIO_Init_Pin
 303              	.LVL27:
  77:main.c        **** 
  78:main.c        ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1);
 304              		.loc 1 78 7 view .LVU67
 305 0030 2046     		mov	r0, r4
 306 0032 0722     		movs	r2, #7
 307 0034 0921     		movs	r1, #9
 308 0036 FFF7FEFF 		bl	GPIO_PinAFConfig
 309              	.LVL28:
  79:main.c        ****       GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);
 310              		.loc 1 79 7 view .LVU68
 311 003a 2046     		mov	r0, r4
 312 003c 0722     		movs	r2, #7
 313 003e 0A21     		movs	r1, #10
 314 0040 FFF7FEFF 		bl	GPIO_PinAFConfig
 315              	.LVL29:
  80:main.c        ****       GPIO_Init_Pin(GPIOA,TXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 316              		.loc 1 80 7 view .LVU69
 317 0044 2046     		mov	r0, r4
 318 0046 1223     		movs	r3, #18
 319 0048 0322     		movs	r2, #3
 320 004a 4FF40071 		mov	r1, #512
 321 004e FFF7FEFF 		bl	GPIO_Init_Pin
 322              	.LVL30:
  81:main.c        ****       GPIO_Init_Pin(GPIOA,RXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 323              		.loc 1 81 7 view .LVU70
 324 0052 1223     		movs	r3, #18
 325 0054 2046     		mov	r0, r4
 326 0056 0322     		movs	r2, #3
  82:main.c        **** 
  83:main.c        ****       GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_USART3);
 327              		.loc 1 83 7 is_stmt 0 view .LVU71
 328 0058 04F58064 		add	r4, r4, #1024
  81:main.c        ****       GPIO_Init_Pin(GPIOA,RXD1,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 329              		.loc 1 81 7 view .LVU72
 330 005c 4FF48061 		mov	r1, #1024
 331 0060 FFF7FEFF 		bl	GPIO_Init_Pin
 332              	.LVL31:
 333              		.loc 1 83 7 is_stmt 1 view .LVU73
 334 0064 2046     		mov	r0, r4
 335 0066 0722     		movs	r2, #7
 336 0068 0A21     		movs	r1, #10
 337 006a FFF7FEFF 		bl	GPIO_PinAFConfig
 338              	.LVL32:
  84:main.c        ****       GPIO_PinAFConfig(GPIOB,GPIO_PinSource11,GPIO_AF_USART3);
 339              		.loc 1 84 7 view .LVU74
 340 006e 2046     		mov	r0, r4
 341 0070 0722     		movs	r2, #7
 342 0072 0B21     		movs	r1, #11
 343 0074 FFF7FEFF 		bl	GPIO_PinAFConfig
 344              	.LVL33:
  85:main.c        ****       GPIO_Init_Pin(GPIOB,TXD3,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 345              		.loc 1 85 7 view .LVU75
 346 0078 2046     		mov	r0, r4
 347 007a 1223     		movs	r3, #18
 348 007c 0322     		movs	r2, #3
 349 007e 4FF48061 		mov	r1, #1024
 350 0082 FFF7FEFF 		bl	GPIO_Init_Pin
 351              	.LVL34:
  86:main.c        ****       GPIO_Init_Pin(GPIOB,RXD3,GPIO_Speed_100MHz,GPIO_Mode_AF_PP_PU);
 352              		.loc 1 86 7 view .LVU76
 353 0086 2046     		mov	r0, r4
 354 0088 1223     		movs	r3, #18
 355 008a 0322     		movs	r2, #3
 356 008c 4FF40061 		mov	r1, #2048
 357 0090 FFF7FEFF 		bl	GPIO_Init_Pin
 358              	.LVL35:
  87:main.c        **** 
  88:main.c        ****       GPIO_Init_Pin(GPIOC,WIFI_PGM_PIN,GPIO_Speed_100MHz,GPIO_Mode_Out_PP);
 359              		.loc 1 88 7 view .LVU77
 360 0094 0123     		movs	r3, #1
 361 0096 1946     		mov	r1, r3
  89:main.c        ****       
  90:main.c        ****       GPIO_Init_Pin(GPIOF,WIFI_RST_PIN,GPIO_Speed_100MHz,GPIO_Mode_Out_PP);
 362              		.loc 1 90 7 is_stmt 0 view .LVU78
 363 0098 04F58054 		add	r4, r4, #4096
  88:main.c        ****       
 364              		.loc 1 88 7 view .LVU79
 365 009c 1948     		ldr	r0, .L23+4
 366 009e 0322     		movs	r2, #3
 367 00a0 FFF7FEFF 		bl	GPIO_Init_Pin
 368              	.LVL36:
 369              		.loc 1 90 7 is_stmt 1 view .LVU80
 370 00a4 0123     		movs	r3, #1
 371 00a6 0322     		movs	r2, #3
 372 00a8 4021     		movs	r1, #64
 373 00aa 2046     		mov	r0, r4
 374 00ac FFF7FEFF 		bl	GPIO_Init_Pin
 375              	.LVL37:
  91:main.c        ****       GPIO_Init_Pin(GPIOF,LED0,GPIO_Speed_100MHz,GPIO_Mode_Out_PP);
 376              		.loc 1 91 7 view .LVU81
 377 00b0 0123     		movs	r3, #1
 378 00b2 0322     		movs	r2, #3
 379 00b4 4FF40071 		mov	r1, #512
 380 00b8 2046     		mov	r0, r4
 381 00ba FFF7FEFF 		bl	GPIO_Init_Pin
 382              	.LVL38:
  92:main.c        ****       GPIO_Init_Pin(GPIOF,LED1,GPIO_Speed_100MHz,GPIO_Mode_Out_PP);
 383              		.loc 1 92 7 view .LVU82
 384 00be 0123     		movs	r3, #1
 385 00c0 0322     		movs	r2, #3
 386 00c2 4FF48061 		mov	r1, #1024
 387 00c6 2046     		mov	r0, r4
 388 00c8 FFF7FEFF 		bl	GPIO_Init_Pin
 389              	.LVL39:
  93:main.c        ****       GPIO_Init_Pin(GPIOG,TXEN,GPIO_Speed_100MHz,GPIO_Mode_Out_PP);
 390              		.loc 1 93 7 view .LVU83
 391 00cc 0E48     		ldr	r0, .L23+8
 392 00ce 0123     		movs	r3, #1
 393 00d0 0322     		movs	r2, #3
 394 00d2 4FF48071 		mov	r1, #256
 395 00d6 FFF7FEFF 		bl	GPIO_Init_Pin
 396              	.LVL40:
  94:main.c        ****       WIFI_PGM = 1;
 397              		.loc 1 94 7 view .LVU84
 398              		.loc 1 94 16 is_stmt 0 view .LVU85
 399 00da 0C4B     		ldr	r3, .L23+12
  95:main.c        ****       WIFI_RST = 0;
  96:main.c        ****       LED_OUT0 = 1;
  97:main.c        ****       LED_OUT1 = 1;
  98:main.c        ****       TXEN_485 = 0;
 400              		.loc 1 98 16 view .LVU86
 401 00dc 0C48     		ldr	r0, .L23+16
  94:main.c        ****       WIFI_PGM = 1;
 402              		.loc 1 94 16 view .LVU87
 403 00de 0122     		movs	r2, #1
 404 00e0 C3F88022 		str	r2, [r3, #640]
  95:main.c        ****       WIFI_RST = 0;
 405              		.loc 1 95 7 is_stmt 1 view .LVU88
  95:main.c        ****       WIFI_RST = 0;
 406              		.loc 1 95 16 is_stmt 0 view .LVU89
 407 00e4 03F5C033 		add	r3, r3, #98304
 408 00e8 0021     		movs	r1, #0
 409 00ea C3F89812 		str	r1, [r3, #664]
  96:main.c        ****       LED_OUT1 = 1;
 410              		.loc 1 96 7 is_stmt 1 view .LVU90
  96:main.c        ****       LED_OUT1 = 1;
 411              		.loc 1 96 16 is_stmt 0 view .LVU91
 412 00ee C3F8A422 		str	r2, [r3, #676]
  97:main.c        ****       TXEN_485 = 0;
 413              		.loc 1 97 7 is_stmt 1 view .LVU92
  97:main.c        ****       TXEN_485 = 0;
 414              		.loc 1 97 16 is_stmt 0 view .LVU93
 415 00f2 C3F8A822 		str	r2, [r3, #680]
 416              		.loc 1 98 7 is_stmt 1 view .LVU94
 417              		.loc 1 98 16 is_stmt 0 view .LVU95
 418 00f6 C0F8A012 		str	r1, [r0, #672]
  99:main.c        ****       WIFI_RST = 1;
 419              		.loc 1 99 7 is_stmt 1 view .LVU96
 420              		.loc 1 99 16 is_stmt 0 view .LVU97
 421 00fa C3F89822 		str	r2, [r3, #664]
 100:main.c        **** }
 422              		.loc 1 100 1 view .LVU98
 423 00fe 10BD     		pop	{r4, pc}
 424              	.L24:
 425              		.align	2
 426              	.L23:
 427 0100 00000240 		.word	1073872896
 428 0104 00080240 		.word	1073874944
 429 0108 00180240 		.word	1073879040
 430 010c 00004142 		.word	1111556096
 431 0110 00004342 		.word	1111687168
 432              		.cfi_endproc
 433              	.LFE127:
 435              		.section	.text.NVIC_Configuration,"ax",%progbits
 436              		.align	1
 437              		.global	NVIC_Configuration
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	NVIC_Configuration:
 443              	.LFB128:
 101:main.c        **** 
 102:main.c        **** 
 103:main.c        **** #ifdef VECT_TAB_RAM
 104:main.c        **** /* vector-offset (TBLOFF) from bottom of SRAM. defined in linker script */
 105:main.c        **** extern unsigned int _isr_vectorsram_offs;
 106:main.c        **** void NVIC_Configuration (void)
 107:main.c        **** {
 108:main.c        ****       /* Set the Vector Table base location at 0x20000000 +_isr_vectorsram_offs */
 109:main.c        ****       NVIC_SetVectorTable(NVIC_VectTab_RAM, (unsigned int)&_isr_vectorsram_offs);
 110:main.c        **** }
 111:main.c        **** #else
 112:main.c        **** extern unsigned int _isr_vectorsflash_offs;
 113:main.c        **** void NVIC_Configuration (void)
 114:main.c        **** {
 444              		.loc 1 114 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 115:main.c        ****       /* Set the Vector Table base location at 0x08000000 +_isr_vectorsflash_offs */
 116:main.c        ****       NVIC_SetVectorTable(NVIC_VectTab_FLASH, (unsigned int)&_isr_vectorsflash_offs);
 449              		.loc 1 116 7 view .LVU100
 450 0000 0249     		ldr	r1, .L26
 451 0002 4FF00060 		mov	r0, #134217728
 452 0006 FFF7FEBF 		b	NVIC_SetVectorTable
 453              	.LVL41:
 454              	.L27:
 455 000a 00BF     		.align	2
 456              	.L26:
 457 000c 00000000 		.word	_isr_vectorsflash_offs
 458              		.cfi_endproc
 459              	.LFE128:
 461              		.section	.ramfunc,"ax",%progbits
 462              		.align	1
 463              		.global	SysTick_Handler
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	SysTick_Handler:
 469              	.LFB129:
 117:main.c        **** }
 118:main.c        **** #endif /* VECT_TAB_RAM */
 119:main.c        **** 
 120:main.c        **** extern void lcd_info (void);
 121:main.c        **** 
 122:main.c        **** RAMFUNC void SysTick_Handler (void)
 123:main.c        **** {
 470              		.loc 1 123 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 124:main.c        ****       static unsigned short cnt = 0;
 475              		.loc 1 124 7 view .LVU102
 125:main.c        ****       static unsigned char flip = 0;
 476              		.loc 1 125 7 view .LVU103
 126:main.c        ****       cnt++;
 477              		.loc 1 126 7 view .LVU104
 478              		.loc 1 126 10 is_stmt 0 view .LVU105
 479 0000 1E4A     		ldr	r2, .L45
 480 0002 1388     		ldrh	r3, [r2]
 481 0004 0133     		adds	r3, r3, #1
 482 0006 9BB2     		uxth	r3, r3
 127:main.c        ****       if (cnt >= 500) {
 483              		.loc 1 127 7 is_stmt 1 view .LVU106
 484              		.loc 1 127 10 is_stmt 0 view .LVU107
 485 0008 B3F5FA7F 		cmp	r3, #500
 486 000c 26D2     		bcs	.L29
 126:main.c        ****       cnt++;
 487              		.loc 1 126 10 view .LVU108
 488 000e 1380     		strh	r3, [r2]	@ movhi
 489              	.L30:
 128:main.c        ****          cnt = 0;
 129:main.c        ****          /* alive sign */
 130:main.c        ****          if (flip) {
 131:main.c        ****             time_led = ON;
 132:main.c        ****          } else {
 133:main.c        ****             time_led = OFF;
 134:main.c        ****          }
 135:main.c        ****       	 flip = !flip;
 136:main.c        ****       }
 137:main.c        ****       tick++;
 490              		.loc 1 137 7 is_stmt 1 view .LVU109
 491              		.loc 1 137 11 is_stmt 0 view .LVU110
 492 0010 1B4A     		ldr	r2, .L45+4
 493 0012 1388     		ldrh	r3, [r2]
 494 0014 0133     		adds	r3, r3, #1
 495 0016 9BB2     		uxth	r3, r3
 496 0018 1380     		strh	r3, [r2]	@ movhi
 138:main.c        ****       jiffes++;
 497              		.loc 1 138 7 is_stmt 1 view .LVU111
 498              		.loc 1 138 13 is_stmt 0 view .LVU112
 499 001a 1A4A     		ldr	r2, .L45+8
 500 001c 1388     		ldrh	r3, [r2]
 501 001e 0133     		adds	r3, r3, #1
 502 0020 9BB2     		uxth	r3, r3
 503 0022 1380     		strh	r3, [r2]	@ movhi
 139:main.c        ****       if (rxcnt1) rxck1++;
 504              		.loc 1 139 7 is_stmt 1 view .LVU113
 505              		.loc 1 139 11 is_stmt 0 view .LVU114
 506 0024 184B     		ldr	r3, .L45+12
 507 0026 1B88     		ldrh	r3, [r3]
 508 0028 9BB2     		uxth	r3, r3
 509              		.loc 1 139 10 view .LVU115
 510 002a 23B1     		cbz	r3, .L33
 511              		.loc 1 139 19 is_stmt 1 discriminator 1 view .LVU116
 512              		.loc 1 139 24 is_stmt 0 discriminator 1 view .LVU117
 513 002c 174A     		ldr	r2, .L45+16
 514 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 515 0030 0133     		adds	r3, r3, #1
 516 0032 DBB2     		uxtb	r3, r3
 517 0034 1370     		strb	r3, [r2]
 518              	.L33:
 140:main.c        ****       if (rxcnt2) rxck2++;
 519              		.loc 1 140 7 is_stmt 1 view .LVU118
 520              		.loc 1 140 11 is_stmt 0 view .LVU119
 521 0036 164B     		ldr	r3, .L45+20
 522 0038 1B88     		ldrh	r3, [r3]
 523 003a 9BB2     		uxth	r3, r3
 524              		.loc 1 140 10 view .LVU120
 525 003c 23B1     		cbz	r3, .L34
 526              		.loc 1 140 19 is_stmt 1 discriminator 1 view .LVU121
 527              		.loc 1 140 24 is_stmt 0 discriminator 1 view .LVU122
 528 003e 154A     		ldr	r2, .L45+24
 529 0040 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 530 0042 0133     		adds	r3, r3, #1
 531 0044 DBB2     		uxtb	r3, r3
 532 0046 1370     		strb	r3, [r2]
 533              	.L34:
 141:main.c        ****       if (rxcnt3) rxck3++;
 534              		.loc 1 141 7 is_stmt 1 view .LVU123
 535              		.loc 1 141 11 is_stmt 0 view .LVU124
 536 0048 134B     		ldr	r3, .L45+28
 537 004a 1B88     		ldrh	r3, [r3]
 538 004c 9BB2     		uxth	r3, r3
 539              		.loc 1 141 10 view .LVU125
 540 004e 23B1     		cbz	r3, .L28
 541              		.loc 1 141 19 is_stmt 1 discriminator 1 view .LVU126
 542              		.loc 1 141 24 is_stmt 0 discriminator 1 view .LVU127
 543 0050 124A     		ldr	r2, .L45+32
 544 0052 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 545 0054 0133     		adds	r3, r3, #1
 546 0056 DBB2     		uxtb	r3, r3
 547 0058 1370     		strb	r3, [r2]
 548              	.L28:
 142:main.c        **** }
 549              		.loc 1 142 1 view .LVU128
 550 005a 7047     		bx	lr
 551              	.L29:
 128:main.c        ****          /* alive sign */
 552              		.loc 1 128 10 is_stmt 1 view .LVU129
 128:main.c        ****          /* alive sign */
 553              		.loc 1 128 14 is_stmt 0 view .LVU130
 554 005c 0023     		movs	r3, #0
 555 005e 1380     		strh	r3, [r2]	@ movhi
 130:main.c        ****             time_led = ON;
 556              		.loc 1 130 10 is_stmt 1 view .LVU131
 130:main.c        ****             time_led = ON;
 557              		.loc 1 130 14 is_stmt 0 view .LVU132
 558 0060 0F4A     		ldr	r2, .L45+36
 559 0062 1049     		ldr	r1, .L45+40
 560 0064 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 130:main.c        ****             time_led = ON;
 561              		.loc 1 130 13 view .LVU133
 562 0066 33B1     		cbz	r3, .L31
 131:main.c        ****          } else {
 563              		.loc 1 131 13 is_stmt 1 view .LVU134
 131:main.c        ****          } else {
 564              		.loc 1 131 22 is_stmt 0 view .LVU135
 565 0068 0120     		movs	r0, #1
 566 006a 0870     		strb	r0, [r1]
 567              	.L32:
 135:main.c        ****       }
 568              		.loc 1 135 9 is_stmt 1 view .LVU136
 135:main.c        ****       }
 569              		.loc 1 135 16 is_stmt 0 view .LVU137
 570 006c B3FA83F3 		clz	r3, r3
 571 0070 5B09     		lsrs	r3, r3, #5
 572 0072 1370     		strb	r3, [r2]
 573 0074 CCE7     		b	.L30
 574              	.L31:
 133:main.c        ****          }
 575              		.loc 1 133 13 is_stmt 1 view .LVU138
 133:main.c        ****          }
 576              		.loc 1 133 22 is_stmt 0 view .LVU139
 577 0076 0B70     		strb	r3, [r1]
 578 0078 F8E7     		b	.L32
 579              	.L46:
 580 007a 00BF     		.align	2
 581              	.L45:
 582 007c 00000000 		.word	cnt.1
 583 0080 00000000 		.word	tick
 584 0084 00000000 		.word	jiffes
 585 0088 00000000 		.word	rxcnt1
 586 008c 00000000 		.word	rxck1
 587 0090 00000000 		.word	rxcnt2
 588 0094 00000000 		.word	rxck2
 589 0098 00000000 		.word	rxcnt3
 590 009c 00000000 		.word	rxck3
 591 00a0 00000000 		.word	flip.0
 592 00a4 00000000 		.word	time_led
 593              		.cfi_endproc
 594              	.LFE129:
 596              		.section	.text.watch_dog_init,"ax",%progbits
 597              		.align	1
 598              		.global	watch_dog_init
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 603              	watch_dog_init:
 604              	.LFB130:
 143:main.c        **** 
 144:main.c        **** 
 145:main.c        **** void watch_dog_init (void)
 146:main.c        **** {
 605              		.loc 1 146 1 is_stmt 1 view -0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 147:main.c        ****       /* Enable write access to IWDG_PR and IWDG_RLR registers */
 148:main.c        ****       IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
 609              		.loc 1 148 7 view .LVU141
 146:main.c        ****       /* Enable write access to IWDG_PR and IWDG_RLR registers */
 610              		.loc 1 146 1 is_stmt 0 view .LVU142
 611 0000 08B5     		push	{r3, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 3, -8
 614              		.cfi_offset 14, -4
 615              		.loc 1 148 7 view .LVU143
 616 0002 45F25550 		movw	r0, #21845
 617 0006 FFF7FEFF 		bl	IWDG_WriteAccessCmd
 618              	.LVL42:
 149:main.c        ****       /* IWDG counter clock: LSI/32 */
 150:main.c        ****       IWDG_SetPrescaler(IWDG_Prescaler_32);
 619              		.loc 1 150 7 is_stmt 1 view .LVU144
 620 000a 0320     		movs	r0, #3
 621 000c FFF7FEFF 		bl	IWDG_SetPrescaler
 622              	.LVL43:
 151:main.c        ****       /* Set counter reload value to obtain 250ms IWDG TimeOut. */
 152:main.c        ****       IWDG_SetReload(256);
 623              		.loc 1 152 7 view .LVU145
 624 0010 4FF48070 		mov	r0, #256
 625 0014 FFF7FEFF 		bl	IWDG_SetReload
 626              	.LVL44:
 153:main.c        ****       /* Reload IWDG counter */
 154:main.c        ****       IWDG_ReloadCounter();
 627              		.loc 1 154 7 view .LVU146
 628 0018 FFF7FEFF 		bl	IWDG_ReloadCounter
 629              	.LVL45:
 155:main.c        ****       /* Enable IWDG (the LSI oscillator will be enabled by hardware) */
 156:main.c        ****       IWDG_Enable();
 630              		.loc 1 156 7 view .LVU147
 157:main.c        **** }
 631              		.loc 1 157 1 is_stmt 0 view .LVU148
 632 001c BDE80840 		pop	{r3, lr}
 633              		.cfi_restore 14
 634              		.cfi_restore 3
 635              		.cfi_def_cfa_offset 0
 156:main.c        **** }
 636              		.loc 1 156 7 view .LVU149
 637 0020 FFF7FEBF 		b	IWDG_Enable
 638              	.LVL46:
 639              		.cfi_endproc
 640              	.LFE130:
 642              		.section	.rodata.main.str1.1,"aMS",%progbits,1
 643              	.LC0:
 644 0000 50726F67 		.ascii	"Program_Start.\000"
 644      72616D5F 
 644      53746172 
 644      742E00
 645              	.LC1:
 646 000f 4B455920 		.ascii	"KEY READ %.2X\000"
 646      52454144 
 646      20252E32 
 646      5800
 647              		.section	.text.startup.main,"ax",%progbits
 648              		.align	1
 649              		.global	main
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	main:
 655              	.LFB131:
 158:main.c        **** 
 159:main.c        **** 
 160:main.c        **** int main (void)
 161:main.c        **** {
 656              		.loc 1 161 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ Volatile: function does not return.
 659              		@ args = 0, pretend = 0, frame = 16
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 162:main.c        ****       RCC_ClocksTypeDef RCC_Clocks;
 661              		.loc 1 162 7 view .LVU151
 163:main.c        ****       /* System Clocks Configuration */
 164:main.c        ****       Periph_Configuration();
 662              		.loc 1 164 7 view .LVU152
 161:main.c        ****       RCC_ClocksTypeDef RCC_Clocks;
 663              		.loc 1 161 1 is_stmt 0 view .LVU153
 664 0000 8FB5     		push	{r0, r1, r2, r3, r7, lr}
 665              		.cfi_def_cfa_offset 24
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668              		.loc 1 164 7 view .LVU154
 669 0002 FFF7FEFF 		bl	Periph_Configuration
 670              	.LVL47:
 165:main.c        ****       /* NVIC configuration */
 166:main.c        ****       NVIC_Configuration();
 671              		.loc 1 166 7 is_stmt 1 view .LVU155
 672 0006 FFF7FEFF 		bl	NVIC_Configuration
 673              	.LVL48:
 167:main.c        ****       /* Configure the GPIO ports */
 168:main.c        ****       GPIO_Configuration();
 674              		.loc 1 168 7 view .LVU156
 675 000a FFF7FEFF 		bl	GPIO_Configuration
 676              	.LVL49:
 169:main.c        ****       RCC_GetClocksFreq(&RCC_Clocks);
 677              		.loc 1 169 7 view .LVU157
 678 000e 6846     		mov	r0, sp
 679 0010 FFF7FEFF 		bl	RCC_GetClocksFreq
 680              	.LVL50:
 170:main.c        ****       /* Setup SysTick Timer for 1 millisecond interrupts, also enables Systick and Systick-Interru
 171:main.c        ****       if (SysTick_Config(SystemCoreClock / 1000)) {
 681              		.loc 1 171 7 view .LVU158
 682              	.LBB22:
 683              	.LBI22:
 684              		.file 2 "/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h"
   1:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**************************************************************************//**
   2:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  * @file     core_cm4.h
   3:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  * @version  V4.30
   5:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  * @date     20. October 2015
   6:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  ******************************************************************************/
   7:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
   9:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    All rights reserved.
  10:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      to endorse or promote products derived from this software without
  19:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      specific prior written permission.
  20:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    *
  21:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  34:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  35:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
  40:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  41:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  44:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #include <stdint.h>
  45:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  46:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifdef __cplusplus
  47:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  extern "C" {
  48:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
  49:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  50:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
  51:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  54:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  57:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  60:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
  63:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  64:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  65:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*******************************************************************************
  66:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  *                 CMSIS definitions
  67:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  ******************************************************************************/
  68:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
  69:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup Cortex_M4
  70:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
  71:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
  72:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  73:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  79:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  81:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  82:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if   defined ( __CC_ARM )
  83:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  87:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  92:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __GNUC__ )
  93:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
  97:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 102:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __TMS470__ )
 103:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 106:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __TASKING__ )
 107:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 111:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __CSMC__ )
 112:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __packed
 113:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 117:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #else
 118:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #error Unknown compiler
 119:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 120:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 121:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
 124:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if defined ( __CC_ARM )
 125:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 128:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 129:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 131:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 132:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 133:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 134:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 135:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 136:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 140:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 141:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 143:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 144:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 145:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 146:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 147:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 148:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __GNUC__ )
 149:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 152:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 153:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 155:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 156:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 157:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 158:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 159:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 160:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined __ARMVFP__
 162:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 164:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 165:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 167:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 168:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 169:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 170:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 171:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 172:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __TMS470__ )
 173:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 176:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 177:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 179:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 180:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 181:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 182:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 183:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 184:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __TASKING__ )
 185:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if defined __FPU_VFP__
 186:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 188:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 189:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 191:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 192:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 193:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 194:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 195:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 196:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #elif defined ( __CSMC__ )
 197:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       1U
 200:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #else
 201:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****       #define __FPU_USED       0U
 203:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #endif
 204:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #else
 205:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_USED         0U
 206:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 207:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 208:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 209:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 210:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 214:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifdef __cplusplus
 215:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
 216:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 217:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 218:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 220:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 222:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 225:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifdef __cplusplus
 226:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  extern "C" {
 227:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 228:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 229:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* check device defines and use defaults */
 230:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #ifndef __CM4_REV
 232:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 235:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 236:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 240:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 241:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 245:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 246:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 250:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 251:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #endif
 255:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 256:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 257:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 259:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 261:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
 265:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #ifdef __cplusplus
 266:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #else
 268:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
 270:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 273:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* following defines should be used for structure members */
 274:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 278:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 280:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 281:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 282:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*******************************************************************************
 283:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  *                 Register Abstraction
 284:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   Core Register contain:
 285:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core Register
 286:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core NVIC Register
 287:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core SCB Register
 288:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core SysTick Register
 289:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core Debug Register
 290:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core MPU Register
 291:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core FPU Register
 292:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  ******************************************************************************/
 293:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 294:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
 297:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 298:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 299:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief      Core Register type definitions.
 302:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 303:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 304:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 305:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 306:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 308:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef union
 309:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 310:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   struct
 311:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 312:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } APSR_Type;
 323:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 324:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* APSR Register Definitions */
 325:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 328:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 331:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 334:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 337:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 340:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 343:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 344:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 345:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 347:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef union
 348:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 349:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   struct
 350:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 351:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } IPSR_Type;
 356:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 357:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* IPSR Register Definitions */
 358:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 361:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 362:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 363:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 365:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef union
 366:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 367:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   struct
 368:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 369:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } xPSR_Type;
 383:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 384:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* xPSR Register Definitions */
 385:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 388:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 391:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 394:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 397:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 400:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 403:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 406:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 409:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 412:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 413:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 414:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 416:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef union
 417:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 418:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   struct
 419:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 420:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } CONTROL_Type;
 427:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 428:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* CONTROL Register Definitions */
 429:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 432:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 435:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 438:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 440:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 441:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 442:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 446:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 447:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 448:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 449:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 451:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 452:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 453:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }  NVIC_Type;
 467:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 468:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 472:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 474:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 475:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 476:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 480:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 481:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 482:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 483:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 485:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 486:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 487:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } SCB_Type;
 509:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 510:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 514:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 517:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 520:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 523:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 526:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 530:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 533:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 536:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 539:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 542:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 545:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 548:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 551:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 554:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 557:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 561:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 565:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 568:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 571:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 574:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 577:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 580:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 583:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB System Control Register Definitions */
 584:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 587:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 590:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 593:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 597:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 600:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 603:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 606:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 609:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 612:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 616:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 619:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 622:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 625:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 628:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 631:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 634:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 637:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 640:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 643:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 646:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 649:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 652:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 655:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 659:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 662:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 665:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 669:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 672:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 675:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 679:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 682:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 685:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 688:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 691:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 693:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 694:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 695:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 699:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 700:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 701:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 704:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 705:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 706:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } SCnSCB_Type;
 710:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 711:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 715:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 719:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 722:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 725:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 728:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 731:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 733:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 734:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 735:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 739:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 740:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 741:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 742:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 744:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 745:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 746:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } SysTick_Type;
 751:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 752:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 756:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 759:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 762:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 765:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 769:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SysTick Current Register Definitions */
 770:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 773:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 777:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 780:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 783:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 785:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 786:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 787:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 791:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 792:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 793:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 796:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 797:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 798:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __OM  union
 799:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 800:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } ITM_Type;
 831:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 832:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 836:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 840:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 843:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 846:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 849:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 852:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 855:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 858:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 861:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 864:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 868:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 872:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 876:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 880:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 883:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 886:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 888:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 889:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 890:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
 894:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 895:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 896:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
 897:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
 899:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
 900:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 901:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } DWT_Type;
 925:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 926:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Control Register Definitions */
 927:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 930:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 933:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 936:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 939:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 942:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 945:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 948:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 951:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 954:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 957:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 960:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 963:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 966:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 969:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 972:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 975:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 978:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 981:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 985:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 989:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 993:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 997:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1001:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1005:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1009:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1012:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1015:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1018:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1021:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1024:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1027:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1030:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1033:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1035:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1036:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1037:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1041:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1042:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1043:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1044:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1046:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
1047:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1048:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } TPI_Type;
1073:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1074:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1078:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1082:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1086:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1089:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1092:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1095:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1099:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1102:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1106:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1110:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1113:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1116:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1119:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1122:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1125:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1128:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1132:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1136:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1139:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1142:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1145:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1148:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1151:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1154:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1158:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1162:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1166:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1169:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1172:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1175:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1178:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1181:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1185:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1188:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1190:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1191:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1193:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1197:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1198:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1199:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1200:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1202:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
1203:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1204:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } MPU_Type;
1216:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1217:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* MPU Type Register Definitions */
1218:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1221:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1224:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1227:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* MPU Control Register Definitions */
1228:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1231:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1234:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1237:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1241:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1245:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1248:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1251:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1255:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1258:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1261:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1264:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1267:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1270:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1273:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1276:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1279:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1282:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
1284:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1285:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1286:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1288:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1292:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1293:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1294:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1295:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1297:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
1298:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1299:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } FPU_Type;
1306:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1307:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1311:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1314:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1317:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1320:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1323:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1326:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1329:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1332:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1335:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1339:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1343:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1346:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1349:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1352:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1356:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1359:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1362:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1365:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1368:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1371:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1374:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1377:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1381:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1384:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1387:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1390:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
1392:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1393:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1394:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1395:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1399:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1400:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1401:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1402:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1404:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** typedef struct
1405:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1406:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** } CoreDebug_Type;
1411:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1412:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1416:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1419:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1422:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1425:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1428:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1431:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1434:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1437:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1440:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1443:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1446:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1449:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1453:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1456:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1460:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1463:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1466:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1469:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1472:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1475:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1478:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1481:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1484:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1487:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1490:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1493:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1496:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1498:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1499:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1500:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1504:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1505:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1506:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1507:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return           Masked and shifted value.
1511:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
1512:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1514:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1515:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param[in] value  Value of register.
1518:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
1520:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1522:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1524:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1525:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1526:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1530:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1531:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1532:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1542:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1551:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
1555:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1556:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #endif
1560:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1561:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} */
1562:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1563:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1564:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1565:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*******************************************************************************
1566:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  *                Hardware Abstraction Layer
1567:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   Core Function Interface contains:
1568:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core NVIC Functions
1569:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core SysTick Functions
1570:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core Debug Functions
1571:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   - Core Register Access Functions
1572:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  ******************************************************************************/
1573:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1574:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** */
1576:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1577:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1578:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1579:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1581:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1585:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1586:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1587:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1588:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Set Priority Grouping
1589:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            Only values from 0..7 are used.
1592:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1596:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1598:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t reg_value;
1599:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1601:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1608:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1609:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1610:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1611:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Get Priority Grouping
1612:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1615:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1617:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1619:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1620:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1621:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1622:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Enable External Interrupt
1623:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1626:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1628:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1630:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1631:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1632:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1633:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Disable External Interrupt
1634:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1637:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1639:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1641:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1642:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1643:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1644:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Get Pending Interrupt
1645:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1650:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1652:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1654:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1655:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1656:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1657:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Set Pending Interrupt
1658:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1661:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1663:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1665:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1666:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1667:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1668:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1672:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1674:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1676:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1677:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1678:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1679:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Get Active Interrupt
1680:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return             1  Interrupt status is active.
1684:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1685:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1687:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1689:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1690:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1691:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1692:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Set Interrupt Priority
1693:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1698:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1700:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1704:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   else
1705:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1706:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1708:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1709:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1710:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1711:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1712:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Get Interrupt Priority
1713:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return             Interrupt Priority.
1718:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1720:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1722:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1723:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1725:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1727:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   else
1728:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1729:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1731:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1732:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1733:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1734:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1735:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Encode Priority
1736:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1745:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1747:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1748:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t SubPriorityBits;
1750:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1751:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1752:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1753:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1754:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   return (
1755:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1756:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1757:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****          );
1758:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1759:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1760:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1761:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1762:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   Decode Priority
1763:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            preemptive priority value and subpriority value.
1765:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1772:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1774:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   uint32_t SubPriorityBits;
1777:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1778:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1781:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1784:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1785:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1786:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1787:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   System Reset
1788:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1790:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1792:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1793:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                                                                        buffered write are completed
1794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1795:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1796:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1798:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1799:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1800:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1801:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     __NOP();
1802:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1803:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** }
1804:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1805:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1807:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1808:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1809:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1811:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief    Functions that configure the System.
1814:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   @{
1815:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1816:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1817:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1819:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** /**
1820:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \brief   System Tick Configuration
1821:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1824:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return          0  Function succeeded.
1825:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \return          1  Function failed.
1826:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****  */
1830:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 685              		.loc 2 1830 26 view .LVU159
 686              	.LBB23:
1831:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
1832:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 687              		.loc 2 1832 3 view .LVU160
 688              	.LBE23:
 689              	.LBE22:
 690              		.loc 1 171 11 is_stmt 0 view .LVU161
 691 0014 494B     		ldr	r3, .L72
 692              	.LVL51:
 693              		.loc 1 171 11 view .LVU162
 694 0016 4FF47A72 		mov	r2, #1000
 695 001a 1B68     		ldr	r3, [r3]
 696              	.LVL52:
 697              		.loc 1 171 11 view .LVU163
 698 001c B3FBF2F3 		udiv	r3, r3, r2
 699              	.LVL53:
 700              	.LBB30:
 701              	.LBB28:
 702              		.loc 2 1832 14 view .LVU164
 703 0020 013B     		subs	r3, r3, #1
 704              	.LVL54:
 705              		.loc 2 1832 6 view .LVU165
 706 0022 B3F1807F 		cmp	r3, #16777216
 707 0026 6ED2     		bcs	.L49
1833:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
1834:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
1835:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
1836:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
1837:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 708              		.loc 2 1837 3 is_stmt 1 view .LVU166
 709              		.loc 2 1837 18 is_stmt 0 view .LVU167
 710 0028 4FF0E022 		mov	r2, #-536813568
 711              	.LBB24:
 712              	.LBB25:
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 713              		.loc 2 1702 55 view .LVU168
 714 002c 444D     		ldr	r5, .L72+4
 715              	.LBE25:
 716              	.LBE24:
 717              		.loc 2 1837 18 view .LVU169
 718 002e 5361     		str	r3, [r2, #20]
1838:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 719              		.loc 2 1838 3 is_stmt 1 view .LVU170
 720              	.LVL55:
 721              	.LBB27:
 722              	.LBI24:
1698:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 723              		.loc 2 1698 22 view .LVU171
 724              	.LBB26:
1700:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 725              		.loc 2 1700 3 view .LVU172
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 726              		.loc 2 1702 5 view .LVU173
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 727              		.loc 2 1702 55 is_stmt 0 view .LVU174
 728 0030 F023     		movs	r3, #240
 729              	.LVL56:
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 730              		.loc 2 1702 55 view .LVU175
 731 0032 85F82330 		strb	r3, [r5, #35]
 732              	.LVL57:
1702:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 733              		.loc 2 1702 55 view .LVU176
 734              	.LBE26:
 735              	.LBE27:
1839:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 736              		.loc 2 1839 3 is_stmt 1 view .LVU177
 737              		.loc 2 1839 18 is_stmt 0 view .LVU178
 738 0036 0026     		movs	r6, #0
1840:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 739              		.loc 2 1840 18 view .LVU179
 740 0038 0723     		movs	r3, #7
1839:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 741              		.loc 2 1839 18 view .LVU180
 742 003a 9661     		str	r6, [r2, #24]
 743              		.loc 2 1840 3 is_stmt 1 view .LVU181
 744              	.LBE28:
 745              	.LBE30:
 172:main.c        ****          /* Capture error */
 173:main.c        ****          while (1);
 174:main.c        ****       }
 175:main.c        ****       /* 4 bit for pre-emption priority, 0 bits for subpriority */
 176:main.c        ****       NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
 746              		.loc 1 176 7 is_stmt 0 view .LVU182
 747 003c 4FF44070 		mov	r0, #768
 748              	.LBB31:
 749              	.LBB29:
 750              		.loc 2 1840 18 view .LVU183
 751 0040 1361     		str	r3, [r2, #16]
1841:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1842:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1843:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 752              		.loc 2 1843 3 is_stmt 1 view .LVU184
 753              	.LVL58:
 754              		.loc 2 1843 3 is_stmt 0 view .LVU185
 755              	.LBE29:
 756              	.LBE31:
 757              		.loc 1 176 7 is_stmt 1 view .LVU186
 758 0042 FFF7FEFF 		bl	NVIC_PriorityGroupConfig
 759              	.LVL59:
 177:main.c        ****       if (FLASH_OB_GetRDP() != SET) {
 760              		.loc 1 177 7 view .LVU187
 761              		.loc 1 177 11 is_stmt 0 view .LVU188
 762 0046 FFF7FEFF 		bl	FLASH_OB_GetRDP
 763              	.LVL60:
 764              		.loc 1 177 10 discriminator 1 view .LVU189
 765 004a 0128     		cmp	r0, #1
 766              		.loc 1 177 11 view .LVU190
 767 004c 0446     		mov	r4, r0
 768              		.loc 1 177 10 discriminator 1 view .LVU191
 769 004e 5BD1     		bne	.L50
 178:main.c        ****          FLASH_Unlock();                           // this line is critical!
 179:main.c        ****          FLASH_OB_Unlock();
 180:main.c        ****          FLASH_OB_RDPConfig(OB_RDP_Level_1);
 181:main.c        ****          FLASH_OB_Launch();                        // Option Bytes programming
 182:main.c        ****          FLASH_OB_Lock();
 183:main.c        ****          FLASH_Lock();
 184:main.c        ****          NVIC_SystemReset();
 185:main.c        ****       }
 186:main.c        ****       serial_init();
 770              		.loc 1 186 7 is_stmt 1 view .LVU192
 771 0050 FFF7FEFF 		bl	serial_init
 772              	.LVL61:
 187:main.c        ****       LCD_Init();
 773              		.loc 1 187 7 view .LVU193
 774 0054 FFF7FEFF 		bl	LCD_Init
 775              	.LVL62:
 188:main.c        ****       init_i2c_24xx();
 776              		.loc 1 188 7 view .LVU194
 777 0058 FFF7FEFF 		bl	init_i2c_24xx
 778              	.LVL63:
 189:main.c        ****       ADC_Config();
 779              		.loc 1 189 7 view .LVU195
 780 005c FFF7FEFF 		bl	ADC_Config
 781              	.LVL64:
 190:main.c        ****       Dac1_Init();
 782              		.loc 1 190 7 view .LVU196
 783 0060 FFF7FEFF 		bl	Dac1_Init
 784              	.LVL65:
 191:main.c        ****       key_init();
 785              		.loc 1 191 7 view .LVU197
 786 0064 FFF7FEFF 		bl	key_init
 787              	.LVL66:
 192:main.c        ****       set_color(WHITE);
 788              		.loc 1 192 7 view .LVU198
 789 0068 4FF6FF70 		movw	r0, #65535
 790 006c FFF7FEFF 		bl	set_color
 791              	.LVL67:
 193:main.c        ****       lcd_printf(1,1,"Program_Start.");
 792              		.loc 1 193 7 view .LVU199
 793 0070 344A     		ldr	r2, .L72+8
 194:main.c        ****       Dac1_Set_Voltage(0);
 195:main.c        ****       while (1) {
 196:main.c        ****             if (tick) {
 794              		.loc 1 196 17 is_stmt 0 view .LVU200
 795 0072 354D     		ldr	r5, .L72+12
 193:main.c        ****       lcd_printf(1,1,"Program_Start.");
 796              		.loc 1 193 7 view .LVU201
 797 0074 2146     		mov	r1, r4
 798 0076 2046     		mov	r0, r4
 799 0078 FFF7FEFF 		bl	lcd_printf
 800              	.LVL68:
 194:main.c        ****       Dac1_Set_Voltage(0);
 801              		.loc 1 194 7 is_stmt 1 view .LVU202
 802 007c 3046     		mov	r0, r6
 803 007e FFF7FEFF 		bl	Dac1_Set_Voltage
 804              	.LVL69:
 197:main.c        ****                tick = 0;
 198:main.c        ****                /* Reload IWDG counter */
 199:main.c        ****                IWDG_ReloadCounter();
 200:main.c        ****                read_key = key_read();
 201:main.c        ****                if (old_key != read_key) {
 202:main.c        ****                	  old_key = read_key;
 203:main.c        ****                	  lcd_printf(1,7,"KEY READ %.2X",read_key);
 204:main.c        ****                }
 205:main.c        ****                adc_process();
 206:main.c        ****                serial_check();
 207:main.c        ****                if (remote == 0) {
 208:main.c        ****                   if (time_led == ON) LED_OUT0 = 0;else LED_OUT0 = 1;
 209:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 805              		.loc 1 209 23 is_stmt 0 view .LVU203
 806 0082 324E     		ldr	r6, .L72+16
 807              	.L53:
 200:main.c        ****                if (old_key != read_key) {
 808              		.loc 1 200 25 discriminator 1 view .LVU204
 809 0084 324C     		ldr	r4, .L72+20
 201:main.c        ****                	  old_key = read_key;
 810              		.loc 1 201 28 view .LVU205
 811 0086 334F     		ldr	r7, .L72+24
 812              	.L54:
 195:main.c        ****             if (tick) {
 813              		.loc 1 195 7 is_stmt 1 view .LVU206
 196:main.c        ****                tick = 0;
 814              		.loc 1 196 13 view .LVU207
 196:main.c        ****                tick = 0;
 815              		.loc 1 196 17 is_stmt 0 view .LVU208
 816 0088 2B88     		ldrh	r3, [r5]
 817 008a 9BB2     		uxth	r3, r3
 196:main.c        ****                tick = 0;
 818              		.loc 1 196 16 view .LVU209
 819 008c 002B     		cmp	r3, #0
 820 008e FBD0     		beq	.L54
 197:main.c        ****                /* Reload IWDG counter */
 821              		.loc 1 197 16 is_stmt 1 view .LVU210
 197:main.c        ****                /* Reload IWDG counter */
 822              		.loc 1 197 21 is_stmt 0 view .LVU211
 823 0090 0023     		movs	r3, #0
 824 0092 2B80     		strh	r3, [r5]	@ movhi
 199:main.c        ****                read_key = key_read();
 825              		.loc 1 199 16 is_stmt 1 view .LVU212
 826 0094 FFF7FEFF 		bl	IWDG_ReloadCounter
 827              	.LVL70:
 200:main.c        ****                if (old_key != read_key) {
 828              		.loc 1 200 16 view .LVU213
 200:main.c        ****                if (old_key != read_key) {
 829              		.loc 1 200 27 is_stmt 0 view .LVU214
 830 0098 FFF7FEFF 		bl	key_read
 831              	.LVL71:
 200:main.c        ****                if (old_key != read_key) {
 832              		.loc 1 200 25 discriminator 1 view .LVU215
 833 009c 2070     		strb	r0, [r4]
 201:main.c        ****                	  old_key = read_key;
 834              		.loc 1 201 16 is_stmt 1 view .LVU216
 201:main.c        ****                	  old_key = read_key;
 835              		.loc 1 201 28 is_stmt 0 view .LVU217
 836 009e 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 837 00a0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 201:main.c        ****                	  old_key = read_key;
 838              		.loc 1 201 19 view .LVU218
 839 00a2 9A42     		cmp	r2, r3
 840 00a4 08D0     		beq	.L55
 202:main.c        ****                	  lcd_printf(1,7,"KEY READ %.2X",read_key);
 841              		.loc 1 202 19 is_stmt 1 view .LVU219
 202:main.c        ****                	  lcd_printf(1,7,"KEY READ %.2X",read_key);
 842              		.loc 1 202 27 is_stmt 0 view .LVU220
 843 00a6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 203:main.c        ****                }
 844              		.loc 1 203 19 view .LVU221
 845 00a8 2B4A     		ldr	r2, .L72+28
 202:main.c        ****                	  lcd_printf(1,7,"KEY READ %.2X",read_key);
 846              		.loc 1 202 27 view .LVU222
 847 00aa DBB2     		uxtb	r3, r3
 848 00ac 3B70     		strb	r3, [r7]
 203:main.c        ****                }
 849              		.loc 1 203 19 is_stmt 1 view .LVU223
 850 00ae 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 851 00b0 0721     		movs	r1, #7
 852 00b2 0120     		movs	r0, #1
 853 00b4 FFF7FEFF 		bl	lcd_printf
 854              	.LVL72:
 855              	.L55:
 205:main.c        ****                serial_check();
 856              		.loc 1 205 16 view .LVU224
 857 00b8 FFF7FEFF 		bl	adc_process
 858              	.LVL73:
 206:main.c        ****                if (remote == 0) {
 859              		.loc 1 206 16 view .LVU225
 860 00bc FFF7FEFF 		bl	serial_check
 861              	.LVL74:
 207:main.c        ****                   if (time_led == ON) LED_OUT0 = 0;else LED_OUT0 = 1;
 862              		.loc 1 207 16 view .LVU226
 207:main.c        ****                   if (time_led == ON) LED_OUT0 = 0;else LED_OUT0 = 1;
 863              		.loc 1 207 27 is_stmt 0 view .LVU227
 864 00c0 264B     		ldr	r3, .L72+32
 865 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 207:main.c        ****                   if (time_led == ON) LED_OUT0 = 0;else LED_OUT0 = 1;
 866              		.loc 1 207 19 view .LVU228
 867 00c4 03F0FF02 		and	r2, r3, #255
 868 00c8 002B     		cmp	r3, #0
 869 00ca DDD1     		bne	.L54
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 870              		.loc 1 208 19 is_stmt 1 view .LVU229
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 871              		.loc 1 208 32 is_stmt 0 view .LVU230
 872 00cc 244B     		ldr	r3, .L72+36
 873 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 874              		.loc 1 208 22 view .LVU231
 875 00d0 012B     		cmp	r3, #1
 876 00d2 244B     		ldr	r3, .L72+40
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 877              		.loc 1 208 39 is_stmt 1 discriminator 1 view .LVU232
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 878              		.loc 1 208 57 discriminator 2 view .LVU233
 208:main.c        ****                   if ((tx_led) || (rx_led)) LED_OUT1 = 0;
 879              		.loc 1 208 66 is_stmt 0 discriminator 2 view .LVU234
 880 00d4 18BF     		it	ne
 881 00d6 0122     		movne	r2, #1
 882 00d8 C3F8A422 		str	r2, [r3, #676]
 883              		.loc 1 209 19 is_stmt 1 view .LVU235
 884              		.loc 1 209 23 is_stmt 0 view .LVU236
 885 00dc 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 886              		.loc 1 209 22 view .LVU237
 887 00de 13B9     		cbnz	r3, .L59
 888              		.loc 1 209 32 discriminator 2 view .LVU238
 889 00e0 214B     		ldr	r3, .L72+44
 890 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 891 00e4 1BB1     		cbz	r3, .L60
 892              	.L59:
 893              		.loc 1 209 45 is_stmt 1 discriminator 3 view .LVU239
 894              		.loc 1 209 54 is_stmt 0 discriminator 3 view .LVU240
 895 00e6 1F4B     		ldr	r3, .L72+40
 896 00e8 0022     		movs	r2, #0
 897 00ea C3F8A822 		str	r2, [r3, #680]
 898              	.L60:
 210:main.c        ****                   if ((tx_led == 0) && (rx_led == 0)) LED_OUT1 = 1;
 899              		.loc 1 210 19 is_stmt 1 view .LVU241
 900              		.loc 1 210 31 is_stmt 0 view .LVU242
 901 00ee 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 902              		.loc 1 210 22 view .LVU243
 903 00f0 002B     		cmp	r3, #0
 904 00f2 C7D1     		bne	.L53
 905              		.loc 1 210 48 discriminator 1 view .LVU244
 906 00f4 1C4B     		ldr	r3, .L72+44
 907 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908              		.loc 1 210 37 discriminator 1 view .LVU245
 909 00f8 002B     		cmp	r3, #0
 910 00fa C3D1     		bne	.L53
 911              		.loc 1 210 55 is_stmt 1 discriminator 2 view .LVU246
 912              		.loc 1 210 64 is_stmt 0 discriminator 2 view .LVU247
 913 00fc 194B     		ldr	r3, .L72+40
 914 00fe 0122     		movs	r2, #1
 915 0100 C3F8A822 		str	r2, [r3, #680]
 916 0104 BEE7     		b	.L53
 917              	.L49:
 173:main.c        ****       }
 918              		.loc 1 173 10 is_stmt 1 view .LVU248
 173:main.c        ****       }
 919              		.loc 1 173 16 view .LVU249
 920 0106 FEE7     		b	.L49
 921              	.L50:
 178:main.c        ****          FLASH_OB_Unlock();
 922              		.loc 1 178 10 view .LVU250
 923 0108 FFF7FEFF 		bl	FLASH_Unlock
 924              	.LVL75:
 179:main.c        ****          FLASH_OB_RDPConfig(OB_RDP_Level_1);
 925              		.loc 1 179 10 view .LVU251
 926 010c FFF7FEFF 		bl	FLASH_OB_Unlock
 927              	.LVL76:
 180:main.c        ****          FLASH_OB_Launch();                        // Option Bytes programming
 928              		.loc 1 180 10 view .LVU252
 929 0110 5520     		movs	r0, #85
 930 0112 FFF7FEFF 		bl	FLASH_OB_RDPConfig
 931              	.LVL77:
 181:main.c        ****          FLASH_OB_Lock();
 932              		.loc 1 181 10 view .LVU253
 933 0116 FFF7FEFF 		bl	FLASH_OB_Launch
 934              	.LVL78:
 182:main.c        ****          FLASH_Lock();
 935              		.loc 1 182 10 view .LVU254
 936 011a FFF7FEFF 		bl	FLASH_OB_Lock
 937              	.LVL79:
 183:main.c        ****          NVIC_SystemReset();
 938              		.loc 1 183 10 view .LVU255
 939 011e FFF7FEFF 		bl	FLASH_Lock
 940              	.LVL80:
 184:main.c        ****       }
 941              		.loc 1 184 10 view .LVU256
 942              	.LBB32:
 943              	.LBI32:
1790:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** {
 944              		.loc 2 1790 22 view .LVU257
 945              	.LBB33:
1792:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                                                                        buffered write are completed
 946              		.loc 2 1792 3 view .LVU258
 947              	.LBB34:
 948              	.LBI34:
 949              		.file 3 "/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h"
   1:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**************************************************************************//**
   2:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * @version  V4.30
   5:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * @date     20. October 2015
   6:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  ******************************************************************************/
   7:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
   9:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    All rights reserved.
  10:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****      specific prior written permission.
  20:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    *
  21:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  34:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  35:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  38:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif
  45:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  46:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  47:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   @{
  51:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
  52:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  53:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
  54:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
  58:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
  60:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
  62:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  63:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  64:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
  65:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
  69:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
  71:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
  73:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  74:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  75:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
  76:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Control Register
  77:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               Control Register value
  79:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
  80:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
  82:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
  83:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  84:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
  86:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
  87:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  88:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  89:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
  90:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Control Register
  91:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
  94:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
  96:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
  98:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
  99:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 100:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 101:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               IPSR Register value
 104:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 105:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 107:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 108:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 109:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 111:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 112:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 113:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 114:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 115:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get APSR Register
 116:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               APSR Register value
 118:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 119:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 121:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 122:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 123:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 125:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 126:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 127:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 128:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 129:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 132:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****     \return               xPSR Register value
 133:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 134:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 136:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 137:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 138:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 140:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 141:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 142:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 143:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 144:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               PSP Register value
 147:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 148:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 150:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   register uint32_t result;
 151:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 152:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 154:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 155:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 156:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 157:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 158:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 162:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 164:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   //__ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : );  
 166:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 167:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 168:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 169:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 170:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 171:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 172:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               MSP Register value
 173:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 174:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 175:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 176:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   register uint32_t result;
 177:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 178:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 179:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 180:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 181:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 182:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 183:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 184:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 185:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 186:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 187:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 188:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 189:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 190:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 191:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   //__ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 192:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : );  
 193:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 194:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 195:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 196:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 197:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Priority Mask
 198:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 199:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               Priority Mask value
 200:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 201:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 202:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 203:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 204:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 205:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 206:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 207:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 208:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 209:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 210:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 211:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Priority Mask
 212:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 213:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 214:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 215:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 216:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 217:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 218:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 219:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 220:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 221:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 222:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 223:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 224:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Enable FIQ
 225:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 226:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 227:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 228:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 229:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 230:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 231:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 232:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 233:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 234:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 235:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Disable FIQ
 236:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 237:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 238:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 239:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 240:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 241:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 242:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 243:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 244:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 245:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 246:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Base Priority
 247:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 248:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               Base Priority register value
 249:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 250:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 251:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 252:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 253:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 254:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 255:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 256:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 257:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 258:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 259:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 260:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority
 261:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 262:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 263:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 264:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 265:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 266:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 267:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 268:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 269:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 270:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 271:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 272:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 273:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 274:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 275:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 276:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 277:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 278:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 279:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 280:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 281:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 282:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 283:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get Fault Mask
 284:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 285:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               Fault Mask register value
 286:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 287:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 288:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 289:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 290:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 291:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 292:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 293:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 294:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 295:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 296:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 297:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set Fault Mask
 298:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 299:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 300:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 301:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 302:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 303:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 304:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 305:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 306:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 307:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 308:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 309:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 310:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 311:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 312:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Get FPSCR
 313:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 314:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 315:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 316:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 317:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 318:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 319:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   uint32_t result;
 320:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 321:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 322:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 323:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 324:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 325:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   return(result);
 326:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #else
 327:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****    return(0);
 328:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif
 329:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 330:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 331:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 332:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 333:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Set FPSCR
 334:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 335:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 336:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 337:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 338:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 339:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 340:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 341:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 342:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 343:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("");
 344:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif
 345:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 346:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 347:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 348:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 349:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 350:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 351:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 352:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 353:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 354:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 355:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 356:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   Access to dedicated instructions
 357:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   @{
 358:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** */
 359:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 360:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 361:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 362:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 363:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 364:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 365:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 366:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #else
 367:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 368:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 369:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** #endif
 370:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 371:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 372:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   No Operation
 373:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 374:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 375:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 376:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 377:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("nop");
 378:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 379:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 380:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 381:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 382:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Wait For Interrupt
 383:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 384:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 385:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 386:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 387:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfi");
 388:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 389:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 390:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 391:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 392:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Wait For Event
 393:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 394:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 395:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 396:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 397:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 398:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("wfe");
 399:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 400:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 401:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 402:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 403:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Send Event
 404:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 405:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 406:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 407:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 408:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("sev");
 409:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 410:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 411:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 412:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 413:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 414:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 415:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 416:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            after the instruction has been completed.
 417:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 418:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 419:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 420:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 421:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 422:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 423:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** 
 424:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** /**
 425:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 426:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 427:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 428:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****  */
 429:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 950              		.loc 3 429 53 view .LVU259
 951              	.LBB35:
 430:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 431:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 952              		.loc 3 431 3 view .LVU260
 953              		.syntax unified
 954              	@ 431 "/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
 955 0122 BFF34F8F 		dsb 0xF
 956              	@ 0 "" 2
 957              		.thumb
 958              		.syntax unified
 959              	.LBE35:
 960              	.LBE34:
1794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 961              		.loc 2 1794 3 view .LVU261
1795:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
 962              		.loc 2 1795 32 is_stmt 0 view .LVU262
 963 0126 EA68     		ldr	r2, [r5, #12]
1794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 964              		.loc 2 1794 17 view .LVU263
 965 0128 104B     		ldr	r3, .L72+48
1795:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
 966              		.loc 2 1795 40 view .LVU264
 967 012a 02F4E062 		and	r2, r2, #1792
1794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 968              		.loc 2 1794 17 view .LVU265
 969 012e 1343     		orrs	r3, r3, r2
1794:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 970              		.loc 2 1794 15 view .LVU266
 971 0130 EB60     		str	r3, [r5, #12]
1797:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h **** 
 972              		.loc 2 1797 3 is_stmt 1 view .LVU267
 973              	.LBB36:
 974              	.LBI36:
 429:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 975              		.loc 3 429 53 view .LVU268
 976              	.LBB37:
 977              		.loc 3 431 3 view .LVU269
 978              		.syntax unified
 979              	@ 431 "/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
 980 0132 BFF34F8F 		dsb 0xF
 981              	@ 0 "" 2
 982              		.thumb
 983              		.syntax unified
 984              	.L52:
 985              	.LBE37:
 986              	.LBE36:
1799:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 987              		.loc 2 1799 3 view .LVU270
1801:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   }
 988              		.loc 2 1801 5 discriminator 1 view .LVU271
 989              	.LBB38:
 990              	.LBI38:
 375:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** {
 991              		.loc 3 375 53 view .LVU272
 992              	.LBB39:
 377:/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h **** }
 993              		.loc 3 377 3 view .LVU273
 994              		.syntax unified
 995              	@ 377 "/project/stm32fx_iolib/stm32fxxx/cmsis/cmsis_gcc.h" 1
 996 0136 00BF     		nop
 997              	@ 0 "" 2
 998              		.thumb
 999              		.syntax unified
 1000              	.LBE39:
 1001              	.LBE38:
1799:/project/stm32fx_iolib/stm32fxxx/cmsis/core_cm4.h ****   {
 1002              		.loc 2 1799 3 view .LVU274
 1003 0138 FDE7     		b	.L52
 1004              	.L73:
 1005 013a 00BF     		.align	2
 1006              	.L72:
 1007 013c 00000000 		.word	SystemCoreClock
 1008 0140 00ED00E0 		.word	-536810240
 1009 0144 00000000 		.word	.LC0
 1010 0148 00000000 		.word	tick
 1011 014c 00000000 		.word	tx_led
 1012 0150 00000000 		.word	read_key
 1013 0154 00000000 		.word	old_key
 1014 0158 0F000000 		.word	.LC1
 1015 015c 00000000 		.word	remote
 1016 0160 00000000 		.word	time_led
 1017 0164 00804242 		.word	1111654400
 1018 0168 00000000 		.word	rx_led
 1019 016c 0400FA05 		.word	100270084
 1020              	.LBE33:
 1021              	.LBE32:
 1022              		.cfi_endproc
 1023              	.LFE131:
 1025              		.section	.bss.flip.0,"aw",%nobits
 1028              	flip.0:
 1029 0000 00       		.space	1
 1030              		.section	.bss.cnt.1,"aw",%nobits
 1031              		.align	1
 1034              	cnt.1:
 1035 0000 0000     		.space	2
 1036              		.global	FLASHStatus
 1037              		.section	.data.FLASHStatus,"aw"
 1040              	FLASHStatus:
 1041 0000 09       		.byte	9
 1042              		.global	remote
 1043              		.section	.bss.remote,"aw",%nobits
 1046              	remote:
 1047 0000 00       		.space	1
 1048              		.global	old_key
 1049              		.section	.bss.old_key,"aw",%nobits
 1052              	old_key:
 1053 0000 00       		.space	1
 1054              		.global	read_key
 1055              		.section	.bss.read_key,"aw",%nobits
 1058              	read_key:
 1059 0000 00       		.space	1
 1060              		.global	time_led
 1061              		.section	.bss.time_led,"aw",%nobits
 1064              	time_led:
 1065 0000 00       		.space	1
 1066              		.global	jiffes
 1067              		.section	.bss.jiffes,"aw",%nobits
 1068              		.align	1
 1071              	jiffes:
 1072 0000 0000     		.space	2
 1073              		.global	tick
 1074              		.section	.bss.tick,"aw",%nobits
 1075              		.align	1
 1078              	tick:
 1079 0000 0000     		.space	2
 1080              		.text
 1081              	.Letext0:
 1082              		.file 4 "/project/stm32fx_iolib/stm32fxxx/stm32f4xx/stm32f4xx.h"
 1083              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.3 rel1/arm-none-eabi/include/ma
 1084              		.file 6 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/13.3 rel1/arm-none-eabi/include/sy
 1085              		.file 7 "/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_flash.h"
 1086              		.file 8 "/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_gpio.h"
 1087              		.file 9 "/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_rcc.h"
 1088              		.file 10 "/project/stm32fx_iolib/stm32fxxx/stm32f4xx/system_stm32f4xx.h"
 1089              		.file 11 "userdefs.h"
 1090              		.file 12 "source/prototype.h"
 1091              		.file 13 "/project/stm32fx_iolib/stm32f4x_iolib/include/misc.h"
 1092              		.file 14 "/project/stm32fx_iolib/stm32f4x_iolib/include/stm32f4xx_iwdg.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:21     .text.wait_ms:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:27     .text.wait_ms:00000000 wait_ms
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:82     .text.wait_ms:00000028 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1071   .bss.jiffes:00000000 jiffes
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:87     .text.hex2dec:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:93     .text.hex2dec:00000000 hex2dec
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:151    .text.dec2hex:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:157    .text.dec2hex:00000000 dec2hex
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:202    .text.Periph_Configuration:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:208    .text.Periph_Configuration:00000000 Periph_Configuration
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:254    .text.Periph_Configuration:00000034 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:259    .text.GPIO_Configuration:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:265    .text.GPIO_Configuration:00000000 GPIO_Configuration
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:427    .text.GPIO_Configuration:00000100 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:436    .text.NVIC_Configuration:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:442    .text.NVIC_Configuration:00000000 NVIC_Configuration
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:457    .text.NVIC_Configuration:0000000c $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:462    .ramfunc:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:468    .ramfunc:00000000 SysTick_Handler
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:582    .ramfunc:0000007c $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1034   .bss.cnt.1:00000000 cnt.1
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1078   .bss.tick:00000000 tick
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1028   .bss.flip.0:00000000 flip.0
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1064   .bss.time_led:00000000 time_led
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:597    .text.watch_dog_init:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:603    .text.watch_dog_init:00000000 watch_dog_init
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:648    .text.startup.main:00000000 $t
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:654    .text.startup.main:00000000 main
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1007   .text.startup.main:0000013c $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1058   .bss.read_key:00000000 read_key
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1052   .bss.old_key:00000000 old_key
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1046   .bss.remote:00000000 remote
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1029   .bss.flip.0:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1031   .bss.cnt.1:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1040   .data.FLASHStatus:00000000 FLASHStatus
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1047   .bss.remote:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1053   .bss.old_key:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1059   .bss.read_key:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1065   .bss.time_led:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1068   .bss.jiffes:00000000 $d
C:\Users\gedha\AppData\Local\Temp\ccaL94gd.s:1075   .bss.tick:00000000 $d

UNDEFINED SYMBOLS
IWDG_ReloadCounter
RCC_AHB1PeriphClockCmd
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_PinAFConfig
GPIO_Init_Pin
NVIC_SetVectorTable
_isr_vectorsflash_offs
rxcnt1
rxck1
rxcnt2
rxck2
rxcnt3
rxck3
IWDG_WriteAccessCmd
IWDG_SetPrescaler
IWDG_SetReload
IWDG_Enable
RCC_GetClocksFreq
NVIC_PriorityGroupConfig
FLASH_OB_GetRDP
serial_init
LCD_Init
init_i2c_24xx
ADC_Config
Dac1_Init
key_init
set_color
lcd_printf
Dac1_Set_Voltage
key_read
adc_process
serial_check
FLASH_Unlock
FLASH_OB_Unlock
FLASH_OB_RDPConfig
FLASH_OB_Launch
FLASH_OB_Lock
FLASH_Lock
SystemCoreClock
tx_led
rx_led
